"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[32990],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,o=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),h=p(a),c=i,g=h["".concat(o,".").concat(c)]||h[c]||u[c]||n;return a?r.createElement(g,l(l({ref:t},s),{},{components:a})):r.createElement(g,l({ref:t},s))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,l=new Array(n);l[0]=h;var m={};for(var o in t)hasOwnProperty.call(t,o)&&(m[o]=t[o]);m.originalType=e,m.mdxType="string"==typeof e?e:i,l[1]=m;for(var p=2;p<n;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},76209:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return u}});var r=a(87462),i=a(63366),n=(a(67294),a(3905)),l=["components"],m={},o="Nim libraries",p={unversionedId:"programming-languages/nim/nim-libraries",id:"programming-languages/nim/nim-libraries",title:"Nim libraries",description:"Web",source:"@site/docs/programming-languages/nim/nim-libraries.md",sourceDirName:"programming-languages/nim",slug:"/programming-languages/nim/nim-libraries",permalink:"/kinderheim/programming-languages/nim/nim-libraries",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/nim/nim-libraries.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Nim",permalink:"/kinderheim/programming-languages/nim/"},next:{title:"Objective C",permalink:"/kinderheim/programming-languages/objc/"}},s={},u=[{value:"Web",id:"web",level:2},{value:"Math",id:"math",level:2},{value:"Graphics",id:"graphics",level:2},{value:"Crypto",id:"crypto",level:2},{value:"CLI",id:"cli",level:2},{value:"DB",id:"db",level:2},{value:"Other",id:"other",level:2},{value:"Links",id:"links",level:2}],h={toc:u};function c(e){var t=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"nim-libraries"},"Nim libraries"),(0,n.kt)("h2",{id:"web"},"Web"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dom96/httpbeast"},"httpbeast")," - Highly performant, multi-threaded HTTP 1.1 server written in Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/planety/prologue"},"Prologue")," - Full-Stack Web Framework which is ideal for building elegant and high performance web services. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24846828"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/andreaferretti/rosencrantz"},"Rosencrantz")," - DSL to write web servers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/status-im/nim-libp2p"},"nim-libp2p")," - libp2p implementation in Nim.")),(0,n.kt)("h2",{id:"math"},"Math"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/unicredit/neo"},"Neo")," - Provides basic linear algebra operations for Nim applications.")),(0,n.kt)("h2",{id:"graphics"},"Graphics"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Ethosa/nodesnim"},"Nodesnim")," - Nim GUI/2D framework, based on OpenGL and SDL2."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/treeform/pixie"},"Pixie")," - Full-featured 2D graphics library for Nim. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28506220"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/GabrielLasso/drawim"},"Drawim")," - Simple drawing library in Nim, inspired by p5js. Builds to native, using OpenGL, and to JavaScript, using HTML5 Canvas.")),(0,n.kt)("h2",{id:"crypto"},"Crypto"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mratsim/constantine"},"Constantine")," - Fast, compact, hardened Pairing-Based Cryptography.")),(0,n.kt)("h2",{id:"cli"},"CLI"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/juancarlospaco/cliche"},"CLIche")," - AutoMagic CLI argument parsing is cliche.")),(0,n.kt)("h2",{id:"db"},"DB"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/snej/nimdbx"},"nimdbx")," - Extremely fast persistent key-value store for the Nim language, based on the amazing MDBX library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/xzfc/ndb.nim"},"ndb/sqlite")," - Of db_sqlite, Nim's standard library higher level SQLite database wrapper.")),(0,n.kt)("h2",{id:"other"},"Other"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mratsim/Arraymancer"},"Arraymancer")," - N-dimensional tensor (ndarray) library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/paranim/paranim"},"paranim")," - Nim game library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mratsim/Synthesis"},"Synthesis")," - Exports a set of macros to synthesize static procedure-based automata from a declarative description of states, triggers and transitions with all states, triggers and transitions known at compile-time."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/byt3bl33d3r/OffensiveNim"},"OffensiveNim")," - Experiments in weaponizing Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yglukhov/iface"},"iface")," - Dynamic dispatch on steroids."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yglukhov/nimx"},"nimx")," - Cross-platform GUI framework in Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/narimiran/itertools"},"Itertools")," - Nim rewrite of a very popular Python module of the same name."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/andreaferretti/patty"},"Patty")," - Pattern matching library for Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bluenote10/NimData"},"NimData")," - DataFrame API written in Nim, enabling fast out-of-core data processing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/markspanbroek/questionable"},"Questionable")," - Elegant optional types for Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/n0bra1n3r/cinterop"},"cinterop")," - C/C++ interop library for Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/loloicci/nimly"},"nimly")," - Lexer Generator and Parser Generator as a Library in Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/beef331/nimscripter"},"Nimscripter")," - Quick and easy Nim <-> Nimscript interop."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yglukhov/nimpy"},"nimpy")," - Native language integration with Python."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nitely/nim-regex"},"Regex")," - Pure Nim regex engine. Guarantees linear time matching."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SciNim/nim-plotly"},"nim-plotly")," - Plotly wrapper for Nim."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/arnetheduck/nim-result"},"nim-result")," - Result type that can hold either a value or an error, but not both."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/treeform/jsony"},"JSONy")," - Loose, direct to object json parser and serializer with hooks."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/status-im/nim-taskpools"},"Taskpools")," - Lightweight, energy-efficient, easily auditable threadpool."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mratsim/weave"},"Weave")," - State-of-the-art multithreading runtime: message-passing based, fast, scalable, ultra-low overhead."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hamidb80/iterrr"},"iterrr")," - Functional-style, lazy-like, extensible iterator library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ftsf/nico"},"NICO")," - Game Framework in Nim inspired by Pico-8."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nim-lang/threading"},"threading")," - New atomics, thread primitives, channels and atomic refcounting.")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nim-lang/nimble"},"Nimble")," - Package manager for the Nim programming language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nim-lang/packages"},"Nim packages collection")," - Central listing of all packages for Nimble.")))}c.isMDXComponent=!0}}]);