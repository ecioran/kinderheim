"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[93566],{3905:function(e,a,t){t.d(a,{Zo:function(){return g},kt:function(){return u}});var r=t(67294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,i=function(e,a){if(null==e)return{};var t,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var m=r.createContext({}),p=function(e){var a=r.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},g=function(e){var a=p(e.components);return r.createElement(m.Provider,{value:a},e.children)},s={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},h=r.forwardRef((function(e,a){var t=e.components,i=e.mdxType,n=e.originalType,m=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),h=p(t),u=i,c=h["".concat(m,".").concat(u)]||h[u]||s[u]||n;return t?r.createElement(c,l(l({ref:a},g),{},{components:t})):r.createElement(c,l({ref:a},g))}));function u(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var n=t.length,l=new Array(n);l[0]=h;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<n;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},51393:function(e,a,t){t.r(a),t.d(a,{assets:function(){return g},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return s}});var r=t(87462),i=t(63366),n=(t(67294),t(3905)),l=["components"],o={title:"Agda"},m="[Agda](https://github.com/agda/agda)",p={unversionedId:"programming-languages/agda",id:"programming-languages/agda",title:"Agda",description:"Links",source:"@site/docs/programming-languages/agda.md",sourceDirName:"programming-languages",slug:"/programming-languages/agda",permalink:"/kinderheim/programming-languages/agda",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/agda.md",tags:[],version:"current",frontMatter:{title:"Agda"},sidebar:"tutorialSidebar",previous:{title:"Ada",permalink:"/kinderheim/programming-languages/ada"},next:{title:"APL",permalink:"/kinderheim/programming-languages/apl/"}},g={},s=[{value:"Links",id:"links",level:2}],h={toc:s};function u(e){var a=e.components,t=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"agda"},(0,n.kt)("a",{parentName:"h1",href:"https://github.com/agda/agda"},"Agda")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://learnyouanagda.liamoc.net/toc.html"},"Learn you an Agda")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30344669"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://wiki.portal.chalmers.se/agda/pmwiki.php?n=Main.Othertutorials"},"Introductions to Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JLimperg/cats"},"Category Theory in Agda")," - Learning exercise."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/copumpkin/categories"},"Categories")," - Categories parametrized by morphism equality, in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://plfa.github.io/"},"Programming Language Foundations in Agda")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jsiek/B522-PL-Foundations"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/freebroccolo/agda-nr-cats"},"(n,r)-categories in agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Saizan/miller"},"Higher-Order Pattern Unification in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/agda/cubical"},"Experimental library for Cubical Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/divipp/frp_agda"},"Functional Reactive Programming with Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/agda/agda-stdlib"},"Agda standard library")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=shXKb2MTkUc&list=PLB7F836675DCE009C"},"Introduction to Agda (2011)")," - Daniel Peebles' Introduction to Agda, presented at Boston Haskell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/UlfNorell/agda-summer-school"},"Programming with Dependent Types Summer School")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/UlfNorell/agda-prelude"},"Agda Prelude")," - Alternative to the Agda standard library that focuses more on programming and type checking time performance."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.bham.ac.uk/~mhe/HoTT-UF-in-Agda-Lecture-Notes/index.html"},"Introduction to Univalent Foundations of Mathematics with Agda (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/scott-fleischman/agda-from-nothing"},"Agda from Nothing")," - Workshop on learning Agda with minimal prerequisites."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/martinescardo/TypeTopology"},"Various new theorems in constructive univalent mathematics written in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mortberg/gen-cart"},"gen-cart")," - Unifying Cartesian Cubical Set Model."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/effectfully/Generic"},"Generic")," - Library for doing generic programming in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/anuyts/agda-sessions"},"Learn the Agda basics in three 2-hour sessions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mietek/hilbert-gentzen"},"hilbert-gentzen")," - Agda formalisation of IPC, IS4, ICML, and ILP."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gallais/potpourri"},"potpourri")," - Where everyday Agda research of G. Allais happens."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/agda/agda-categories"},"categories-agda library")," - Standard Category Theory library for Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jesper.sikanda.be/posts/formalize-all-the-things.html"},"Formalize all the things in Agda (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://oxij.org/note/BrutalDepTypes/"},"Brutal [Meta]Introduction to Dependent Types in Agda (2013)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pdfs.semanticscholar.org/a5c2/444d3c977260dbbfc7c2eceea9bda2614e71.pdf"},"Verified Functional Programming in Agda (2016)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22783645"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://oxij.org/note/BrutalDepTypes/"},"Brutal [Meta]Introduction to Dependent Types in Agda (2013)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://jmchapman.io/papers/funandprofit.pdf"},"System F in Agda, for fun and profit (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/toothbrush/reflection-proofs"},"Engineering Proof by Reflection in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/UlfNorell/agda-bench"},"AgdaBench")," - Benchmarking tool for compile-time performance of Agda programs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://htmlpreview.github.io/?https://github.com/effectfully/unification-in-agda/blob/master/UnificationInAgda.html"},"Unification in Agda")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/effectfully/unification-in-agda"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sabauma/agda-relation-algebra"},"Relational Algebra in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/oracle/aaosl-agda"},"Formal Verification of Authenticated, Append-Only Skip Lists in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/banacorn/agda-language-server"},"agda-language-server")," - Language Server Protocol for Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nachivpn/k"},"Mechanisation of Fitch-style Intuitionistic K in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jespercockx/agda-lecture-notes"},"Agda lecture notes for the Functional Programming course at TU Delft")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/andreasabel/universal-algebra"},"Formalization of some universal algebra in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sseefried/well-typed-agda-interpreter"},"Well Typed Agda Interpreter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/umazalakain/typing-linear-pi"},"Typing the linear pi calculus in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jsiek/abstract-binding-trees"},"Abstract Binding Trees in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jsiek/gradual-typing-in-agda"},"Gradual Typing in Agda")," - Formalizations of Gradually Typed Languages in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ualib/agda-algebras"},"agda-algebras")," - The Agda Universal Algebra Library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sstucki/system-f-agda"},"system-f-agda")," - Formalization of the polymorphic lambda calculus extended with iso-recursive types."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jonsterling/agda-calf"},"calf")," - Cost-aware logical framework, embedded in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mr-ohman/logrel-mltt"},"Logical Relation for Martin-L\xf6f Type Theory in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=U5i2VQj5jPk"},"Programming with Proofs in Agda (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ryanorendorff/functional-linear-algebra"},"Functional Linear Algebra in Agda")," - Formalizing linear algebra in Agda by representing matrices as functions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gallais/agdarsec"},"agdarsec")," - Total Parser Combinators in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/TOTBWF/agda-higher-categories"},"Higher Categories in Agda")," - Experiments in Higher Category Theory in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/umazalakain/agda-bcam"},"Programming with evidence")," - Tutorial series introducing Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/glangmead/formalization"},"Agda Formalization")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tcampion/Semisimplicial"},"Semisimplicial types in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gallais.github.io/pdf/icfp18.pdf"},"A Type and Scope Safe Universe of Syntaxes with Binding: Their Semantics and Proofs (2018)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/gallais/generic-syntax"},"Agda Library"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/TOTBWF/agda-tic-tac-toe"},"Tic Tac Toe, formalized in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/casvdrest/composable-semantics"},"Intrinsically-Typed Definitional Interpreters \xe0 la Carte")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/HarrisonGrodin/agda-modtt"},"ModTT in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/effectfully/Generic"},"Generic")," - Library for doing generic programming in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/oisdk/agda-playground"},"Agda Playground")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/smimram/fibred-polynomials"},"Formalizing polynomials in groupoids")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/UniMath/SymmetryBookFormalization"},"Formalization in Agda of the Symmetry book")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/conal/agda-generic-parallel"},"Generic parallel algorithms in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/DimaSamoz/agda-soas"},"Agda formalisation of second-order abstract syntax")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/alhassy/AgdaCheatSheet"},"Agda CheatSheet")," - Basics of the dependently-typed functional language Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tree-sitter/tree-sitter-agda"},"Agda Grammar for tree-sitter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/MatthewDaggitt/agda-routing"},"Agda-routing")," - Agda library for reasoning about asynchronous iterative algorithms and network routing problems."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/DimaSamoz/temporal-type-systems"},"Formalisation of a temporal type system in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bobatkey/agda-metric-reals"},"agda-metric-reals")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/elpinal/exsub-ccc"},"Categorical semantics of functional type theory with explicit substitutions, formalized in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/laMudri/generic-lr"},"generic-lr")," - AACMM's generic-syntax, but with QTT-style annotations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/superhaNds/cwfs"},"Initial Categories with Families")," - Formalization of categories with families (CwFs) defined as a generalized algebraic theory described in Internal Type Theory."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JonathanLorimer/conceptual-mathematics"},"Conceptual Mathematics")," - Proofs for the exercises for Lawvere and Schanuel's Conceptual Mathematics."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/plt-amy/agda-search"},"agda-search")," - Search for identifiers in Agda codebases."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Trebor-Huang/combinator-nbe"},"Normalization by Evaluation, for combinators")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/effectfully/Cubes"},"Cubes")," - Dependently typed type checker for a TT with intervals."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/effectfully/OTT"},"OTT")," - Observational Type Theory as an Agda library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ualib/ualib.github.io"},"UALib")," - Agda Universal Algebra Library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/boystrange/FairTermination"},"Fair termination in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AndrasKovacs/system-f-omega"},"System F-omega normalization by hereditary substitution in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kcsmnt0/quotient"},"Quotient types in cubical Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mb64/cubical-free-monads"},"Verified (cubical) free monads")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JorisCeulemans/sikkel"},"Sikkel")," - Agda library that allows a user to program in multimode simple type theories."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Borschemancer/axiomatic-sets"},"Axiomatic (ZF\u207b-like) set theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kangrongji/cubical-classics"},"Univalent classical mathematics in Cubical Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/effectfully/STLC"},"Dependently typed Algorithm M and friends")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Zekt/Type-Embellishment"},"Experimenting on ornamentation in Agda via reflection")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nad/dependent-lenses"},"Non-dependent and dependent lenses")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/WhatisRT/meta-cedille"},"Meta Cedille")," - Minimalistic dependent type theory with syntactic metaprogramming."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/frex-project/agda-fragment"},"Fragment")," - Algebraic proof discovery in Agda."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/algebraic-graphs/agda"},"Theory of algebraic graphs formalized in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/oracle/bft-consensus-agda"},"Formal verification of byzantine fault tolerant consensus in Agda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jonsterling/agda-synthetic-domain-theory"},"Agda Synthetic Domain Theory"))))}u.isMDXComponent=!0}}]);