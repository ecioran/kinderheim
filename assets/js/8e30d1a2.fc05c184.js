"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[7639],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=r.createContext({}),m=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=m(a),u=i,y=c["".concat(l,".").concat(u)]||c[u]||h[u]||n;return a?r.createElement(y,p(p({ref:t},s),{},{components:a})):r.createElement(y,p({ref:t},s))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,p=new Array(n);p[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,p[1]=o;for(var m=2;m<n;m++)p[m]=a[m];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8403:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return h}});var r=a(7462),i=a(3366),n=(a(7294),a(3905)),p=["components"],o={title:"Type Theory"},l="[Type Theory](http://en.wikipedia.org/wiki/Type_theory)",m={unversionedId:"math/type-theory/type-theory",id:"math/type-theory/type-theory",title:"Type Theory",description:"Links",source:"@site/docs/math/type-theory/type-theory.md",sourceDirName:"math/type-theory",slug:"/math/type-theory/",permalink:"/kinderheim/math/type-theory/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/math/type-theory/type-theory.md",tags:[],version:"current",frontMatter:{title:"Type Theory"},sidebar:"tutorialSidebar",previous:{title:"Topology",permalink:"/kinderheim/math/topology"},next:{title:"Computational type theory",permalink:"/kinderheim/math/type-theory/computational-type-theory"}},s={},h=[{value:"Links",id:"links",level:2}],c={toc:h};function u(e){var t=e.components,a=(0,i.Z)(e,p);return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"type-theory"},(0,n.kt)("a",{parentName:"h1",href:"http://en.wikipedia.org/wiki/Type_theory"},"Type Theory")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jozefg/learn-tt"},"Learn TT")," - A collection of resources for learning type theory and type theory adjacent fields."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RobertHarper/hott-materials"},"Homotopy Type Theory lecture materials")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/HoTT/book"},"A textbook on informal homotopy type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/HoTT/HoTT"},"Homotopy type theory book")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://sphalerite.org/ghotl/posts/2017-10-16-project-scope-outline.html"},"GHOTL Project scope and outline plan")," - Good read."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://abooij.github.io/wiwikwlhott/"},"What I wish I knew when learning HoTT")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/michaelt/martin-lof"},"Collected works of Per Martin-L\xf6f")," - ",(0,n.kt)("a",{parentName:"li",href:"http://archive-pml.github.io/"},"Web version"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://qr.ae/TUpF3Z"},"Type Theory: Does understanding of the Curry-Howard correspondence make you a better programmer?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hazelgrove/hazel"},"Hazel")," - Live functional programming environment with typed holes. (",(0,n.kt)("a",{parentName:"li",href:"https://hazel.org/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/latte-central/LaTTe"},"LaTTe")," - Laboratory for Type Theory experiments (in clojure)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ilya-klyuchnikov/ttlite"},"TT Lite")," - SuperCompiler for Martin-L\xf6f's Type Theory."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/andrejbauer/spartan-type-theory"},"Implementation of spartan type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/skaslev/why-types/blob/master/why-types.pdf"},"Why Types Matter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jonsterling/type-theory-and-its-meaning-explanations"},"Introduction to type theory based on meaning explanations")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/UniMath/SymmetryBook"},"SymmetryBook")," - Undergraduate textbook written in the univalent style, taking advantage of the presence of symmetry in the logic at an early stage."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jozefg/nbe-for-mltt"},"nbe-for-mltt")," - Normalization by Evaluation for Martin-L\xf6f Type Theory."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.bham.ac.uk/~mhe/"},"Martin Escardo's research")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://blog.ielliott.io/lambdas-are-codatatypes/"},"Lambdas are Codatatypes (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://semantic-domain.blogspot.com/2019/08/on-relationship-between-static-analysis.html"},"On the Relationship Between Static Analysis and Type Theory (2019)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/irow0u/on_relationship_between_static_analysis"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},"[Timeline for Logic, \u03bb-Calculus, and Programming Language Theory (2012)(",(0,n.kt)("a",{parentName:"li",href:"http://fm.csl.sri.com/SSFT15/Timeline.pages.pdf"},"http://fm.csl.sri.com/SSFT15/Timeline.pages.pdf"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=20860888"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cis.upenn.edu/~bcpierce/tapl/"},"Types and Programming Languages Book (2002)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/lazear/types-and-programming-languages"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://mitpress.mit.edu/books/types-and-programming-languages"},"Book Page"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29182480"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cambridge.org/core/books/type-theory-and-formal-proof/0472640AAD34E045C7F140B46A57A67C"},"Type Theory and Formal Proof book")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/LightAndLight/qtt"},"qtt")," - Quantitative Type Theory implementation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/brendanzab/rust-nbe-for-mltt"},"Normalization by evaluation for Martin-L\xf6f Type Theory with dependent records")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jadon.io/blog/type-theory/"},"Introduction to Type Theory (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/"},"No, dynamic type systems are not inherently more open (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22090700"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/qqlkk0/no_dynamic_type_systems_are_not"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://boxbase.org/entries/2018/mar/5/hindley-milner/"},"Hindley-Milner type system/Algorithm W study (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=15583515"},"HN: So you want to write a type checker")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/87c5dw/what_are_the_common_ways_of_performing/"},"What are the common ways of performing typechecking? (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/stedolan/mlsub"},"mlsub")," - Prototype type inference engine."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://stedolan.net/research/#mlsub"},"Papers and talks around type inference")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://goto.ucsd.edu/~rjhala/papers/low_level_liquid_types.pdf"},"Low-Level Liquid Types")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.nuprl.org/"},"PRL Project")," - Implementing computational mathematics and providing logic-based tools that help automate programming."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.tweag.io/posts/2020-03-05-peirce.html"},"Code is Engineering; Types are Science (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22791187"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JDemler/BidirectionalTypechecking"},'Implementation of "Complete and Easy Bidirectional Typechecking for Higher-Rank Polymorphism" in Rust')," (",(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1306.6032.pdf"},"Paper"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=8Xyk_dGcAwk"},"Milner Award Lecture: The Type Soundness Theorem That You Really Want to Prove (and now you can)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/phase/dtt"},"Experimenting with Dependent Type Theory in Rust")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://buttondown.email/hillelwayne/archive/making-illegal-states-unrepresentable/"},"Making Illegal States Unrepresentable (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/b0p6ib/making_illegal_states_unrepresentable"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ezyang/logitext"},"Beautiful, interactive visualizations of logical inference")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Ahnfelt/type-inference-by-example"},"Type Inference by Example")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://michael.homer.nz/Publications/DLS2019/pattern-types.pdf"},"First-Class Dynamic Types (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1910.08480.pdf"},"Gradual Typing for Extensibility by Rows (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.ccs.neu.edu/home/amal/papers/gradparam.pdf"},"Graduality and Parametricity: Together Again for the First Time (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://repositorio.uchile.cl/bitstream/handle/2250/170935/Abstracting-gradual-typing-Metatheory-and-applications.pdf?sequence=1"},"Abstracting gradual typing: metatheory and applications (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://wgt20.irif.fr/wgt20-final28-acmpaginated.pdf"},"Gradual Typing as if Types Mattered (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bixuanzju.github.io/files/Thesis.pdf"},"Disjoint Intersection Types: Theory and Practice (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hal.archives-ouvertes.fr/hal-02383109/document"},"The Fire Triangle (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://wgt20.irif.fr/wgt20-final23-acmpaginated.pdf"},"Foreign Function Typing: Semantic Type Soundness for FFIs (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1908.05839.pdf"},"Bidirectional Typing (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1908.00441.pdf"},"Refinement Kinds (2019)")," - Type-safe Programming with Practical Type-level Computation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1909.00427.pdf"},"Refinement type contracts for verification of scientific investigative software (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jackw.io/papers/thesis.pdf"},"Design and Evaluation of Contracts for Gradual Typing (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1908.03010.pdf"},"Manifest Contracts with Intersection Types (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/research/uploads/prod/2019/03/eta.pdf"},"Kinds are calling conventions (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://wgt20.irif.fr/wgt20-final70-acmpaginated.pdf"},"Space-Efficient Monotonic References (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1911.00705.pdf"},"Label-Dependent Session Types (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/2001.04301.pdf"},"Tabled Typeclass Resolution (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.researchgate.net/publication/326164533_A_type_and_effect_system_for_uniqueness_and_immutability"},"A type and effect system for uniqueness and immutability (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://dl.acm.org/doi/pdf/10.1145/3341105.3373888"},"Inferring Types and Effects via Static Single AssignmentLeonardo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AndrasKovacs/smalltt"},"smalltt")," - Demo for high-performance type theory elaboration."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/imdea-software/htt"},"Hoare Type Theory")," - Contains the main libraries of Hoare Type Theory (HTT) for reasoning about sequential heap-manipulating programs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.aleksandra.codes/type-inference"},"Type inference under the hood (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/@dhruvrajvanshi/type-inference-for-beginners-part-1-3e0a5be98a4b"},"Type inference for beginners (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.65.7733&rep=rep1&type=pdf"},"Algorithm W Step by Step (2006)")," - Implementation of the classic algorithm W for Hindley- Milner polymorphic type inference in Haskell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AndrasKovacs/icfp20sub/blob/master/paper.pdf"},"Elaboration with First-Class Implicit Function Types (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/AndrasKovacs/icfp20sub/tree/master/fcif"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ecavallo/ptt"},"Experimental type-checker for internally parametric type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.ccs.neu.edu/home/stchang/pubs/ckg-popl2017.pdf"},"Type Systems as Macros (2017)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.25.818"},"Compositional Explanation of Types and Algorithmic Debugging of Type Errors (2001)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=aJyxtUopJ74"},"Christian Williams: Structural types for algebraic theories (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=kQe0knDuZqg"},"Peter LeFanu Lumsdaine, What are we thinking when we present a type theory? (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://xenaproject.wordpress.com/2020/06/20/mathematics-in-type-theory/"},"Mathematics in type theory (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23612856"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://xenaproject.wordpress.com/2020/07/05/division-by-zero-in-type-theory-a-faq/"},"Division by zero in type theory: a FAQ (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://xenaproject.wordpress.com/2020/07/05/division-by-zero-in-type-theory-a-faq/"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cse.chalmers.se/research/group/logic/book/book.pdf"},"Programming in Martin-L \u0308of\u2019s Type Theory: An Introduction (1990)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.kent.ac.uk/people/staff/sjt/TTFP/"},"Type Theory and Functional Programming book (1991)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://danielbmarkham.locals.com/post/88422/technical-tuesdays-intro-to-type-theory"},"Intro To Type Theory")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/tvqpbu/intro_type_theory"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://strictlypositive.org/ott.pdf"},"Towards Observational Type Theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://typing-is-hard.ch/"},"Typing is Hard")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/t7utm7/typing_is_hard"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lexi-lambda.github.io/blog/2020/08/13/types-as-axioms-or-playing-god-with-static-types/"},"Types as axioms, or: playing god with static types (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/zl3eha/types_as_axioms_playing_god_with_static"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.30.8177&rep=rep1&type=pdf"},"The Cartesian Product Algorithm (Type Inference) (1995)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.nott.ac.uk/~psztxa/martin-19.pdf"},"Martin Hofmann\u2019s contributions to Type Theory: Groupoids and Univalence (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/wix-engineering/demystifying-type-systems-3a16fafbd92e"},"Demystifying Type Systems (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://research.google/pubs/pub49386/"},"Incremental Type Migration Using Type Algebra (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://v5.chriskrycho.com/journal/things-i-was-wrong-about/1-types/"},"Things I Was Wrong About: Types")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24604943"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.lucacardelli.name/Papers/TypefulProg.pdf"},"Luca Cardelli: Typeful Programming")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/andrejbauer/alg"},"Alg")," - Program that generates all finite models of a first-order theory. It is optimized for equational theories."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2007.12630"},"Corpse Reviver: Sound and Efficient Gradual Typing via Contract Verification (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/yminsky/status/1315983813965742081"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://k-bx.github.io/articles/propositions-as-types-missing-links.html"},"Propositions as types: some missing links (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ranjitjhala/sprite-lang"},"SPRITE")," - Tutorial-style implementation of liquid/refinement types for a subset of Ocaml/Reason."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2010.07763"},"Refinement Types: A Tutorial (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lexi-lambda.github.io/blog/2020/11/01/names-are-not-type-safety/"},"Names are not type safety (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24963821"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.wesleyac.com/posts/frp-databases-types"},"A Conversation on FRP, Databases, and Types (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/1803.10143"},"An extended type system with lambda-typed lambda-expressions (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ymyzk/lambda-dti"},"lambda-dti")," - Interpreter of the ITGL with dynamic type inference."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://okmij.org/ftp/meta-programming/sessions/description.pdf"},"Session Types without Sophistry")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://oisdk.github.io/masters-thesis/paper.pdf"},"Finiteness in Cubical Type Theory (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/oisdk/masters-thesis"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/samuela/bidirectional-typing"},"Homemade Bidirectional Typing")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ezgicicek/BiRelCost"},"BiRelCost")," - Bidirectional Type Checking for Relational Properties."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mukulrathi.co.uk/create-your-own-programming-language/intro-to-type-checking/"},"An accessible introduction to type theory and implementing a type-checker (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/neel-krishnaswami/linearml"},"Linear ML")," - Small implementation of a linear type theory in the style of the Benton-Wadler adjoint calculus."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/neel-krishnaswami/inverse-bidirectional-typechecking"},"Implementing Inverse Bidirectional Typechecking")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.bham.ac.uk/~mhe/papers/universe-indiscrete-and-rice.pdf"},"The intrinsic topology of a Martin-Lo \u0308f universe (2012)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://3fx.ch/typing-is-hard.html"},"Typing is Hard")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/thibautbenjamin/catt"},"Catt")," - Infinity categorical coherence typechecker."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sweirich/challenge"},"Strongly-typed System F in Haskell")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://golem.ph.utexas.edu/category/2021/02/native_type_theory.html"},"Native Type Theory (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/ornuz9/native_type_theory"},"Lobsters"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26203257"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/LPTK/simple-sub"},"Simple-sub Algorithm for Algebraic Subtyping")," (",(0,n.kt)("a",{parentName:"li",href:"https://lptk.github.io/simple-sub/"},"Demo"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=0lXUBVipXa8"},'"The Trouble With Types" by Martin Odersky (2013)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ega.fppf.site/"},"Grothendieck's EGA English Translation")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ryankeleti/ega"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.gingerbill.org/article/2021/03/07/untyped-types/"},"Untyped Types (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://justinpombrio.net/2021/03/11/algebra-and-data-types.html"},"Algebra and Data Types (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/aul5kz/algebra_data_types"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/12532552/what-part-of-hindley-milner-do-you-not-understand"},"What part of Hindley-Milner do you not understand?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=OyrByPkiX7s"},"The Hindley-Milner Type System (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Chaaaos/formaltt"},"Formalization of simple type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mtt-lang.github.io/mtt-web/"},"Modal Type Theory implementation")," - Toy functional language based on modal type theory. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/mtt-lang/mtt-lang"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gilmi.me/blog/post/2021/04/06/giml-type-inference"},"Giml's type inference engine (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.hedonisticlearning.com/posts/understanding-typing-judgments.html"},"Understanding typing judgments (2016)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AndrasKovacs/setoidtt"},"Prototype implementations of systems based on setoid type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://favonia.org/courses/hdtt2020/"},"Higher-Dimensional Type Theory Course (2020)")," - Graduate seminar course on the recent development of higher-dimensional type theory. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/favonia/hdtt2020-notes"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://vimeo.com/510188470"},"Synthetic mathematics with an excursion into computability theory (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://counterexamples.org/"},"Counterexamples in Type Systems")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/stedolan/counterexamples"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27252899"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://splintah.github.io/series/Introduction%20to%20Type%20Systems.html"},"Introduction to Type Systems")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://jamesrwilcox.com/f/"},"System F Playground")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.pentlander.com/building-blocks-sasquach-type-system/"},"Building Blocks of the Sasquach Type System (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/groupoid/anders"},"Anders")," - Homotopy Type System with Strict Equality."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://groupoid.space/homotopy/"},"Homotopy Type System")," - Type theory with two equalities."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://byorgey.wordpress.com/2021/06/24/types-versus-sets-in-math-and-programming-languages/"},"Types versus sets in math and programming languages (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://luctielen.com/videos/lets_build_a_typesystem_in_haskell/"},"Let's build a type system in Haskell!")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.davidchristiansen.dk/tutorials/bidirectional.pdf"},"Bidirectional Typing Rules: A Tutorial (2013)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/luc-tielen/typesystem"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=m_PecfbEWik"},"The Hardest Problem in Type Theory [Uniqueness of Identity Proofs] (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ionathanch/ttzoo"},"Notes on type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://golem.ph.utexas.edu/category/2021/08/you_could_have_invented_de_bru.html"},"You Could Have Invented De Bruijn Indices (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/adamgundry/type-inference"},"type-inference")," - Unification and type inference algorithms in Haskell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://doma.dev/blog/innovation-propagation/"},"Type system innovation propagation (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/TheoWinterhalter/sirtt"},"Shape Irrelevant Reflection in Type Theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://2021.splashcon.org/home/hatra-2021#program"},"Human Aspects of Types and Reasoning Assistants (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://alarmingdevelopment.org/?p=1557"},"Article"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://blog.felipe.rs/2017/07/07/where-do-type-systems-come-from/"},"Where Do Type Systems Come From?")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28702933"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mmcqd/pure"},"Pure type system implemented in OCaml")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/andreypopp/type-systems"},"Type Systems Toy Implementations")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.jonmsterling.com/pdfs/sterling:2021:thesis.pdf"},"First Steps in Synthetic Tait Computability: The Objective Metatheory of Cubical Type Theory (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.jonmsterling.com/Topoi-inside-and-out-7b0b86e39eeb43aeaee3c3af1dd91f2a"},"Topoi \u2014 inside and out (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.jonmsterling.com/How-to-define-a-PER-model-95a7413ee12444f899536f67bbaea28e"},"How to define a PER model (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://agrothendieck.github.io/divers/ps.pdf"},"Grothendieck's Pursuing Stacks (1983)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/thescrivener/PursuingStacks"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2111.06368"},"Should Type Theory replace Set Theory as the Foundation of Mathematics (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Trebor-Huang/agda-linear"},"Implementation of a Zeilberger-style linear type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Trebor-Huang/typical-math"},"TypicalMath")," - General-purpose type theory and proof checker generator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.paultaylor.eu/~pt/stable/Proofs+Types"},"Proofs and Types (1990)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://types2020.di.unito.it/abstracts/BookOfAbstractsTYPES2020.pdf"},"EUTYPES-TYPES 2020 - Abstracts")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/mietek/status/1461734839061676032"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.unsworks.unsw.edu.au/primo-explore/fulldisplay/unsworks_12203/UNSWORKS"},"The critical dimension as an invariant of Type III odometers (2013)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.nott.ac.uk/~pszgmh/domains.html"},"Introduction to Domain Theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/brownplt/B2T2"},"Brown Benchmark for Table Types")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://amelia.how/posts/cubical-type-theory.html"},"Cubical Type Theory (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pfudke.wordpress.com/2014/11/20/hindley-milner-type-inference-a-practical-example-2/"},"Hindley-Milner Type Inference: A Practical Example (2014)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/rk4qnp/learning_resources_for_type_inference/"},"Learning resources for type inference (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://lucacardelli.name/Papers/BasicTypechecking.pdf"},"Basic Polymorphic Typechecking")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mukulrathi.com/create-your-own-programming-language/intro-to-type-checking/"},"An accessible introduction to type theory and implementing a type-checker (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/ss3w6n/an_accessible_introduction_to_type_theory_and/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cstheory.stackexchange.com/questions/50914/swapping-arguments-of-variables-in-higher-order-pattern-unification"},"Swapping arguments of variables in higher-order pattern unification")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://starsandspira.ls/docs/esop22-draft.pdf"},"Linearity and Uniqueness: An Entente Cordiale (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://journal.infinitenegativeutility.com/structurally-typed-condition-handling"},"Structurally-Typed Condition Handling (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30338403"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://billwadge.com/2022/02/16/type-checking-as-calculation/"},"Type Checking as Calculation (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30356493"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/vrahli/opentt"},"Agnostic Extensional Type Theory")," - Parameterized extensional type theory parameterized by a choice operator, and interpreted by a forcing interpretation parameterized by a modality."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sancho20021/system-f-type-checker"},"System-F type-checker written in Haskell")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/advancedresearch/path_semantics"},"Path Semantics")," - Research project in path semantics, a re-interpretation of functions for expressing mathematics."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.cmu.edu/~rwh/papers/ordered/popl.pdf"},"Type Theory for Memory Allocation and Data Layout")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/groupoid/hurricane"},"Hurricane")," - Minimal Implementation of HoTT-I Type System (of JetBrains Arend) with definitional Path-\u03b2."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/groupoid/castle.bravo"},"Castle Bravo")," - Experimental Implementation of HoTT-\u2202 Type System with definitional Path-\u03b2."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://danso.ca/blog/higher-kinded-types/"},"Understanding higher-kinded types (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/5nuixp/understanding_higher_kinded_types"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lawrencecpaulson.github.io/2022/03/16/Types_vs_Sets.html"},"Types versus sets (and what about categories?) (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30697421"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kwanghoon/bidi"},"Bidirectional type checking algorithms for higher-ranked polymorphism")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mgrabmueller/AlgorithmW"},"Example implementation of Algorithm W for Hindley-Milner type inference")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AndrasKovacs/thesis/blob/main/src/thesis.pdf"},"Type-Theoretic Signatures for Algebraic Theories and Inductive Types")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/LightAndLight/cbpv"},"Usable type system for call by push-value")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.typetheoryforall.com/2022/04/02/16-Agda,-K-Axiom,-HoTT,-Rewrite-Theory-(Jesper-Cockx).html#c359641b"},"Type Theory Forall - #16 Agda, K Axiom, HoTT, Rewrite Theory (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ayazhafiz.com/articles/22/why-dont-more-languages-offer-flow-typing"},"Why Don't More Languages Offer Flow Typing? (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30907178"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/5HT/henk"},"Henk: Pure Type System")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RedPRL/kado"},"Cofibrations in Cartecian Cubical Type Theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/apl-cornell/gallifrey-proto-interp"},"Core Gallifrey Interpreter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/digama0/lean-type-theory"},"LaTeX code for a paper on lean's type theory")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/forked-from-1kasper/anders"},"Anders: Cubical Type Checker")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/fxdpntthm/type-checker"},"Type checker in Haskell")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mb64/xtt"},'Implementing XTT, from the papers "A cubical language for Bishop sets" and "Cubical syntax for reflection-free extensional equality"')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/groupoid/alonzo"},"Alonzo")," - STLC type system."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/wh5a/Algorithm-W-Step-By-Step"},"Classic Algorithm W for type inference in Haskell")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.haskellforall.com/2022/05/introductory-resources-to-type-theory.html"},"Introductory resources to type theory for language implementers (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/uhgl4o/introductory_resources_to_type_theory_for/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/sliminality/status/1521546506452447233"},"What is a type?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://domdomegg.github.io/cs310/"},"Interactive Type Inference: Play with algorithm W in your browser")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/domdomegg/cs310"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RedPRL/stagedtt"},"Stagedtt")," - Staged Type Theory."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tominated/system_f_omega"},"System F\u03c9 with Row-Polymorphism")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/polytypic/f-omega-mu"},"F\u03c9\u03bc type checker and compiler")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nmhancock/type-inferencing"},"Hindley\u2013Milner Type inferencing in C"))))}u.isMDXComponent=!0}}]);