"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[78673],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=r.createContext({}),o=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=o(e.components);return r.createElement(m.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=o(a),c=n,g=u["".concat(m,".").concat(c)]||u[c]||h[c]||i;return a?r.createElement(g,s(s({ref:t},p),{},{components:a})):r.createElement(g,s({ref:t},p))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var o=2;o<i;o++)s[o]=a[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},42506:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return c},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return h}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),s=["components"],l={title:"Assembly"},m="[Assembly](http://en.wikipedia.org/wiki/Assembly_language)",o={unversionedId:"programming-languages/assembly",id:"programming-languages/assembly",title:"Assembly",description:"Links",source:"@site/docs/programming-languages/assembly.md",sourceDirName:"programming-languages",slug:"/programming-languages/assembly",permalink:"/kinderheim/programming-languages/assembly",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/assembly.md",tags:[],version:"current",frontMatter:{title:"Assembly"},sidebar:"tutorialSidebar",previous:{title:"APL",permalink:"/kinderheim/programming-languages/apl/"},next:{title:"Bash",permalink:"/kinderheim/programming-languages/bash"}},p={},h=[{value:"Links",id:"links",level:2}],u={toc:h};function c(e){var t=e.components,a=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"assembly"},(0,i.kt)("a",{parentName:"h1",href:"http://en.wikipedia.org/wiki/Assembly_language"},"Assembly")),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://yurichev.com/writings/AL4B-EN.pdf"},"Assembly Language for Beginners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://chortle.ccsu.edu/AssemblyTutorial/index.html"},"Programmed Introduction to MIPS Assembly Language")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.robertwinkler.com/projects/mips_book/mips_book.html"},"MIPS Assembly Programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://wilsonminesco.com/AssyDefense/"},"Assembly Language Programming: Still Relevant Today (2015)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21924591"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kobzol.github.io/davis/"},"Davis")," - x86 assembly debugger. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Kobzol/davis"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22279051"},"Ask HN: What's the best resource for learning modern x64 assembly? (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.ethernut.de/en/documents/arm-inline-asm.html"},"ARM GCC Inline Assembler Cookbook")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://johv.dk/blog/bare-metal-assembly-tutorial.html"},"Getting started with bare-metal assembly (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22684881"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://keleshev.com/compiling-to-assembly-from-scratch-the-book"},"Compiling to Assembly from Scratch (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/keleshev/compiling-to-assembly-from-scratch"},"Code"),") (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/micahcantor/comp-to-assembly-from-scratch-hs"},"In Haskell"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/cch123/asm-cli"},"Interactive shell of assembly language(X86/X64) based on unicorn and keystone")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gpfault.net/posts/asm-tut-0.txt.html"},"Let's Learn x86-64 Assembly! (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24195627"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://int80h.org/"},"int 80h")," - Learn Assembly using OpenBSD as base OS."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.stephenmarz.com/2020/05/20/assemblys-perspective/"},"Assembly\u2019s Perspective (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/NSExceptional/ASM-Swift"},"ASM Swift")," - Playground for learning Assembly language through Swift."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://littlecomputer3.com/"},"Little Computer 3")," - Learn how to program in assembly on the web. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/0x213F/littlecomputer3"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.yossarian.net/2020/06/13/How-x86_64-addresses-memory"},"How x86_64 addresses memory (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.jfo.click/hello-hello-world/"},'Hello "Hello world!" (2020)')," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/uoluir/hello_hello_world"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cs.yale.edu/flint/cs422/doc/art-of-asm/pdf/"},"Art of Assembly Language")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reenigne.org/blog/8086-microcode-disassembled/"},"8086 microcode disassembled (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24383648"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/pretzelhammer/rust-blog/blob/master/posts/too-many-brainfuck-compilers.md"},"Learn Assembly by Writing Entirely Too Many Brainfuck Compilers in Rust (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://seenaburns.com/2019/04/17/wrote-some-arm/"},"Wrote some ARM (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.assemblytutorial.com/"},"Assembly Tutorials")," - Learn Z80 Assembly Programming."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://users.ece.utexas.edu/~valvano/Volume1/QuickReferenceCard.pdf"},"ARM and Thumb-2 Instruction Set Quick Reference")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=WEliEAc3ZyA"},"Advanced 6502 Assembly Programming for the Apple II (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"http://www.cs.columbia.edu/~sedwards/2020-vcfw-6502/"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://interrupt.memfault.com/blog/instruction-tracing-mtb-m33"},"ARM Cortex-M33 Instruction Tracing Without a Debugger (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://smist08.wordpress.com/2021/01/08/apple-m1-assembly-language-hello-world/"},"Apple M1 Assembly Language Hello World (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25786236"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/NeatMonster/AMIE"},"AMIE")," - Minimalist Instruction Extender for the ARM architecture and IDA Pro."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/dschmenk/PLASMA"},"PLASMA")," - Medium level programming language targeting the 8-bit 6502 processor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://tomforsyth1000.github.io/blog.wiki.html#%5B%5BBabbage%20was%20a%20true%20genius%5D%5D"},"Babbage was a true genius (2006)")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/ovjvzl/babbage_was_true_genius"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://elronnd.net/writ/2021-02-13_att-asm.html"},"Why no one should use the AT&T syntax ever, for any reason, under any circumstances (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/zifjgi/why_no_one_should_use_at_t_syntax_ever_for"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://patshaughnessy.net/2016/11/26/learning-to-read-x86-assembly-language"},"Learning to Read x86 Assembly Language (2016)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/wiz-lang/wiz"},"Wiz")," - High-level assembly language for writing homebrew software for retro console platforms."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://steveindusteves.substack.com/p/how-do-computers-work"},"How do computers work? (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://wolchok.org/posts/how-to-read-assembly-language/"},"How to Read Assembly Language (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26311722"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Wz_xJPN7lAY"},"Top 10 Craziest Assembly Language Instructions (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.nayuki.io/page/a-fundamental-introduction-to-x86-assembly-programming"},"A fundamental introduction to x86 assembly programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://wolchok.org/posts/how-to-read-arm64-assembly-language/"},"How to Read ARM64 Assembly Language (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://skilldrick.github.io/easy6502/"},"Easy 6502")," - One-stop accessible tutorial on 6502 assembly language programming. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/skilldrick/easy6502"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/plotfi/swiftdasm"},"swiftdasm")," - arm64 disassembler written in Swift."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/can1357/haruspex"},"Haruspex")," - Exploration of x86-64 ISA using speculative execution."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://paweldziepak.dev/2019/06/21/avoiding-icache-misses/"},"Avoiding instruction cache misses (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://danluu.com/assembly-intrinsics/"},"Assembly vs. intrinsics (2014)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26877076"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fgiesen.wordpress.com/2016/08/25/how-many-x86-instructions-are-there/"},"How many x86 instructions are there? (2016)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26889108"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://ref.x86asm.net/"},"X86 Opcode and Instruction Reference")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Barebit/x86reference"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.cloudflare.com/branch-predictor/"},'Branch predictor: How many "if"s are too many? Including x86 and M1 benchmarks! (2021)')," (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/majek04/status/1501491040322207746"},"Tweet"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gcc.gnu.org/wiki/DontUseInlineAsm"},"Don't Use Inline Assembly")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.pagetable.com/?p=1520"},"Commodore\u2019s Assemblers: Part 1: MOS Cross-Assembler")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eclecticlight.co/2021/06/16/code-in-arm-assembly-registers-explained/"},"Code in ARM Assembly: Registers explained (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27526155"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eclecticlight.co/2021/06/21/code-in-arm-assembly-working-with-pointers/"},"Code in ARM Assembly: Working with pointers (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.apple.com/documentation/xcode/writing-arm64-code-for-apple-platforms"},"Writing ARM64 Code for Apple Platforms")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27616018"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eclecticlight.co/2021/06/29/code-in-arm-assembly-conditional-loops/"},"Code in ARM Assembly: Conditional Loops (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.apress.com/de/book/9781484258804"},"Programming with 64-Bit ARM Assembly Language (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/below/HelloSilicon"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.righto.com/2014/10/how-z80s-registers-are-implemented-down.html"},"Down to the silicon: how the Z80's registers are implemented (2014)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=L1ung0wil9Y"},"Assembly Language and Computer Architecture (2018)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://0x41.cf/reversing/2021/07/21/reversing-x86-and-c-code-for-beginners.html"},"Reversing for dummies - x86 assembly and C code (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://wiki.xxiivv.com/site/uxn.html"},"Uxn")," - 8-bit virtual computer inspired by forth-machines, capable of running simple tools and games programmable in its own unique assembly language. (",(0,i.kt)("a",{parentName:"li",href:"https://compudanzas.net/uxn_tutorial.html"},"Tutorial"),") (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/hundredrabbits/status/1418394255022645256"},"Tweet"),") (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/hundredrabbits/awesome-uxn"},"Awesome"),") (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/hundredrabbits/status/1449076985045549059"},"Tweet"),") (",(0,i.kt)("a",{parentName:"li",href:"https://100r.co/site/uxn.html"},"Web"),") (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/metasyn/learn-uxn"},"Learn Uxn"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.bitsnbites.eu/three-fundamental-flaws-of-simd/"},"Three fundamental flaws of SIMD (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/icedland/iced"},"iced")," - Blazing fast and correct x86/x64 disassembler, assembler, decoder, encoder for .NET, Rust, Python, JavaScript."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://maskray.me/blog/2021-08-29-all-about-global-offset-table"},"All about Global Offset Table (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/barrettotte/qr-asm"},"Generating a QR code with only ARM Assembly")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28458818"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://community.arm.com/developer/ip-products/processors/b/processors-ip-blog/posts/arm-a-profile-architecture-developments-2021"},"Arm AArch64 Adds Memcpy() Instructions (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28601386"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cl.cam.ac.uk/~pes20/sail/"},"Sail")," - Language for describing the instruction-set architecture (ISA) semantics of processors. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/rems-project/sail"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.randallhyde.com/AssemblyLanguage/www.artofasm.com/index.html"},"Art of Assembly Language Programming and HLA by Randall Hyde")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jagregory/abrash-zen-of-asm"},"Zen of Assembly Language (1990)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.benjojo.co.uk/post/interactive-x86-bootloader-tutorial"},"x86 assembly doesn\u2019t have to be scary (2018)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28770907"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/andrewchambers/minias"},"Minias")," - Mini x86-64 assembler for fun and learning. (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28884768"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/yrp604/bad64"},"Binja Arm64 Disassembler")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/yrp604/rappel"},"Rappel")," - Linux-based assembly REPL for x86, amd64, armv7, and armv8."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://hikalium.github.io/opv86/"},"opv86")," - Opcode / Instruction finder for x86_64. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/hikalium/opv86"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.yiningkarlli.com/2021/09/neon-vs-sse.html"},"Comparing SIMD on x86-64 and arm64 (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jstrieb/systems-programming-cheat-sheet"},"Cheat sheet for x86-64 Unix systems programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://famicom.party/book/"},"Famicom Party: Making NES Games in Assembly")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29069095"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://greatergoodest.github.io/post/elf_science_p1/"},"ELF Science Part 1 (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/giaf/blasfeo"},"BLASFEO")," - Basic linear algebra subroutines for embedded optimization."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/netwide-assembler/nasm"},"NASM")," - Cross-platform x86 assembler with an Intel-like syntax. (",(0,i.kt)("a",{parentName:"li",href:"https://nasm.us/"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tenderlove/asmrepl"},"ASMREPL")," - REPL for x86 assembly language. (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29385006"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://tech.marksblogg.com/fastest-fizz-buzz.html"},"The Fastest FizzBuzz Implementation (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29413656"},"HN"),") (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/pcwalton/status/1466350917133889541"},"Tweet"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://codegolf.stackexchange.com/questions/215216/high-throughput-fizz-buzz"},"High throughput Fizz Buzz")," (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/danluu/status/1453820898876682258"},"Tweet"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://nullprogram.com/blog/2021/12/04/"},"Fast CSV Processing with SIMD (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29439403"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/iximeow/yaxpeax-core"},"Program analysis for machine code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/osandov/asmase"},"asmase")," - REPL for assembly language using an LLVM backend."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://brianstadnicki.github.io/posts/asm-self-modifying-factorial/"},"Writing a self-modifying x86 factorial program (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29563027"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://asmtutor.com/"},"NASM Assembly Language Tutorials")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29784788"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/oldnewthing/20220111-00/?p=106144"},"Jumping into the middle of an instruction is not as strange as it sounds (2022)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/omarandlorraine/strop"},"strop")," Stochastically generates assembly language programs that compute a given function."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/divipp/x86-64"},"x86-64")," - Runtime code generation for x86 64 bit machine code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.phatcode.net/res/223/files/html/toc.html"},"The Art of Assembly Language Programming (1996)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30575920"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://wunkolo.github.io/post/2020/05/pclmulqdq-tricks/"},"pclmulqdq Tricks (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hackclub/assembly"},"Guide to CPUs and assembly"))))}c.isMDXComponent=!0}}]);