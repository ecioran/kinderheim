"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[91007],{3905:function(e,t,i){i.d(t,{Zo:function(){return s},kt:function(){return b}});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function m(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),c=p(i),b=a,h=c["".concat(l,".").concat(b)]||c[b]||u[b]||r;return i?n.createElement(h,o(o({ref:t},s),{},{components:i})):n.createElement(h,o({ref:t},s))}));function b(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=c;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m.mdxType="string"==typeof e?e:a,o[1]=m;for(var p=2;p<r;p++)o[p]=i[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},55304:function(e,t,i){i.r(t),i.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return b},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return u}});var n=i(87462),a=i(63366),r=(i(67294),i(3905)),o=["components"],m={title:"Combine Framework"},l="[Combine Framework](https://developer.apple.com/documentation/combine)",p={unversionedId:"programming-languages/swift/swift-libraries/combine",id:"programming-languages/swift/swift-libraries/combine",title:"Combine Framework",description:"OSS Combine apps",source:"@site/docs/programming-languages/swift/swift-libraries/combine.md",sourceDirName:"programming-languages/swift/swift-libraries",slug:"/programming-languages/swift/swift-libraries/combine",permalink:"/kinderheim/programming-languages/swift/swift-libraries/combine",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/swift/swift-libraries/combine.md",tags:[],version:"current",frontMatter:{title:"Combine Framework"},sidebar:"tutorialSidebar",previous:{title:"Swift libraries",permalink:"/kinderheim/programming-languages/swift/swift-libraries/"},next:{title:"SwiftUI",permalink:"/kinderheim/programming-languages/swift/swift-libraries/swiftui"}},s={},u=[{value:"OSS Combine apps",id:"oss-combine-apps",level:2},{value:"Links",id:"links",level:2}],c={toc:u};function b(e){var t=e.components,i=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"combine-framework"},(0,r.kt)("a",{parentName:"h1",href:"https://developer.apple.com/documentation/combine"},"Combine Framework")),(0,r.kt)("h2",{id:"oss-combine-apps"},"OSS Combine apps"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/qeude/Notflix"},"Notflix")," - Netflix like application using SwiftUI and Combine.")),(0,r.kt)("h2",{id:"links"},"Links"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/learncombine/Combine101"},"Combine101")," - Gentle but thorough introduction to Combine."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/sergdort/CombineFeedback"},"CombineFeedback")," - Unidirectional reactive architecture using new Apple Combine framework."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/cx-org/CombineX"},"CombineX")," - Open source implementation for Apple's Combine."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.raywenderlich.com/6185979-combine-asynchronous-programming-with-swift-complete-book-available"},"Combine: Asynchronous Programming with Swift book (2019)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.vadimbulavin.com/debugging-with-combine-swift-framework/"},"Debugging with Swift Combine Framework (2019)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/CombineCommunity/awesome-combine"},"Awesome Combine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenCombine/OpenCombine"},"OpenCombine")," - Open source implementation of Apple's Combine framework for processing values over time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/inamiy/Harvest"},"Harvest")," - Apple's Combine.framework + State Machine, inspired by Elm."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/tcldr/Entwine"},"Entwine")," - Testing tools and utilities for Apple's Combine framework."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.vadimbulavin.com/asynchronous-programming-with-future-and-promise-in-swift-with-combine-framework/"},"Asynchronous Programming with Futures and Promises in Swift with Combine Framework (2020)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://timelane.tools/"},"Timelane")," - Visually profile your asynchronous code. (",(0,r.kt)("a",{parentName:"li",href:"http://trycombine.com/posts/announcing-timelane-combine/"},"Article"),") (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/icanzilb/Timelane"},"Code"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/antitypical/Result"},"RxCombine")," - Bi-directional type bridging between RxSwift and Apple's Combine framework."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gumroad.com/l/practical-combine"},"Practical Combine")," - Introduction to Combine with real examples."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://heckj.github.io/swiftui-notes/"},"Using Combine")," - Notes on learning Combine with UIKit and SwiftUI."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/groue/GRDBCombine"},"GRDBCombine")," - Set of extensions for SQLite, GRDB.swift, and Combine."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/AlexeyVoronov96/NewsApp-With-SwiftUI-And-Combine"},"NewsApp built with SwiftUI & Combine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/CombineCommunity/CombineExt"},"CombineExt")," - Provides a collection of operators, publishers and utilities for Combine."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/icanzilb/OperationTimelane"},"OperationTimelane")," - Timelane + Operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/icanzilb/TimelaneCombine"},"Timelane + Combine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/denisPoifol/CombinePlaygrounds"},"CombinePlaygrounds")," - Playground that should read as book about the Combine framework."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/nkristek/ReactiveTimelane"},"ReactiveTimelane")," - Provides operators for Signal and SignalProducer in ReactiveSwift for profiling streams with the Timelane Instrument."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/CombineCommunity/rxswift-to-combine-cheatsheet"},"RxSwift to Apple\u2019s Combine Cheat Sheet (2019)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/pointfreeco/combine-schedulers"},"Combine Schedulers")," - Few schedulers that make working with Combine more testable and more versatile."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.donnywals.com/retrying-a-network-request-with-a-delay-in-combine/"},"Retrying a network request with a delay in Combine (2020)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/robertpalmer/CombineMarbles"},"Swift Combine Marbles")," - Interactive diagrams of swift combine publishers for iOS and macOS."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/AvdLee/CombineSwiftPlayground"},"Swift Playground explaining the concepts of the new Combine framework")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Sixt/TimelaneCombineX"},"TimelaneCombineX")," - Timelane + CombineX."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/icanzilb/CustomInstrument"},"Custom Instrument based on Timelane")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/johnsundell/status/1295685964380151810"},"Fun with Apple\u2019s Combine framework (2020)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://duan.ca/2019/07/01/combine-hygiene/"},"On the Subject of Interface Hygiene (2019)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/CombineCommunity/CombineCocoa"},"CombineCocoa")," - Combine publisher bridges for UIKit."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://6ary.medium.com/combine-getting-started-guide-c5ac0febc04c"},"Combine Getting Started Guide (2021)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://swiftwithmajid.com/2021/04/07/designing-api-using-combine-framework/"},"Designing API using Combine framework (2021)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/groue/CombineExpectations"},"Combine Expectations")," - Utilities for tests that wait for Combine publishers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://benscheirman.com/2021/06/async-await-and-the-future-of-combine/"},"Async/Await and the Future of Combine (2021)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/CombineCommunity/CombineDataSources"},"CombineDataSources")," - Table and collection view data sources for Combine."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://combine.community/"},"Combine Community")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CombineCommunity"},"GitHub"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/chris-araman/CombineCloudKit"},"CombineCloudKit")," - Swift Combine extensions for reactive CloudKit record processing. Designed for simplicity."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/jameshurst/CombineWaiting"},"CombineWaiting")," - Synchronously wait for Combine publishers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://defagos.github.io/declarative_reactive_programming_with_combine/"},"Declarative Reactive Programming with Combine (2021)")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/defagos/DeclarativeCombine"},"Code"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/swiftwasm/OpenCombineJS"},"OpenCombineJS")," - OpenCombine helpers for JavaScriptKit/WebAssembly APIs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://peterfriese.dev/posts/swiftui-combine-networking-gettingstarted/"},"Networking with Combine and SwiftUI")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/peterfriese/SwiftUI-Combine-Applied"},"Code"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ReSwift/Recombine"},"Recombine")," - Deeply opinionated Redux-like implementation of the unidirectional data flow architecture in Swift."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/tailec/CombineExamples"},"Getting started with Apple Combine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/vmanot/Merge"},"Merge")," - Robust task management and concurrency utilities built atop Combine.")))}b.isMDXComponent=!0}}]);