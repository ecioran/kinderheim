"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[24614],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return h}});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var f=r.createContext({}),s=function(e){var t=r.useContext(f),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(f.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,f=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(a),h=i,c=m["".concat(f,".").concat(h)]||m[h]||p[h]||n;return a?r.createElement(c,o(o({ref:t},u),{},{components:a})):r.createElement(c,o({ref:t},u))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=m;var l={};for(var f in t)hasOwnProperty.call(t,f)&&(l[f]=t[f]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<n;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2264:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return f},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=a(87462),i=a(63366),n=(a(67294),a(3905)),o=["components"],l={title:"Differential equations"},f="[Differential equations](https://en.wikipedia.org/wiki/Differential_equation)",s={unversionedId:"math/differential-equations",id:"math/differential-equations",title:"Differential equations",description:"Links",source:"@site/docs/math/differential-equations.md",sourceDirName:"math",slug:"/math/differential-equations",permalink:"/kinderheim/math/differential-equations",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/math/differential-equations.md",tags:[],version:"current",frontMatter:{title:"Differential equations"},sidebar:"tutorialSidebar",previous:{title:"Category theory",permalink:"/kinderheim/math/category-theory/"},next:{title:"Fourier transform",permalink:"/kinderheim/math/fourier-transform"}},u={},p=[{value:"Links",id:"links",level:2}],m={toc:p};function h(e){var t=e.components,a=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"differential-equations"},(0,n.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Differential_equation"},"Differential equations")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=p_di4Zn4wz4"},"Overview of differential equations | Chapter 1 (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=ILiL4m61BLw"},"Lecture on differential equations using GNU TeXmacs (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/lululxvi/deepxde"},"DeepXDE")," - Deep learning library for solving differential equations on top of TensorFlow."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/DiffEqML/torchdyn"},"torchdyn")," - PyTorch based library for all things neural differential equations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/patrick-kidger/NeuralCDE"},"Neural Controlled Differential Equations for Irregular Time Series")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.math.ucla.edu/~tao/preprints/forms.pdf"},"Differential Forms and Integration (2008)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23269351"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://math.mit.edu/~dyatlov/18.03/"},"MIT Differential Equations course (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mitmath/18303/tree/fall16"},"MIT Linear Partial Differential Equations: Analysis and Numerics (2016)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://math.mit.edu/~stevenj/18.336/"},"MIT Numerical Methods for Partial Differential Equations (2006)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/@luca.ambrogioni/an-intuitive-look-at-differential-forms-8b405f2429f0"},"An intuitive look at differential forms (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2010.11270"},"Learning second order coupled differential equations that are subject to non-conservative forces (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24968805"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/psg-mit/smooth"},"Smooth")," - Arbitrary-precision differentiable programming language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mrc-ide/odin"},"odin")," - DSL for describing and solving differential equations in R."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2007.04504"},"Learning Differential Equations that are Easy to Solve (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jacobjinkelly/easy-neural-ode"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bluescarni/heyoka"},"heyoka")," - C++ library for ODE integration via Taylor's method and LLVM."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NanoScaleDesign/OrdinaryDifferentialEquations"},"Ordinary Differential Equations Course Notes")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2011.13456"},"Score-Based Generative Modeling through Stochastic Differential Equations (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/yang-song/score_sde"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.jirka.org/diffyqs/"},"Notes on Diffy Qs: Differential Equations for Engineers")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jirilebl/diffyqs"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nw2190/ConvPDE"},"Convolutional Solvers for PDEs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SciML/diffeqpy"},"diffeqpy")," - Package for solving differential equations in Python."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NeuroDiffGym/neurodiffeq"},"neurodiffeq")," - Package for solving differential equations with neural networks."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mlysy/rodeo"},"rodeo")," - Probabilistic Solution of Differential Equations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zongyi-li/graph-pde"},"Graph based neural operators")," - Using graph network to solve PDEs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://barghouthi.github.io/2018/05/01/differentiable-programming/"},"Differentiable Programming: A Semantics Perspective (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/DedalusProject/dedalus"},"Dedalus")," - Flexible framework for solving partial differential equations using spectral methods. (",(0,n.kt)("a",{parentName:"li",href:"https://dedalus-project.org/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mitmath/18336"},"MIT Fast Methods for Partial Differential and Integral Equations Course (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/patrick-kidger/diffrax"},"Diffrax")," - Numerical differential equation solvers in JAX. Autodifferentiable and GPU-capable."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/boschresearch/torchphysics"},"TorchPhysics")," - Python library of deep learning methods for solving differential equations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mattsse/diffeq"},"diffeq")," - Basic Ordinary Differential Equation solvers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://fenicsproject.org/"},"FEniCSx")," - Computing platform for solving partial differential equations (PDEs)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/FEniCS/dolfinx"},"DOLFINx")," - Computational environment of FEniCSx and implements the FEniCS Problem Solving Environment in Python and C++."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/google-research/torchsde"},"PyTorch Implementation of Differentiable SDE Solvers")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=EMFl6ytP3iQ"},"Probabilistic Numerics for Differential Equations | Nathanael Bosch (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bluescarni/heyoka.py"},"heyoka.py")," - Python library for ODE integration via Taylor's method and LLVM.")))}h.isMDXComponent=!0}}]);