"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[268],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return u}});var r=a(67294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function n(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?n(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,i=function(t,e){if(null==t)return{};var a,r,i={},n=Object.keys(t);for(r=0;r<n.length;r++)a=n[r],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(r=0;r<n.length;r++)a=n[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var s=r.createContext({}),p=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},m=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},h=r.forwardRef((function(t,e){var a=t.components,i=t.mdxType,n=t.originalType,s=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),h=p(a),u=i,d=h["".concat(s,".").concat(u)]||h[u]||c[u]||n;return a?r.createElement(d,o(o({ref:e},m),{},{components:a})):r.createElement(d,o({ref:e},m))}));function u(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var n=a.length,o=new Array(n);o[0]=h;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var p=2;p<n;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},38279:function(t,e,a){a.r(e),a.d(e,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=a(87462),i=a(63366),n=(a(67294),a(3905)),o=["components"],l={title:"Conflict-free replicated data type"},s="[Conflict-free replicated data type](https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type)",p={unversionedId:"distributed-systems/crdt",id:"distributed-systems/crdt",title:"Conflict-free replicated data type",description:"Liveblocks is a neat application of CRDTs. Yjs is nice too. CRDT wiki is great.",source:"@site/docs/distributed-systems/crdt.md",sourceDirName:"distributed-systems",slug:"/distributed-systems/crdt",permalink:"/kinderheim/distributed-systems/crdt",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/distributed-systems/crdt.md",tags:[],version:"current",frontMatter:{title:"Conflict-free replicated data type"},sidebar:"tutorialSidebar",previous:{title:"Distributed systems",permalink:"/kinderheim/distributed-systems/"},next:{title:"Load balancing",permalink:"/kinderheim/distributed-systems/load-balancing"}},m={},c=[{value:"Notes",id:"notes",level:2},{value:"Links",id:"links",level:2}],h={toc:c};function u(t){var e=t.components,a=(0,i.Z)(t,o);return(0,n.kt)("wrapper",(0,r.Z)({},h,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"conflict-free-replicated-data-type"},(0,n.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type"},"Conflict-free replicated data type")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/liveblocks/liveblocks"},"Liveblocks")," is a neat application of CRDTs. ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/yjs/yjs"},"Yjs")," is nice too. ",(0,n.kt)("a",{parentName:"p",href:"https://crdt.tech/"},"CRDT wiki")," is great."),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/9fufgr/i_was_wrong_crdts_are_future"},"Distributed state is so fundamentally complex that I think we actually need CRDTs (or something like them) to reason about it effectively. And certainly to build reliable systems. The abstraction of a single, global, logical truth is so nice and tidy and appealing, but it becomes so leaky that I think all successful systems for distributed state will abandon it beyond a certain scale."))),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.dotconferences.com/2019/12/james-long-crdts-for-mortals"},"James Long - CRDTs for Mortals (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://christophermeiklejohn.com/erlang/lasp/2019/03/08/monotonicity.html"},"Applied Monotonicity: A Brief History of CRDTs in Riak (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/xi-editor/xi-editor/issues/1187#issuecomment-491473599"},"Why CRDT didn't work out as well for collaborative editing xi-editor")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=19886883"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.figma.com/blog/how-figmas-multiplayer-technology-works/"},"How Figma\u2019s multiplayer technology works (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21464189"},"HN thread on CRDT (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://josephg.com/blog/api-for-changes/"},"An API for data that changes over time (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/josephg/statecraft"},"Statecraft")," - Protocol and set of tools for interacting with data that changes over time."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jlongster/crdt-example-app"},"Full implementation of CRDTs using hybrid logical apps and a demo app that uses it")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gritzko/swarm"},"Swarm.js")," - JavaScript replicated model (M of MVC) library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.tiny.cloud/blog/real-time-collaboration-ot-vs-crdt/"},"To OT or CRDT, that is the question (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22039950"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crdt.tech/"},"CRDTs wiki")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ept/crdt-website"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30983770"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/alangibson/awesome-crdt"},"Awesome CRDT")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jaredly/local-first"},"Local-first packages & explorations")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/automerge/automerge"},"Automerge in JS")," - JSON-like data structure (a CRDT) that can be modified concurrently by different users, and merged again automatically. (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/steveruizok/status/1421865156724805639"},"Tweet"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30412550"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://automerge.org/docs/hello/"},"Docs"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30881016"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jeffa5/automergeable"},"Automergeable")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/alexjg/automerge-rs"},"Automerge in Rust")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jeffa5/automerge-persistent"},"Automerge persistent")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://overcast.fm/+GdnXKIjWQ"},"Peter Bourgon on CRDTs and State at the Edge (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://martin.kleppmann.com/papers/list-move-papoc20.pdf"},"Moving Elements in List CRDTs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2002.09511v4"},"Chronofold: a data structure for versioned text (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/soundcloud/roshi"},"roshi")," - Large-scale CRDT set implementation for timestamped events."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dmonad/crdt-benchmarks"},"CRDT benchmarks")," - Collection of reproducible benchmarks."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jemc/pony-crdt"},"pony-crdt")," - Delta-State Convergent Replicated Data Types (\u1e9f-CRDTs) for the Pony language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jemc/jylis"},"Jylis")," - Distributed in-memory database for Conflict-free Replicated Data Types (CRDTs), built for speed, scalability, availability, and ease of use."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lars.hupel.info/topics/crdt/01-intro"},"An introduction to Conflict-Free Replicated Data Types (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23737639"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=x7drE24geUw"},"CRDTs: The Hard Parts (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://martin.kleppmann.com/2020/07/06/crdt-hard-parts-hydra.html"},"Abstract & References"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23802208"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://amattn.com/p/riaks_two_contentions_and_crdts.html"},"CRDTs in a Nutshell (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/ipbe60/crdts_nutshell"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://appdecentral.com/2020/07/22/a-first-replicating-type/"},"A First Replicating Type (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://appdecentral.com/2020/07/12/conflict-free-replicated-data-types-crdts-in-swift/"},"Conflict-Free Replicated Data Types (CRDTs) in Swift (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.inkandswitch.com/media/local-first/local-first.pdf"},"Local-first software: You Own Your Data, in spite of the Cloud (2019)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24027663"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.kevinjahns.de/are-crdts-suitable-for-shared-editing/"},"Are CRDTs suitable for shared editing? (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.roomservice.dev/"},"Room Service")," - Faster-Than-Light Multiplayer Engine. (",(0,n.kt)("a",{parentName:"li",href:"https://www.roomservice.dev/docs"},"Docs"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://josephg.com/blog/crdts-are-the-future/"},"I was wrong. CRDTs are the future (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24617542"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/9fufgr/i_was_wrong_crdts_are_future"},"Lobsters"),") (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/rust/comments/j1hb3a/i_was_wrong_crdts_are_the_future/"},"Reddit"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31049883"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hex.tech/blog/a-pragmatic-approach-to-live-collaboration"},"A Pragmatic Approach to Live Collaboration (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://brandur.org/nanoglyphs/014-local-first"},"Local First (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gist.github.com/russelldb/f92f44bdfb619e089a4d"},"A Bluffers Guide to CRDTs in Riak")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/davidrusu/bft-crdts"},"bft-crdts")," - Byzantine Fault Tolerant CRDT's and other Eventually Consistent Algorithms. In Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.gsd.inesc-id.pt/~ler/reports/carlosbartolomeu-midterm.pdf"},"Large-Scale Geo-Replicated Conflict-free Replicated Data Types")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pfrazee/crdt_notes"},"CRDT notes")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Nishimura-Katsuo/syncpad"},"syncpad")," - CRDT-based collaborative source code editor (featuring the Monaco editor)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ttaylorr/thesis"},"Verifying Strong Eventual Consistency in \u03b4-CRDTs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/YousefED/reactive-crdt"},"Reactive CRDT")," - Easy-to-use library for building collaborative applications that sync automatically."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hyoo-ru/crowd.hyoo.ru"},"Conflict-free Reinterpretable Ordered Washed Data (CROWD)")," - Like CRDT but better. (",(0,n.kt)("a",{parentName:"li",href:"https://crowd.hyoo.ru/"},"Demo"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/codesandbox/crdt-tree"},"crdt-tree")," - Implementation of a tree Conflict-Free Replicated Data Type in TS."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ljwagerfield/crdt"},"CRDT Tutorial for Beginners")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bartoszsypytkowski.com/crdt-optimizations/"},"CRDT optimizations (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bartoszsypytkowski.com/pure-operation-based-crdts/"},"Pure operation-based CRDTs (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bartoszsypytkowski.com/operation-based-crdts-json-document/"},"Operation-based CRDTs: JSON document (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/josephg/text-crdt-rust"},"Text CRDT Prototype")," - Prototype of a simple high performance CRDT for text. Its loosely based off automerge."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://josephg.com/blog/crdts-go-brrr/"},"Faster CRDTs: An Adventure in Optimization (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28017204"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dkellner/chronofold"},"Chronofold")," - Conflict-free replicated data structure (a.k.a. CRDT) for versioned text."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/tmcw/status/1433436431658196997"},"What to use to build collaborative web application today (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28998767"},"HN: CRDT resources (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ably.com/blog/crdts-distributed-data-consistency-challenges"},"How do CRDTs solve distributed data consistency challenges? (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29025724"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/agravier/crdt-study"},"LWW-element-graphs study")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29026978"},"Comment"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ipfs/go-ds-crdt"},"go-ds-crdt")," - Distributed go-datastore implementation using Merkle-CRDTs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/vitorenesduarte/ldb"},"ldb")," - Replication of CRDTs in Erlang."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/HerbCaudill/crdx"},"CRDTs meet Redux")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/inkandswitch/peritext"},"Peritext")," - CRDT for asynchronous rich-text collaboration, where authors can work independently and then merge their changes. (",(0,n.kt)("a",{parentName:"li",href:"https://www.inkandswitch.com/peritext/"},"Article"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Qytg0Ibet2E"},"Automerge: a new foundation for collaboration software (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/martinkl/status/1465013736167833601"},"Tweet"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29501465"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yousefed/SyncedStore"},"SyncedStore CRDT")," - Easy-to-use library for building live, collaborative applications that sync automatically. (",(0,n.kt)("a",{parentName:"li",href:"https://syncedstore.org/docs/"},"Docs"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29483913"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dai-shi/valtio-yjs"},"valtio-yjs")," - Proxy state library for ReactJS and VanillaJS. yjs is an implementation of CRDT algorithm (which allows to merge client data without server coordination)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/SerenityNotes/naisho"},"Naisho")," - Architecture for end-to-end encrypted CRDTs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://pepijndevos.nl/2021/12/18/the-limits-of-conflict-free-replicated-data-types.html"},"The limits of conflict-free replicated data types (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/peer-base/js-delta-crdts"},"delta-crdts")," - Delta State-based CRDTs in JavaScript."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/y-crdt/ypy"},"Y-Py")," - Python binding for Y-CRDT."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/@amberovsky/crdt-conflict-free-replicated-data-types-b4bfc8459d26"},"CRDT: Conflict-free Replicated Data Types (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://martin.kleppmann.com/papers/bft-crdt-papoc22.pdf"},"Making CRDTs Byzantine Fault Tolerant")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30560573"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://martin.kleppmann.com/papers/move-op.pdf"},"A highly-available move operation for replicated trees")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30811072"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.ditto.live/blog/testing-crdts-in-rust-from-theory-to-practice"},"Testing CRDTs in Rust, From Theory to Practice (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/uzuizm/testing_crdts_rust_from_theory_practice"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/orbitdb/crdts"},"CRDTs")," - Library of Conflict-Free Replicated Data Types for JavaScript."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bluk/CRDT"},"CRDT Swift")," - Convergent and Commutative Replicated Data Types implementation in Swift."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/anshulahuja98/python3-crdt"},"Python CRDT")," - Python library for CRDTs (Conflict-free Replicated Data types)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mattweidner.com/2022/02/10/collaborative-data-design.html"},"Designing Data Structures for Collaborative Apps (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://2022.ecoop.org/home/plf-2022"},"Programming Local-first Software (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jeffa5/checked-automerge"},"checked-automerge")," - Attempt at model checking Automerge.")))}u.isMDXComponent=!0}}]);