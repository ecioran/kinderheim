"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[95379],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return h}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=u(r),h=o,f=m["".concat(c,".").concat(h)]||m[h]||y[h]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},60258:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return y}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],p={title:"Computational type theory"},c="[Computational type theory](http://www.scholarpedia.org/article/Computational_type_theory)",u={unversionedId:"math/type-theory/computational-type-theory",id:"math/type-theory/computational-type-theory",title:"Computational type theory",description:"Links",source:"@site/docs/math/type-theory/computational-type-theory.md",sourceDirName:"math/type-theory",slug:"/math/type-theory/computational-type-theory",permalink:"/kinderheim/math/type-theory/computational-type-theory",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/math/type-theory/computational-type-theory.md",tags:[],version:"current",frontMatter:{title:"Computational type theory"},sidebar:"tutorialSidebar",previous:{title:"Type Theory",permalink:"/kinderheim/math/type-theory/"},next:{title:"Cubical type theory",permalink:"/kinderheim/math/type-theory/cubical-type-theory"}},l={},y=[{value:"Links",id:"links",level:2}],m={toc:y};function h(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"computational-type-theory"},(0,a.kt)("a",{parentName:"h1",href:"http://www.scholarpedia.org/article/Computational_type_theory"},"Computational type theory")),(0,a.kt)("h2",{id:"links"},"Links"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=LE0SSLizYUI"},"Computational Type Theory by Robert Harper (2018)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=cmYzJAsjYSo"},"Higher Inductive Types in Cubical Computational Type Theory (2019)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://von-raumer.de/academic/phd_vonraumer.pdf"},"Higher Inductive Types, Inductive Families, and Inductive-Inductive Types (2019)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/jonsterling/JonPRL"},"JonPRL")," - Proof refinement logic for computational type theory based on realizability & the verificationist meaning explanation.")))}h.isMDXComponent=!0}}]);