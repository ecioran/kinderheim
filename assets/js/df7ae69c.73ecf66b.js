"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[80170],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return h}});var r=a(67294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function n(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,r,i=function(t,e){if(null==t)return{};var a,r,i={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var o=r.createContext({}),p=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):n(n({},e),t)),a},s=function(t){var e=p(t.components);return r.createElement(o.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,i=t.mdxType,l=t.originalType,o=t.parentName,s=m(t,["components","mdxType","originalType","parentName"]),u=p(a),h=i,f=u["".concat(o,".").concat(h)]||u[h]||c[h]||l;return a?r.createElement(f,n(n({ref:e},s),{},{components:a})):r.createElement(f,n({ref:e},s))}));function h(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var l=a.length,n=new Array(l);n[0]=u;var m={};for(var o in e)hasOwnProperty.call(e,o)&&(m[o]=e[o]);m.originalType=t,m.mdxType="string"==typeof t?t:i,n[1]=m;for(var p=2;p<l;p++)n[p]=a[p];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},56950:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return c}});var r=a(87462),i=a(63366),l=(a(67294),a(3905)),n=["components"],m={title:"OCaml libraries"},o="[OCaml](https://ocaml.org) libraries",p={unversionedId:"programming-languages/ocaml/ocaml-libraries",id:"programming-languages/ocaml/ocaml-libraries",title:"OCaml libraries",description:"Web",source:"@site/docs/programming-languages/ocaml/ocaml-libraries.md",sourceDirName:"programming-languages/ocaml",slug:"/programming-languages/ocaml/ocaml-libraries",permalink:"/kinderheim/programming-languages/ocaml/ocaml-libraries",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/ocaml/ocaml-libraries.md",tags:[],version:"current",frontMatter:{title:"OCaml libraries"},sidebar:"tutorialSidebar",previous:{title:"OCaml",permalink:"/kinderheim/programming-languages/ocaml/"},next:{title:"Pascal",permalink:"/kinderheim/programming-languages/pascal"}},s={},c=[{value:"Web",id:"web",level:2},{value:"Test",id:"test",level:2},{value:"Science",id:"science",level:2},{value:"ML",id:"ml",level:2},{value:"DB",id:"db",level:2},{value:"Bindings",id:"bindings",level:2},{value:"CLI",id:"cli",level:2},{value:"Error",id:"error",level:2},{value:"Graphics",id:"graphics",level:2},{value:"Linux",id:"linux",level:2},{value:"Crypto",id:"crypto",level:2},{value:"Other",id:"other",level:2},{value:"Links",id:"links",level:2}],u={toc:c};function h(t){var e=t.components,a=(0,i.Z)(t,n);return(0,l.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"ocaml-libraries"},(0,l.kt)("a",{parentName:"h1",href:"https://ocaml.org"},"OCaml")," libraries"),(0,l.kt)("h2",{id:"web"},"Web"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/aantron/hyper"},"Hyper")," - OCaml Web client, composable with Dream."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/anmonteiro/ocaml-h2"},"h2")," - HTTP/2 implementation written in pure OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/rgrinberg/opium"},"Opium")," - Sinatra like web toolkit for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/roddyyaga/ocoi"},"OCaml On Ice")," - Web framework for OCaml in the style of Ruby on Rails."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/inhabitedtype/httpaf"},"http/af")," - High performance, memory efficient, and scalable web server written in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocsigen/eliom"},"Eliom")," - Framework for building client/server Web and mobile applications in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/LaurentMazare/ocaml-wasmtime"},"ocaml-wasmtime")," - OCaml WebAssembly runtime powered by wasmtime."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/aantron/dream"},"Dream")," - Tidy, feature-complete Web framework. (",(0,l.kt)("a",{parentName:"li",href:"https://aantron.github.io/dream/"},"Docs"),") (",(0,l.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26758151"},"HN"),") (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/andreypopp/dream-oauth2"},"Example App"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tmattio/js-bindings"},"OCaml JavaScript bindings")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/c-cube/tiny_httpd"},"Tiny_httpd")," - Minimal HTTP server using good old threads + blocking IO, with small request router."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/ocaml-cohttp"},"ocaml-cohttp")," - OCaml library for HTTP clients and servers using Lwt or Async."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/anuragsoni/async_http"},"Async_http")," - Simple HTTP server for async applications."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/marigold-dev/pollinate"},"Pollinate")," - Platform agnostic OCaml library for P2P communications using UDP and Bin_prot.")),(0,l.kt)("h2",{id:"test"},"Test"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/alcotest"},"Alcotest")," - Lightweight and colorful test framework."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/jmid/mutaml"},"Mutaml")," - Mutation Tester for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/stedolan/crowbar"},"Crowbar")," - Property fuzzing for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/vincent-hugot/qtest"},"qtest")," - Inline (Unit) Tests for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/c-cube/qcheck"},"QCheck")," - Property-based testing for OCaml.")),(0,l.kt)("h2",{id:"science"},"Science"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/owlbarn/owl"},"Owl")," - OCaml library for scientific and engineering computing. (",(0,l.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=20449595"},"HN"),") (",(0,l.kt)("a",{parentName:"li",href:"https://ocaml.xyz/"},"Web"),")")),(0,l.kt)("h2",{id:"ml"},"ML"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/liaopeiyuan/zeta"},"zeta")," - Functional neural networks in ocaml. (",(0,l.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22020287"},"HN"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/igarnier/prbnmcn-clustering"},"prbnmcn-clustering")," - Clustering with k-means, k-medoids & agglomerative clustering.")),(0,l.kt)("h2",{id:"db"},"DB"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/paurkedal/ocaml-caqti"},"Caqti")," - Cooperative-threaded access to relational data."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mmottl/postgresql-ocaml"},"PostgreSQL-OCaml")," - PostgreSQL Bindings for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/anuragsoni/postgres-protocol"},"postgres-protocol")," - IO independent postgres protocol implementation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/yomimono/chamelon"},"chamelon")," - Small, simple block-backed key-value store for MirageOS."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/yawaramin/ocaml_sql_query"},"ocaml_sql_query")," - Functional-style SQLite queries for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/paurkedal/episql"},"epiSQL")," - SQL schema parser and code generator."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/arenadotio/pgx"},"PGX")," - Pure OCaml PostgreSQL client library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/andrenth/sequoia"},"Sequoia")," - Type-safe query builder for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dbuenzli/rel"},"rel")," - Relational database programming for OCaml.")),(0,l.kt)("h2",{id:"bindings"},"Bindings"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/zshipko/ocaml-py"},"Python 3.5+ bindings for OCaml"))),(0,l.kt)("h2",{id:"cli"},"CLI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dbuenzli/cmdliner"},"Cmdliner")," - Declarative definition of command line interfaces for OCaml. (",(0,l.kt)("a",{parentName:"li",href:"https://erratique.ch/software/cmdliner"},"Web"),") (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/mjambon/cmdliner-cheatsheet"},"Cmdliner cheatsheet"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/pqwy/notty"},"Notty")," - Declarative terminal graphics for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/CraigFe/progress"},"Progress")," - User-definable progress bars for OCaml.")),(0,l.kt)("h2",{id:"error"},"Error"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/EduardoRFS/ppx_let_locs"},"ppx_let_locs")," - Improving stack trace for let monadic."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Armael/pp_loc"},"pp_loc")," - Provides support to additionally quote and highlight the input fragment the input that corresponds to a location (or a set of locations)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/janestreet/ppx_assert"},"ppx_assert")," - Assert-like extension nodes that raise useful errors on failure.")),(0,l.kt)("h2",{id:"graphics"},"Graphics"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dbuenzli/vg"},"Vg")," - Declarative 2D vector graphics for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/art-w/unicorn"},"unicorn")," - Purely functional GUI algebra."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/orx/ocaml-orx"},"ocaml-orx")," - OCaml bindings to the Orx game library.")),(0,l.kt)("h2",{id:"linux"},"Linux"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-multicore/ocaml-uring"},"ocaml-uring")," - Bindings to io_uring for OCaml.")),(0,l.kt)("h2",{id:"crypto"},"Crypto"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/xavierleroy/cryptokit"},"Cryptokit")," - Library of cryptographic primitives (ciphers, hashes, etc) for OCaml.")),(0,l.kt)("h2",{id:"other"},"Other"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml/ocamlbuild"},"OCamlbuild")," - Generic build tool, that has built-in rules for building OCaml library and programs."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/LexiFi/ocaml-vdom"},"ocaml-vdom")," - Elm architecture and (V)DOM for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocsigen/lwt"},"Lwt")," - OCaml promises and concurrent I/O."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocamllabs/higher"},"higher")," - Higher-kinded programming in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/andreas/ocaml-graphql-server"},"GraphQL Servers in OCaml")," - Create GraphQL servers in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/anmonteiro/piaf"},"piaf")," - Client library for HTTP/1.X / HTTP/2 written entirely in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/backtracking/ocamlgraph"},"OCamlgraph")," - OCaml graph library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/aantron/luv"},"luv")," - Minimalist binding to libuv from OCaml and Reason."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/smolkaj/nice-parser"},"Nice Parser")," - Nice parsers in OCaml without the boilerplate."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/jmid/qcstm"},"QCSTM")," - simple state-machine framework for OCaml based on QCheck."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-ppx/ppx_deriving"},"deriving")," - Library simplifying type-driven code generation on OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/chrisnevers/ocamline"},"OCamline")," - Command line interface for user input."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-batteries-team/batteries-included"},"OCaml Batteries Included")," - Community-maintained foundation library for your OCaml projects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/janestreet/incremental"},"incremental")," - Library for incremental computations."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/LexiFi/landmarks"},"Landmarks")," - Simple Profiling Library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/returntocorp/pfff"},"pfff")," - Set of tools and APIs to perform static analysis, code visualizations, code navigations, or style-preserving source-to-source transformations such as refactorings on source code."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/stedolan/ppx_stage"},"ppx_stage")," - Staged metaprogramming in stock OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/odis-labs/streaming"},"Streaming")," - Fast, safe and composable streaming abstractions. (",(0,l.kt)("a",{parentName:"li",href:"https://discuss.ocaml.org/t/ann-first-release-of-streaming/5961"},"Announcement"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mariojppereira/cameleer"},"cameleer")," - Deductive Verification Tool for OCaml Programs."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-ppx/ppxlib"},"Ppxlib")," - Base library and tools for ppx rewriters."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/jchavarri/jsoo-react"},"jsoo-react")," - Bindings to React for js_of_ocaml, including JSX ppx. Allows to use React from OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/bvaugon/obytelib"},"OByteLib")," - OCaml bytecode library tools. Useful to read, write and evaluate OCaml bytecode files."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/zshipko/ocaml-bimage"},"bimage")," - Composable image processing library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/let-def/lwd"},"Lwd")," - Lets you build values that changes over time."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/digestif"},"Digestif")," - Hash algorithms in C and OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/OCamlPro/directories"},"directories")," - OCaml library that provides configuration, cache and data paths."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/repr"},"Repr")," - Run-time representations of OCaml types."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/keigoi/ocaml-mpst"},"OCaml-MPST")," - Communication library powered by Multiparty Session Types (abbreviated as MPST) in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/eqaf"},"eqaf")," - Constant time equal function."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-dune/pp"},"Pp")," - Pretty printing library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/capnproto/capnp-ocaml"},"capnp-ocaml")," - OCaml code generator plugin for the Cap'n Proto serialization framework."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocsigen/tyxml"},"TyXML")," - Build valid HTML and SVG documents."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/UnixJunkie/parany"},"parany")," - Parallelize any kind of computation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/metrics"},"Metrics")," - Infrastructure to collect metrics from OCaml applications."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/rgrinberg/ocaml-mustache"},"ocaml-mustache")," - Mustache.js logic-less templates in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/janestreet/ppx_optcomp"},"ppx_optcomp")," - Optional compilation for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/keigoi/session-ocaml"},"Session-ocaml")," - Implementation of binary session types in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dbuenzli/brr"},"brr")," - Browser programming toolkit for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/samoht/dyntype"},"Dyntype")," - Dynamic types for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dannywillems/RML"},"RML")," - ML modules and functors as first-class citizens."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/vocal-project/vocal"},"VOCaL")," - Verified OCaml Library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dbuenzli/fmt"},"Fmt")," - OCaml Format pretty-printer combinators."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/awa-ssh"},"awa-ssh")," - Purely functional SSH library in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/hbr/fmlib"},"Fmlib")," - Functional Monadic Library for Ocaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-multicore/eioio"},"eioio")," - Effects-based direct-style IO for multicore OCaml. (",(0,l.kt)("a",{parentName:"li",href:"https://discuss.ocaml.org/t/eio-0-1-effects-based-direct-style-io-for-ocaml-5/9298"},"0.1 release"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mmottl/res"},"RES")," - OCaml library for resizable arrays and strings."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/xvw/preface"},"Preface")," - Opinionated library designed to facilitate the handling of recurring functional programming idioms in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/c-cube/ocaml-containers"},"OCaml Containers")," - Modular, clean and powerful extension of the OCaml standard library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/aionescu/vec"},"vec")," - Fast, safe mutable dynamic arrays for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/shonfeder/um-abt"},"um-abt")," - OCaml library implementing abstract binding trees (ABTs)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/patricoferris/ocaml-stun"},"ocaml-stun")," - Pure OCaml implementation of the Session Traversal Utilities for NAT (STUN) protocol (STUN)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-gospel/ortac"},"ortac")," - OCaml Runtime Assertion Checking."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/bloomf"},"Bloomf")," - Efficient Bloom filters for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/index"},"Index")," - Scalable implementation of persistent indices in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/CraigFe/ppx_effects"},"ppx_effects")," - Syntax extensions for untyped effects in OCaml 5."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tomjridge/kv-hash"},"kv-hash")," - Key Value store using a persistent hashtable approach."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cuplv/dai"},"DAI")," - Demanded Abstract Interpretation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/CraigFe/field_repr"},"field_repr")," - Efficient run-time representations of OCaml record fields."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/pascutto/cachecache"},"CacheCache")," - Efficient caching library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ygrek/ocaml-extlib"},"ocaml-extlib")," - Extended Standard Library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/murmour/mparser"},"MParser")," - Simple monadic parser combinator library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ghuysmans/futurama"},"futurama")," - Finite permutation library with an optimizing compiler."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ghuysmans/algebra"},"algebra")," - Definitions for common algebraic structures."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ktahar/ocaml-lp"},"ocaml-lp")," - Helps the modeling of Linear Programming (LP) and Mixed Integer Programming (MIP) in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/paurkedal/ppx_regexp"},"ppx_regexp")," - Matching Regular Expressions with OCaml Patterns."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/anuragsoni/shuttle"},"Shuttle")," - Buffered channels for async."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/anuragsoni/poll"},"Poll")," - Portable OCaml API to poll file descriptors for IO readiness. Supports kqueue and epoll for now."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dinosaure/art"},"ART")," - Adaptive Radix Tree in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/c-cube/ocaml-avro"},"Avro")," - Runtime library and schema compiler for the Avro serialization format."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/let-def/cmon"},"CMON")," - Library for printing OCaml values with sharing."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/maiste/equinoxe"},"Equinoxe")," - Equinix API client library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/janestreet/ocaml_plugin"},"ocaml_plugin")," - Automatically build and dynlink OCaml source files."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/c-cube/lwt-pipe"},"Lwt Pipe")," - Multi-consumer, multi-producers blocking queue and stream for Lwt."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-community/sedlex"},"sedlex")," - Unicode-friendly lexer generator for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/CraigFe/compact"},"Compact")," - Memory-efficient data structures in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/craff/pacomb"},"PaComb")," - Parsing library that compiles grammars to combinators using elimination of left recursion."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/fpottier/pprint"},"PPrint")," - Pretty-Printing Toolbox."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dhil/ocaml-multicont"},"Multicont")," - Continuations with multi-shot semantics in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ygrek/extunix"},"ExtUnix")," - OCaml bindings to various low-level system APIs not covered by Unix module."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/LaurentMazare/ocaml-arrow"},"ocaml-arrow")," - OCaml bindings for Apache Arrow using the C++ api."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/thierry-martinez/ocaml-in-python"},"ocaml-in-python")," - Effortless Python bindings for OCaml modules."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-community/yojson"},"Yojson")," - Low-level JSON parsing and pretty-printing library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ahrefs/atd"},"ATD")," - Static types for JSON APIs."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/biocaml/biocaml"},"Biocaml")," - OCaml Bioinformatics Library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/c-cube/iter"},"Iter")," - Simple iterator abstract datatype, intended to iterate efficiently on collections while performing some transformations."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/hammerlab/sosa"},"sosa")," - Sane OCaml String API."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/andrenth/ocaml-stdint"},"ocaml-stdint")," - Various signed and unsigned integers for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocurrent/current_incr"},"Current_incr")," - Self-adjusting computations."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/keigoi/hlist-ocaml"},"hlist")," - Heterogeneously-typed lists for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-ppx/ppx_import"},"ppx_import")," - Syntax extension that allows to pull in types or signatures from other compiled interface files."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/paurkedal/ocaml-prime"},"Prime")," - OCaml Library Supplements."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Drup/adtr"},"ADT rewriting")," - Representing ADTs in a flat way and compiling a pattern match-like construction as a rewrite on the memory representation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/kupl/AlphaRegexPublic"},"AlphaRegex")," - Synthesizer for regular expressions."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/thierry-martinez/pyml"},"py.ml")," - OCaml bindings for Python."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dbuenzli/affect"},"Affect")," - Composable concurrency primitives with OCaml effects handlers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/samoht/depyt"},"Depyt")," - Type combinator library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/vbmithr/ocaml-websocket"},"ocaml-websocket")," - Websocket library for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/komamitsu/oraft"},"ORaft")," - Library of Raft consensus algorithm implemented in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/haesbaert/ocaml-mpsc"},"ocaml-mpsc")," - Lockless Multiple Producer Single Consumer Queue for ocaml-multicore."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/yallop/ocaml-charset"},"Charset")," - Fast char sets."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dialohq/ocaml-grpc"},"OCaml gRPC")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-multicore/lockfree"},"lockfree")," - Lock-free data structures for multicore OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/RedPRL/ocaml-bwd"},"Backward Lists")," - Defines backward lists that are isomorphic to lists."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/pveber/bistro"},"bistro")," - Library to build and execute typed scientific workflows."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocaml-multicore/domainslib"},"domainslib")," - Parallel Programming over Multicore OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/oxidizing/conformist"},"Conformist")," - Schema definition and validation with support for decoding to bridge the gap between runtime types and static types."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/ocaml-crunch"},"ocaml-crunch")," - Convert a filesystem into a static OCaml module."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/issuu/ocaml-protoc-plugin"},"Ocaml protoc plugin")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/LaurentMazare/ocaml-rust"},"ocaml-rust")," - Safe OCaml-Rust Foreign Function Interface."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mirage/shared-block-ring"},"shared-block-ring")," - Simple on-disk fixed length queue."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mransan/ocaml-protoc"},"ocaml-protoc")," - Protobuf Compiler for OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/diskuv/diskuvbox"},"Diskuv Box")," - Basic, cross-platform set of commands to manipulate and query the file system."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tjammer/raylib-ocaml"},"raylib-ocaml")," - OCaml bindings for raylib, a simple and easy-to-use library to enjoy video games programming."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/OCamlPro/ocplib-json-typed"},"ocplib-json-typed")," - Libraries for reliable manipulation JSON objects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/smimram/ocaml-alg"},"ocaml-alg")," - Algebraic structures in OCaml."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/RedPRL/kai"},"Kai")," - Library for handling compiler diagnostics and span-associated metadata.")),(0,l.kt)("h2",{id:"links"},"Links"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://opam.ocaml.org/packages/"},"OPAM packages")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mjambon/dune-deps"},"dune-deps")," - Show the internal dependencies in your OCaml/Reason/Dune project."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocamllabs/dune-release"},"dune-release")," - Tool to streamline the release of Dune packages in opam."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocurrent/opam-dune-lint"},"opam-dune-lint")," - Ensure dune and opam dependencies are consistent."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://sherlocode.com/"},"Sherlocode")," - Search across 17 million lines of OCaml available on opam using grep. (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/art-w/sherlocode"},"Code"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/xavierleroy/camlidl"},"Camlidl")," - Stub code generator for OCaml/C interface."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/RedPRL/algaeff"},"Reusable Effect-Based Components")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tweag/opam-nix"},"opam-nix")," - Turn opam-based OCaml projects into Nix derivations."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/dinosaure/esperanto"},"Esperanto")," - Build-once run-anywhere OCaml programs.")))}h.isMDXComponent=!0}}]);