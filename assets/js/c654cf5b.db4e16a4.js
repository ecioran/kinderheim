"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[69694],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=n.createContext({}),u=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),f=i,d=p["".concat(m,".").concat(f)]||p[f]||c[f]||o;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=p;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},44697:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var n=r(87462),i=r(63366),o=(r(67294),r(3905)),a=["components"],s={title:"ZeroMQ"},m="[ZeroMQ](https://zeromq.org/)",u={unversionedId:"distributed-systems/message-queue/zeromq",id:"distributed-systems/message-queue/zeromq",title:"ZeroMQ",description:"Links",source:"@site/docs/distributed-systems/message-queue/zeromq.md",sourceDirName:"distributed-systems/message-queue",slug:"/distributed-systems/message-queue/zeromq",permalink:"/kinderheim/distributed-systems/message-queue/zeromq",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/distributed-systems/message-queue/zeromq.md",tags:[],version:"current",frontMatter:{title:"ZeroMQ"},sidebar:"tutorialSidebar",previous:{title:"MQTT",permalink:"/kinderheim/distributed-systems/message-queue/mqtt"},next:{title:"Remote Procedure Calls",permalink:"/kinderheim/distributed-systems/rpcs/"}},l={},c=[{value:"Links",id:"links",level:2}],p={toc:c};function f(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zeromq"},(0,o.kt)("a",{parentName:"h1",href:"https://zeromq.org/"},"ZeroMQ")),(0,o.kt)("h2",{id:"links"},"Links"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/erickt/rust-zmq"},"Rust ZeroMQ bindings")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/zeromq/libzmq"},"libzmq")," - ZeroMQ core engine in C++, implements ZMTP/3.1."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebook/fbzmq"},"fbzmq")," - Provides a framework for writing services in C++ while leveraging the awesomeness of libzmq (message passing semantics)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/zeromq/zproto"},"zproto")," - Protocol framework for ZeroMQ."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://zguide.zeromq.org/"},"ZeroMQ Guide")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/zeromq/pyzmq"},"PyZMQ")," - Python bindings for zeromq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/zeromq/zmq.rs"},"zmq.rs")," - Native Rust implementation of ZeroMQ."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/jean-airoldie/zeromq-src-rs"},"zeromq-src-rs")," - Source code and logic to build ZeroMQ from source."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/issuu/ocaml-zmq"},"ocaml-zmq")," - ZeroMQ bindings for OCaml."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/thehydroimpulse/nanomsg.rs"},"Nanomsg")," - Modern messaging library that is the successor to ZeroMQ."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/pebbe/zmq4"},"zmq4")," - Go interface to ZeroMQ version 4."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/GothAck/FlatRPC"},"FlatRPC")," - C++ RPC library built upon FlatBuffers and ZeroMQ.")))}f.isMDXComponent=!0}}]);