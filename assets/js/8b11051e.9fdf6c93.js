"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[1533],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return u}});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),p=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=p(t.components);return r.createElement(o.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},h=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,s=m(t,["components","mdxType","originalType","parentName"]),h=p(a),u=n,c=h["".concat(o,".").concat(u)]||h[u]||d[u]||i;return a?r.createElement(c,l(l({ref:e},s),{},{components:a})):r.createElement(c,l({ref:e},s))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=h;var m={};for(var o in e)hasOwnProperty.call(e,o)&&(m[o]=e[o]);m.originalType=t,m.mdxType="string"==typeof t?t:n,l[1]=m;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},70102:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return d}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),l=["components"],m={title:"Standard ML"},o="[Standard ML](https://en.wikipedia.org/wiki/Standard_ML)",p={unversionedId:"programming-languages/standard-ml",id:"programming-languages/standard-ml",title:"Standard ML",description:"CakeML is neat.",source:"@site/docs/programming-languages/standard-ml.md",sourceDirName:"programming-languages",slug:"/programming-languages/standard-ml",permalink:"/kinderheim/programming-languages/standard-ml",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/standard-ml.md",tags:[],version:"current",frontMatter:{title:"Standard ML"},sidebar:"tutorialSidebar",previous:{title:"Smalltalk",permalink:"/kinderheim/programming-languages/smalltalk"},next:{title:"Swift",permalink:"/kinderheim/programming-languages/swift/"}},s={},d=[{value:"Links",id:"links",level:2}],h={toc:d};function u(t){var e=t.components,a=(0,n.Z)(t,l);return(0,i.kt)("wrapper",(0,r.Z)({},h,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"standard-ml"},(0,i.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Standard_ML"},"Standard ML")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://cakeml.org/"},"CakeML")," is neat."),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SOSML/SOSML"},"SOSML")," - Interpreter for Standard ML written in TypeScript. (",(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/programming/comments/d1es7v/try_standard_ml_in_your_browser_courtesy_of/"},"Reddit"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/MLton/mlton"},"MLton")," - Whole-program optimizing compiler for the Standard ML programming language."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cl.cam.ac.uk/~lp15/MLbook/pub-details.html"},"ML for the Working Programmer, 2nd Edition book (1996)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/KeenS/webml"},"WebML")," - Standard ML compiler for the Web."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/eatonphil/ponyo"},"Ponyo")," - Comprehensive high-level library and toolkit for Standard ML."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://saityi.github.io/sml-tour/tour/00-00-welcome.html"},"Tour of Standard ML ")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22180834"},"HN"),") (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Saityi/a-tour-of-standard-ml"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.mlton.org/References.attachments/Shipman02.pdf"},"Unix System Programming with Standard ML")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22246334"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/diku-dk/smlpkg"},"smlpkg")," - Generic package manager for Standard ML libraries and programs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/JohnReppy/compiling-pattern-guards"},"Compiling Pattern Guards"),' - Prototype code that accompanies the paper "Compiling Successor ML Pattern Guards".'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://smlfamily.github.io/history/SML-history.pdf"},"The History of Standard ML (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/0clf32/history_standard_ml"},"Lobsters"),") (",(0,i.kt)("a",{parentName:"li",href:"https://www.pldi21.org/prerecorded_hopl.21.html"},"Talk"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27800211"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://notes.eatonphil.com/standard-ml-in-2020.html"},"Standard ML in 2020")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24890463"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/julianhyde/morel"},"Morel")," - Standard ML interpreter, with relational extensions, implemented in Java."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SMLFamily/Successor-ML"},"Successor ML")," - Effort to evolve the Standard ML language while keeping true to its clean and elegant design."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SMLFamily/BasisLibrary"},"Standard ML Basis Library")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kfl/mosml"},"Moscow ML")," - Light-weight implementation of Standard ML (SML), a strict functional language widely used in teaching and research."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/polyml/polyml"},"Poly/ML")," - Standard ML implementation originally written in an experimental language called Poly. (",(0,i.kt)("a",{parentName:"li",href:"https://www.polyml.org/"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/shwestrick/parse-sml"},"parse-sml")," - Custom parser for Standard ML."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/CakeML/cakeml"},"CakeML")," - Verified implementation of a significant subset of Standard ML. (",(0,i.kt)("a",{parentName:"li",href:"https://cakeml.org/"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SomewhatML/sml-compiler"},"Compiler for Standard ML in Rust")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28465185"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mmcqd/higher-standard"},"Higher Standard")," - Higher kinded polymorphism in Standard ML."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/minoki/LunarML"},"LunarML")," - Standard ML compiler that produces Lua."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/sml/comments/qyy2gs/getting_started_with_standard_ml/"},"Getting started with Standard ML")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/diku-dk/sml-server"},"sml-server")," - Web server infrastructure for Standard ML."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/shwestrick/sml-parseq"},"sml-parseq")," - Standard ML library for parallel sequences."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/MPLLang/mpl"},"MPL")," - MaPLe compiler for Parallel ML."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://len.falken.directory/p-lang/100-year-programs.txt"},"I'm ready: Let the 100 year programs begin")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/zygrvh/i_m_ready_let_100_year_programs_begin"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcrary/cmtool"},"Lexer and parser generators for Standard ML, OCaml, and Haskell")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://smlfamily.github.io/"},"Standard ML Family")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31055564"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.plover.com/prog/haskell/sml-defects.html"},"What was wrong with SML? (2022)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/standardml/smackage"},"Smackage")," - Package manager for Standard ML libraries."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/i4ki/awesome-sml"},"Awesome Standard ML")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/exercism/sml"},"Exercism Standard ML Track")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stonebuddha/tree-sitter-sml"},"Standard ML Grammar for Tree-sitter"))))}u.isMDXComponent=!0}}]);