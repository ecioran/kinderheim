"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[9780],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return h}});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=c(r),h=i,f=s["".concat(p,".").concat(h)]||s[h]||u[h]||n;return r?a.createElement(f,o(o({ref:t},m),{},{components:r})):a.createElement(f,o({ref:t},m))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<n;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},6068:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=r(7462),i=r(3366),n=(r(7294),r(3905)),o=["components"],l={title:"CUDA"},p="[CUDA](https://developer.nvidia.com/cuda-zone)",c={unversionedId:"computer-graphics/cuda",id:"computer-graphics/cuda",title:"CUDA",description:"Links",source:"@site/docs/computer-graphics/cuda.md",sourceDirName:"computer-graphics",slug:"/computer-graphics/cuda",permalink:"/kinderheim/computer-graphics/cuda",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/computer-graphics/cuda.md",tags:[],version:"current",frontMatter:{title:"CUDA"},sidebar:"tutorialSidebar",previous:{title:"Optical character recognition",permalink:"/kinderheim/computer-graphics/computer-vision/ocr"},next:{title:"Image processing",permalink:"/kinderheim/computer-graphics/image-processing"}},m={},u=[{value:"Links",id:"links",level:2}],s={toc:u};function h(e){var t=e.components,r=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"cuda"},(0,n.kt)("a",{parentName:"h1",href:"https://developer.nvidia.com/cuda-zone"},"CUDA")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVlabs/cub"},"CUB")," - Flexible library of cooperative threadblock primitives and other utilities for CUDA kernel programming."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/jitify"},"Jitify")," - Single-header C++ library for simplifying the use of CUDA Runtime Compilation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gunrock/gunrock"},"Gunrock")," - CUDA library for graph-processing designed specifically for the GPU."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/feiwang3311/Lantern"},"Lantern")," - Implementation of a machine learning framework prototype in Scala."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/jitify"},"Jitify")," - Single-header C++ library for simplifying the use of CUDA Runtime Compilation (NVRTC)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JuliaGPU/CUDA.jl"},"CUDA.jl")," - Programming in Julia. (",(0,n.kt)("a",{parentName:"li",href:"https://juliagpu.org/2020-10-02-cuda_2.0/"},"CUDA.jl 2.0"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CoffeeBeforeArch/cuda_programming"},"GPGPU Programming with CUDA")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/vincentfpgarcia/kNN-CUDA"},"k-NN algorithm on CUDA")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ecrc/kblas-gpu"},"KBLAS CUDA")," - Subset of BLAS routines optimized for NVIDIA GPUs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Celebrandil/CudaSift"},"CudaSift")," - SIFT features with CUDA."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/vosen/ZLUDA"},"ZLUDA")," - CUDA on Intel GPUs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/CUDALibrarySamples"},"CUDA Library Samples")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/inducer/pycuda"},"PyCUDA")," - Access Nvidia's CUDA parallel computation API from Python."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/cutlass"},"CUTLASS")," - CUDA Templates for Linear Algebra Subroutines."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.moll.dev/projects/reaction-diffusion-julia/"},"Reaction Diffusion modelling with Julia and CUDA (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developer.nvidia.com/blog/unifying-the-cuda-python-ecosystem/"},"Unifying the CUDA Python Ecosystem (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26834491"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://phisiart.github.io/418-proj/"},"Using OpenGL instead of CUDA for machine learning")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rbaygildin/learn-gpgpu"},"Awesome GPGPU")," - Algorithms implemented in CUDA + resources about GPGPU."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://brendanrayw.medium.com/my-experience-learning-cuda-to-accelerate-conways-game-of-life-5d52eabc2dfb"},"Accelerating Conway's Game of Life Using CUDA (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gorgonia/cu"},"cu")," - Go package that provides an idiomatic interface to the CUDA Driver API."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bheisler/RustaCUDA"},"RustaCUDA")," - Rusty wrapper for the CUDA Driver API."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/filecoin-project/ec-gpu"},"ec-gpu")," - CUDA/OpenCL code generator for finite-field arithmetic over prime fields and elliptic curve arithmetic constructed with Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://c4science.ch/w/bioimaging_and_optics_platform_biop/computers-servers/software/gpu-deep-learning/python-venv/"},"Python venv Setup for Deep Learning Resources")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/haesleinhuepf/status/1460519069967392769"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RDambrosio016/Rust-CUDA"},"Rust CUDA")," - Extremely fast GPU code fully in Rust. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29311709"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/rust/comments/qzv428/announcing_the_rust_cuda_project_an_ecosystem_of/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Jimver/cuda-toolkit"},"cuda-toolkit")," - GitHub Action to install CUDA."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rentruewang/koila"},"Koila")," - Prevent ",(0,n.kt)("inlineCode",{parentName:"li"},"CUDA error: out of memory")," in just 1 line of code."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mp3guy/ICPCUDA"},"ICPCUDA")," - Super fast implementation of ICP in CUDA for compute capable devices 3.5 or higher."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/cudpp/cudpp"},"CUDPP")," - CUDA Data Parallel Primitives Library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rapidsai/raft"},"RAFT")," - RAPIDS Analytics Framework Toolkit."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CannyLab/tsne-cuda"},"TSNE-CUDA")," - GPU Accelerated t-SNE for CUDA with Python bindings."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/eyalroz/cuda-kat"},"cuda-kat")," - CUDA kernel author's tools."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/PatWie/cuda-design-patterns"},"CUDA Design Patterns")," - CUDA design patterns and a bit of template magic for CUDA."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/brucefan1983/GPUMD"},"GPUMD")," - Graphics Processing Units Molecular Dynamics."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cancandan.github.io/julia/graphics/cuda/2022/05/07/triangles.html"},"Some CUDA programming fun with Julia (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31298218"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/cuda-samples"},"CUDA Samples")," - Samples for CUDA Developers which demonstrates features in CUDA Toolkit.")))}h.isMDXComponent=!0}}]);