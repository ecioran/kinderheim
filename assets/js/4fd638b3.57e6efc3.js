"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[2293],{3905:function(a,t,e){e.d(t,{Zo:function(){return p},kt:function(){return h}});var l=e(7294);function r(a,t,e){return t in a?Object.defineProperty(a,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[t]=e,a}function i(a,t){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(a,t).enumerable}))),e.push.apply(e,l)}return e}function n(a){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){r(a,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(a,t,Object.getOwnPropertyDescriptor(e,t))}))}return a}function m(a,t){if(null==a)return{};var e,l,r=function(a,t){if(null==a)return{};var e,l,r={},i=Object.keys(a);for(l=0;l<i.length;l++)e=i[l],t.indexOf(e)>=0||(r[e]=a[e]);return r}(a,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);for(l=0;l<i.length;l++)e=i[l],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(r[e]=a[e])}return r}var u=l.createContext({}),o=function(a){var t=l.useContext(u),e=t;return a&&(e="function"==typeof a?a(t):n(n({},t),a)),e},p=function(a){var t=o(a.components);return l.createElement(u.Provider,{value:t},a.children)},c={inlineCode:"code",wrapper:function(a){var t=a.children;return l.createElement(l.Fragment,{},t)}},s=l.forwardRef((function(a,t){var e=a.components,r=a.mdxType,i=a.originalType,u=a.parentName,p=m(a,["components","mdxType","originalType","parentName"]),s=o(e),h=r,d=s["".concat(u,".").concat(h)]||s[h]||c[h]||i;return e?l.createElement(d,n(n({ref:t},p),{},{components:e})):l.createElement(d,n({ref:t},p))}));function h(a,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof a||r){var i=e.length,n=new Array(i);n[0]=s;var m={};for(var u in t)hasOwnProperty.call(t,u)&&(m[u]=t[u]);m.originalType=a,m.mdxType="string"==typeof a?a:r,n[1]=m;for(var o=2;o<i;o++)n[o]=e[o];return l.createElement.apply(null,n)}return l.createElement.apply(null,e)}s.displayName="MDXCreateElement"},9346:function(a,t,e){e.r(t),e.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return m},metadata:function(){return o},toc:function(){return c}});var l=e(7462),r=e(3366),i=(e(7294),e(3905)),n=["components"],m={},u="Lambda calculus",o={unversionedId:"math/lambda-calculus",id:"math/lambda-calculus",title:"Lambda calculus",description:"Links",source:"@site/docs/math/lambda-calculus.md",sourceDirName:"math",slug:"/math/lambda-calculus",permalink:"/kinderheim/math/lambda-calculus",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/math/lambda-calculus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Homotopy theory",permalink:"/kinderheim/math/homotopy-theory"},next:{title:"Linear algebra",permalink:"/kinderheim/math/linear-algebra/"}},p={},c=[{value:"Links",id:"links",level:2}],s={toc:c};function h(a){var t=a.components,e=(0,r.Z)(a,n);return(0,i.kt)("wrapper",(0,l.Z)({},s,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lambda-calculus"},"Lambda calculus"),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ilya-klyuchnikov/lambdapi"},"Dependently Typed Lambda Calculus in Haskell")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/MaiaVictor/Caramel"},"Caramel")," - Set of bidirectional, Haskell-inspired syntax-sugars that are expanded to, and contracted from, \u03bb-Calculus terms."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/i-am-tom/LICK"},"LICK")," - Correct-by-construction implementation of the simply-typed lamba calculus' expressions, beta-reduction, and evaluation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/owo-lang/minitt-rs"},"minitt-rs")," - Rust implementation of Mini-TT, a simple dependently-typed lambda calculus."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lucasfcosta.com/2018/07/29/An-Introduction-to-Lambda-Calculus-Part-1.html"},"A Gentle Introduction to Lambda Calculus - Part 1: Syntax (2018)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mroman42/mikrokosmos"},"Mikrokosmosai")," - Educational \u03bb-calculus interpreter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mroman42/ctlc"},"Category Theory and Lambda Calculus (2018)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mroman42/ctlc"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www-users.mat.umk.pl/~adwid/materialy/doc/church.pdf"},"The Impact of the Lambda Calculus (1997) [pdf]")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=19835615"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/robrix/path"},"path")," - Lambda calculus to explore type-directed program synthesis."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/lukeg101/lplzoo"},"Fine-grain implementations of common lambda calculi in Haskell, tested with QuickCheck")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/clark800/lambda-zero"},"Lambda Zero")," - Minimalist pure lazy functional programming language."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Deducteam/Dedukti"},"Dedukti")," - Implementation of the \u03bb\u03a0-calculus modulo rewriting."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://okmij.org/ftp/Computation/lambda-calc.html"},"Lambda Calculus and Lambda Calculators")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/slovnicki/pLam"},"pLam")," - Interpreter for learning and exploring pure \u03bb-calculus."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://ycombinator.chibicode.com/"},"Y Combinator for Non-programmers: A Wild Introduction to Computer Science")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/chibicode/ycombinator"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www-cs-students.stanford.edu/~blynn/lambda/"},"Notes on lambda calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://tadeuzagallo.com/blog/writing-a-lambda-calculus-interpreter-in-javascript/"},"\u03bb-calculus interpreter in less than 300 lines of JS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.burakemir.ch/2020/04/higher-order-logic-and-equality.html"},"Higher-order Logic and Equality (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22767509"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/dakk/lambda"},"\u03bb-calculus ocaml library")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://splintah.gitlab.io/posts/2020-05-24-Simply-typed-lambda.html"},"Simply typed lambda calculus (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.flownet.com/ron/lambda-calculus.html"},"The Awesome Power of Theory: Explorations in the untyped lambda calculus (2014)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/prathyvsh/lambda-calculus-visualizations"},"Lambda Calculus Visualizations")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/prathyvsh/history-of-lambda-calculus"},"History of Lambda Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cis.upenn.edu/~stevez/papers/VZ14.pdf"},"Finite Vector Spaces as Model of Simply-Typed Lambda-Calculi")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://csvoss.com/circuit-notation-lambda-calculus"},"A circuit-like notation for lambda calculus (2015)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24193313"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ak3n/abt-zoo"},"Lambda Zoo")," - Implementations of different lambda calculi with abstract binding trees."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://antitypical.com/posts/2020-03-29-all-you-need-is-lambda-1-booleans/"},"All you need is \u03bb, part one: booleans (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24601981"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/fizruk/lambda-mu-mu-calculus"},"lambda-mu-mu-calculus")," - Interpreter for \u03bb\u0305\u03bc\u03bc\u0303-calculus of Herbelin and Curien."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/blynn/lambda"},"Notes on lambda calculus and type theory")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://stopa.io/post/263"},"Fun with Lambda Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://tromp.github.io/cl/Binary_lambda_calculus.html"},"Binary Lambda Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tromp/AIT"},"Algorithmic Information Theory, using Binary Lambda Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://crypto.stanford.edu/~blynn/lambda/"},"Lambda calculus Notes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/haraldmaida/lamcal"},"Lamcal")," - Lambda Calculus parser and evaluator and a separate command line REPL application to play around with lambda expressions interactively."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/pamellies/lambda-calculus-and-categories"},"Lambda Calculus and Categories")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/lambda-pi-plus/lambda-pi-plus"},"LambdaPiPlus")," - Simple Dependently-Typed Language for Research and Learning."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/sweirich/lennart-lambda"},"Lambda-Calculus cooked n-ways")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/RaasAhsan/lambs"},"lambs")," - Enriched typed lambda calculus."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://afnan.io/posts/lambda-calculus/"},"Lambda Calculus (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.lix.polytechnique.fr/Labo/Samuel.Mimram/teaching/cat/"},"Categories and \u03bb-calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bkomuves/nanohs"},"NanoHaskell")," - Self-hosting lambda calculus compiler."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=3VQ382QG-y4"},"Fundamentals of Lambda Calculus & Functional Programming in JavaScript (2017)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/glebec/lambda-talk"},"Code"),") (",(0,i.kt)("a",{parentName:"li",href:"https://glebec.github.io/lambda-talk/"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/prathyvsh/status/1188787773441888257"},"Visual Lambda Calculus Explorer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.ioccc.org/2012/tromp/hint.html"},"Binary Lambda Calculus (2012)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26769650"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://splintah.github.io/posts/2020-05-24-Simply-typed-lambda.html"},"Simply typed lambda calculus (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.ics.uci.edu/~lopes/teaching/inf212W12/readings/lambda-calculus-handout.pdf"},"Lambda Calculus Examples (2009)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27648871"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://blaisorblade.github.io/blog/2015/01/15/a-talk-on-ilc/"},"A Talk on Incremental \u03bb-Calculus (2015)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Kamirus/lambda-formalizations"},"Simply Typed Lambda Calculus Formalization")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://rcarriga.github.io/viscal/"},"Viscal")," - Visual representation of the lambda calculus and animation of beta reduction. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/rcarriga/viscal"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/arlencox/sqlc"},"Super-Quick Lambda Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/paulfitz/cosmicos"},"CosmicOS")," - Sending the lambda calculus into deep space."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/caotic123/Ane-Language"},"Ane-Language")," - Tool for analyze lambda calculus terms."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/OscarSaharoy/lambda-fibonacci"},"Fibonacci sequence in JS using pure Lambda Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://yanamal.github.io/lambda-js/"},"Lambda Calculus Visualizer")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/yanamal/lambda-js"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ncfavier/glam"},"glam")," - Implementation of the guarded \u03bb-calculus."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/pi8027/lambda-calculus"},"Formalization of Typed and Untyped \u03bb-Calculi in Coq and Agda2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.dawn-lang.org/posts/foundations-ucc/"},"Foundations of Dawn: The Untyped Concatenative Calculus (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mb64/simple-lambda-prolog"},"\u03bbProlog interpreter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://augustss.blogspot.com/2007/10/simpler-easier-in-recent-paper-simply.html"},"Simpler, Easier! How to write a simple dependent type checker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/DrearyLisper/sloe"},"Sloe")," - Simple functional language based on lambda-calculus."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/dawn-lang/ucc"},"Untyped Concatenative Calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/FrozenWinters/stlc"},"Categorical glueing for simply typed lambda calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://thma.github.io/posts/2021-04-04-Lambda-Calculus-Combinatory-Logic-and-Cartesian-Closed-Categories.html"},"\u03bb-Calculus, Combinatory Logic and Cartesian Closed Categories (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Zdancewic/ccc"},"Implementing Cartesian Closed Categories")," - Elementary implementation of Simply Typed Lambda Calculus (STLC) and its semantics in terms of Cartesian Closed Categories."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mb64/LC-interpreter"},"Compiler and runtime for normalizing the untyped \u03bb-calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/EvolveYourMind/ts-lambda-calc"},"ts-lambda-calc")," - Lambda calculus at type-level with TypeScript."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/devaspot/milner"},"Tiny Lazy ML with Process Calculus in plain C")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://justine.lol/lambda/"},"Lambda Calculus in 400 Bytes (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30493713"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/robrix/seq"},"seq")," - \xb5\xb5\u0303 calculus with pretty-printing and evaluating interpreters."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/xieyuheng/lambda"},"Lambda Calculus in JS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/owo-lang/minitt-rs"},"minitt-rs")," - Dependently-typed lambda calculus, Mini-TT, extended and implemented in Rust."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.media.mit.edu/projects/2d-an-exploration-of-drawing-as-programming-language-featuring-ideas-from-lambda-calculus/overview/"},"\u03bb-2D: An Exploration of Drawing as Programming Language, Featuring Ideas from Lambda Calculus")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30932552"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/VictorTaelin/ultimate-calculus"},"Ultimate Calculus")," - Optimal, full \u03bb-calculus evaluator that doesn't rely on interaction combinators and can be implemented in 150 lines."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/aellym0/lambdacplus"},"\u03bbC+")," - Proof assistant based on the Calculus of Constructions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ljedrz/lambda_calculus"},"Simple, zero-dependency implementation of the untyped lambda calculus in Safe Rust")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jdrprod/lili"},"Lili")," - Minimalist proof checker based on a simply typed lambda-calculus."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ngzhian/ski"},"SKI combinators - AST and Evaluating")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://mez.cl/en/lambda-dsl/"},"A DSL for \u03bb-terms in Scala (2017)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kspalaiologos/blc-mb"},"Binary Lambda Calculus evaluation engine written in Malbolge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Guest0x0/normalization-bench"},"Benchmarking various normalization algorithms for the lambda calculus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/cpubot/untyped"},"Untyped lambda calculus, written in Haskell"))))}h.isMDXComponent=!0}}]);