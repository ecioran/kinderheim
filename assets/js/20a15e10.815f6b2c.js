"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[5270],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return u}});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var m=a.createContext({}),l=function(e){var t=a.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return a.createElement(m.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,m=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=l(r),u=o,f=c["".concat(m,".").concat(u)]||c[u]||h[u]||n;return r?a.createElement(f,i(i({ref:t},s),{},{components:r})):a.createElement(f,i({ref:t},s))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=c;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<n;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6331:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return h}});var a=r(7462),o=r(3366),n=(r(7294),r(3905)),i=["components"],p={title:"Automated theorem proving"},m="[Automated theorem proving](https://en.wikipedia.org/wiki/Automated_theorem_proving)",l={unversionedId:"math/logic/automated-theorem-proving/automated-theorem-proving",id:"math/logic/automated-theorem-proving/automated-theorem-proving",title:"Automated theorem proving",description:"Lean is great. Kind looks awesome too.",source:"@site/docs/math/logic/automated-theorem-proving/automated-theorem-proving.md",sourceDirName:"math/logic/automated-theorem-proving",slug:"/math/logic/automated-theorem-proving/",permalink:"/kinderheim/math/logic/automated-theorem-proving/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/math/logic/automated-theorem-proving/automated-theorem-proving.md",tags:[],version:"current",frontMatter:{title:"Automated theorem proving"},sidebar:"tutorialSidebar",previous:{title:"Logic",permalink:"/kinderheim/math/logic/"},next:{title:"Lean",permalink:"/kinderheim/math/logic/automated-theorem-proving/lean"}},s={},h=[{value:"Links",id:"links",level:2}],c={toc:h};function u(e){var t=e.components,r=(0,o.Z)(e,i);return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"automated-theorem-proving"},(0,n.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Automated_theorem_proving"},"Automated theorem proving")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/kinderheim/math/logic/automated-theorem-proving/lean"},"Lean")," is ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=Dp-mQ3HxgDE"},"great"),". ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Kindelia/Kind"},"Kind")," looks awesome too."),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jiggerwit.wordpress.com/2018/04/14/the-architecture-of-proof-assistants/"},"Architecture of proof assistants (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://vprover.github.io/"},"Vampire")," - Theorem prover, that is, a system able to prove theorems. More precisely, it proves theorems in first-order logic. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/vprover/vampire"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ivanbakel/hout-prover"},"hout")," - Non-interactive proof assistant using the Haskell type system."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/2001.10490.pdf"},"Beyond Notations: Hygienic Macro Expansion for Theorem Proving Languages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tel.archives-ouvertes.fr/tel-02276423/document"},"XPath-like Query Logics: Proof Systems and Real-World Applicability (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://abella-prover.org/"},"Abella")," - Interactive theorem prover based on lambda-tree syntax. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/abella-prover/abella"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/advancedresearch/poi"},"Poi")," - Pragmatic point-free theorem prover assistant. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23193859"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/stp/stp"},"STP")," - Simple Theorem Prover, an efficient SMT solver for bitvectors."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://math.andrej.com/category/every-proof-assistant/"},'Posts in the category "Every proof assistant"')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/1905.10006"},"Graph Representations for Higher-Order Logic and Theorem Proving (2019)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24389058"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2009.03393"},"Generative Language Modeling for Automated Theorem Proving (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24420874"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://plv.csail.mit.edu/blog/alectryon.html"},"Untangling Mechanized Proofs (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25148370"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.cmu.edu/~aldrich/SASyLF/"},"SASyLF")," - Educational Proof Assistant for Language Theory. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/boyland/sasylf"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.philipzucker.com/javascript-automated-proving/"},"Automated Propositional Sequent Proofs in Your Browser with Tau Prolog (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.fstar-lang.org/tutorial/"},"Proof-Oriented Programming in F","*")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/danr/hipspec"},"HipSpec")," - Inductive theorem prover for Haskell programs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nick8325/twee"},"Twee")," - Equational theorem prover based on Knuth-Bendix completion."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/1904.03241"},"HOList: An Environment for Machine Learning of Higher-Order Theorem Proving (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cicada-lang.org/"},"Cicada Language")," - Dependently typed programming language and an interactive theorem prover."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/liamoc/holbert"},"Holbert")," - Graphical interactive proof assistant designed for education."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/salmans/rusty-razor"},"Rusty Razor")," - Tool for constructing finite models for first-order theories."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/wtgowers/status/1519613183857762304"},"Timothy Gowers's research on automated theorem proving")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/advancedresearch/pocket_prover"},"Pocket-Prover")," - Fast, brute force, automatic theorem prover for first order logic."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/homotopy-io/homotopy-rs"},"homotopy-rs")," - Proof assistant allows the construction of composite morphisms in a finitely-generated semistrict n-category, via a point-and-click user interface."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tlringer/proof-demos"},"Proof Assistant Demos"))))}u.isMDXComponent=!0}}]);