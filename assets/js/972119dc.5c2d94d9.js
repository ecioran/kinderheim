"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[88953],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return u}});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=r.createContext({}),m=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=m(a),u=i,g=s["".concat(o,".").concat(u)]||s[u]||h[u]||n;return a?r.createElement(g,l(l({ref:t},c),{},{components:a})):r.createElement(g,l({ref:t},c))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,l=new Array(n);l[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:i,l[1]=p;for(var m=2;m<n;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},28175:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return h}});var r=a(87462),i=a(63366),n=(a(67294),a(3905)),l=["components"],p={title:"Ray tracing"},o="[Ray tracing](<https://en.wikipedia.org/wiki/Ray_tracing_(graphics)>)",m={unversionedId:"computer-graphics/ray-tracing",id:"computer-graphics/ray-tracing",title:"Ray tracing",description:"This is nice intro.",source:"@site/docs/computer-graphics/ray-tracing.md",sourceDirName:"computer-graphics",slug:"/computer-graphics/ray-tracing",permalink:"/kinderheim/computer-graphics/ray-tracing",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/computer-graphics/ray-tracing.md",tags:[],version:"current",frontMatter:{title:"Ray tracing"},sidebar:"tutorialSidebar",previous:{title:"Procedural generation",permalink:"/kinderheim/computer-graphics/procedural-generation"},next:{title:"Rendering",permalink:"/kinderheim/computer-graphics/rendering"}},c={},h=[{value:"Links",id:"links",level:2}],s={toc:h};function u(e){var t=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ray-tracing"},(0,n.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Ray_tracing_(graphics)"},"Ray tracing")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://blog.singleton.io/posts/2022-01-02-raytracing-with-rust/"},"This")," is nice intro."),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://raytracing.github.io/"},"Ray Tracing in One Weekend: The Book Series")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/raytracing/raytracing.github.io/"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://raytracing.github.io/books/RayTracingInOneWeekend.html"},"Book"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hunterloftis/oneweekend"},"Ray Tracing in One Weekend implemented in Golang, chapter-by-chapter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/utilForever/ray-tracing-in-one-weekend-cpp"},"Ray Tracing in One Weekend implemented in C++, chapter-by-chapter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ssloy/tinyraytracer"},"Understandable Ray Tracing in 256 lines of bare C++ course (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tcbrindle/raytracer.hpp"},"C++17 constexpr Compile-time Ray Tracer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/wjakob/nori"},"Nori")," - Educational ray tracer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://casual-effects.com/research/McGuire2019ProcGen/McGuire2019ProcGen.pdf"},"Ray tracing a tiny procedural planet")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ahuth.github.io/raycast/"},"HTML5 raycasting demo using React")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ahuth/raycast"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22725275"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jbikker/lighthouse2"},"Lighthouse 2 framework for real-time ray tracing")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/maierfelix/dawn-ray-tracing"},"Dawn RT")," - Ray tracing extension for WebGPU."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/Q2RTX"},"Quake II RTX")," - NVIDIA\u2019s implementation of RTX ray-tracing in Quake II."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/athas/raytracers"},"Performance comparison of parallel ray tracing in functional programming languages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/avik-pal/RayTracer.jl"},"RayTracer.jl")," - Ray Tracer written completely in Julia."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PL5B692fm6--sgm8Uiava0IIvUojjFOCSR"},"Ray Tracing Essentials (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Dalamar42/rayt"},"Rayt")," - Monte Carlo ray tracer developed using Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/spcask/pov-ray-tracing"},"Ray Tracing with POV-Ray")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/qczs5u/ray_tracing_with_pov_ray_25_scenes_25_days"},"Lobsters"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23042993"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/svenstaro/bvh"},"bvh")," - Rust crate which exports rays, axis-aligned bounding boxes, and binary bounding volume hierarchies."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://fabiensanglard.net/revisiting_the_businesscard_raytracer/index.html"},"Revisiting the Businesscard Raytracer (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://kylehalladay.com/blog/2020/05/20/Rendering-With-Notepad.html"},"Ray Tracing In Notepad.exe At 30 FPS (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23246221"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mmirman/MentisOculi"},"MentisOculi Pytorch Path Tracer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/matt77hias/smallpt"},"Ray Tracing implemented in multiple languages")," (",(0,n.kt)("a",{parentName:"li",href:"http://www.kevinbeason.com/smallpt/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sbehnke/SwiftlyRT"},"SwiftlyRT")," - Implementation of the Ray Tracer Challenge in Swift."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.demofox.org/2020/05/25/casual-shadertoy-path-tracing-1-basic-camera-diffuse-emissive/"},"Casual Shadertoy Path Tracing 1: Basic Camera, Diffuse, Emissive (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Kamirus/ray-tracer"},"Ray Tracer in OCaml")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jorendorff/rust-raytrace"},'Rust implementation of "Ray Tracing In One Weekend" by Peter Shirley')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://andreyorst.gitlab.io/posts/2020-06-04-simple-ray-casting-with-clojurescript/"},"Simple Ray Casting with ClojureScript (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ahuth/raytrace2"},"Ray Tracing in One Weekend in TypeScript")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/embree/embree"},"Embree")," - Collection of high-performance ray tracing kernels, developed at Intel."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/VKoskiv/c-ray"},"C-Ray")," - Small, simple path tracer written in C."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tunabrain/tungsten"},"Tungsten Renderer")," - High performance physically based renderer in C++11."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.realtimerendering.com/raytracinggems/rtg/index.html"},"Ray Tracing Gems")," - High-Quality and Real-Time Rendering with DXR and Other APIs. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Apress/ray-tracing-gems"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developer.nvidia.com/blog/ray-tracing-gems-ii-available-today-as-free-digital-download/"},"Ray Tracing Gems II: Next Generation Real-Time Rendering with DXR, Vulkan, and OptiX (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Apress/Ray-Tracing-Gems-II"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28064615"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/xlnx/cuda-raytracer"},"CUDA based Ray Tracer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/alvarosan/saturno"},"Saturno")," - Implementation of 'Ray Tracing in One Weekend' in Rust (and wasm)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nim-lang.org/blog/2020/06/30/ray-tracing-in-nim.html"},"Ray tracing in Nim (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23707286"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.scottlogic.com/2020/03/10/raytracer-how-to.html"},"How to Write a Ray Tracer Intuitively (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://dotink.co/posts/traceur/"},"Traceur: a path tracing renderer in Ink and JavaScript (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tomverbeure.github.io/rtl/2018/11/26/Racing-the-Beam-Ray-Tracer.html"},"Racing the Beam Ray Tracer (2018)")," - Full Hardware Real-Time Ray-Tracer. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tomverbeure/rt"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/qu4k/rain"},"Ray-tracer / Learning project with Rust")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Twinklebear/tray_rust"},"tray_rust")," - Toy Ray Tracer in Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/szellmann/visionaray"},"Visionaray")," - C++-based, cross platform ray tracing library. (",(0,n.kt)("a",{parentName:"li",href:"https://vis.uni-koeln.de/forschung/software-visionaray"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.activision.com/cdn/research/Raytraced_Shadows_in_Call_of_Duty_Modern_Warfare.pdf"},"Raytraced Shadows in Call of Duty: Modern Warfare")," - How ray tracing can be integrated into a modern, forward+ engine with minimal-to-no content changes."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.peterstefek.me/incr-ray-tracer.html"},"Slightly Incremental Ray Tracing In One Weekend (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JiayinCao/SORT"},"SORT (Simple Open-source Ray Tracing)")," - Cross platform ray tracing renderer in C++. (",(0,n.kt)("a",{parentName:"li",href:"https://sort-renderer.com/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/BachiLi/redner"},"redner")," - Differentiable Monte Carlo Ray Tracing through Edge Sampling."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Zielon/PBRVulkan"},"Vulkan Real-time Path Tracer Engine")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://siliconsprawl.com/2020/11/06/simd-ray-tracer.html"},"Rust Ray Tracer, an Update (and SIMD) (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/kpfbis/rust_ray_tracer_update_simd"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://forum.babylonjs.com/t/path-tracing-with-babylon-background-and-implementation/12832"},"Path Tracing with Babylon, Background and Implementation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.lentil.xyz/"},"Lentil")," - Advanced camera toolkit for the Arnold renderer. Ray tracing through real lenses. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25045034"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/notch/status/1328335971176370181"},"Factorio Raytracer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ekzhang/rpt"},"rpt")," - Physically-based path tracer in Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/raygon-renderer/readme"},"Raygon")," - High-performance proprietary CPU path tracer written in the Rust programming language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.jaegertracing.io/"},"Jaeger")," - Open source, end-to-end distributed tracing. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jaegertracing/jaeger"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.shironekolabs.com/posts/superrt/"},"SuperRT - Realtime raytracing on the SNES (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25431203"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nvpro-samples/vk_mini_path_tracer"},"vk_mini_path_tracer")," - Beginner-friendly Vulkan path tracing tutorial in under 300 lines of C++."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/knightcrawler25/Optix-PathTracer"},"OptixPathTracer")," - Simple physically based path tracer based on Nvidia's Optix Ray Tracing Engine."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/universome/rtrs"},"RtRs")," - Simple ray tracing & rasterization engine written in rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://c0de517e.blogspot.com/2020/12/why-raytracing-wont-simplify-aaa-real.html"},"Why Raytracing won't simplify AAA real-time rendering (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25557354"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/cessen/psychopath"},"Psychopath")," - Slightly psychotic path tracer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/diharaw/Helios"},"Helios")," - Real-time unidirectional GPU path tracer using the cross-vendor Vulkan ray-tracing extensions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/stasilo/retrace.gl"},"retrace.gl")," - Create, ray trace & export programmatically defined Signed Distance Function CSG geometries with an API suited for generative art - in your browser."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://64.github.io/cmake-raytracer/"},"Ray Tracing in pure CMake (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/64/cmake-raytracer"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dranikpg/simple-rays"},"Simple ray tracer written in Rust from scratch")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26143837"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dannyfritz/awesome-ray-tracing"},"Awesome Ray Tracing")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/y-taka-23/raytracing-go"},"raytracing-go")," - Go implementation of the book Ray Tracing in One Weekend."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Cp5WWtMoeKg"},"Coding Adventure: Ray Marching (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://users.cg.tuwien.ac.at/zsolnai/gfx/rendering-course/"},"A Course on Ray Tracing and Global Illumination")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://zserge.com/posts/raytracer/"},"Ray tracer for those who skipped the math class (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.willusher.io/graphics/2020/12/20/rt-dive-m1"},"A Dive into Ray Tracing Performance on the Apple M1 (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27340555"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.arnoldrenderer.com/"},"Arnold Renderer")," - Advanced Monte Carlo ray tracing renderer built for the demands of feature-length animation and visual effects."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://16bpp.net/blog/post/automated-testing-of-a-ray-tracer/"},"Automated Testing of a Ray Tracer (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rafael-fuente/Python-Raytracer"},"Python-Fast-Raytracer")," - Basic Ray Tracer that exploits numpy arrays and functions to work fast."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/amanshenoy/ray-tracer"},"Physically based monte carlo path tracer written in C++")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sergeneren/Volumetric-Path-Tracer"},"Volumetric Path Tracer using CUDA")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/optozorax/portal"},"Portal explorer")," - Web visualization of mind-blowing portals using ray-tracing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://sszczep.github.io/ray-casting-in-2d-game-engines/"},"Ray casting in 2D game engines")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/sszczep/ray-casting-in-2d-game-engines"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://sszczep.github.io/ray-casting-in-2d-game-engines/cheatsheet.html"},"Cheat Sheet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/brundonsmith/raytracer"},"Ray tracer in Rust")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/diharaw/Helios"},"Helios")," - Real-time unidirectional GPU path tracer using the cross-vendor Vulkan ray-tracing extensions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/define-private-public/PSRayTracing"},"Peter Shirley Ray Tracing (in C++ 17)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.scratchapixel.com/lessons/procedural-generation-virtual-worlds/simulating-sky"},"Simulating the Colors of the Sky")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/KevinTchokodeu/Hybrid-Ray-Tracer"},"Hybrid Ray Tracer in Go")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/diharaw/HybridRendering"},"Hybrid Rendering")," - Vulkan sample that demonstrates a Rasterization and Ray Tracing Hybrid Rendering Pipeline."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/spcask/pov-ray-tracing"},"Ray Tracing with POV-Ray: 25 scenes in 25 days (2013)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29513332"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://11011110.github.io/blog/2021/12/23/raytracing-diamonds.html"},"Raytracing diamonds (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29695281"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Helliaca/VXCT"},"VXCT")," - OpenGL-based Implementation of Cyril Crassins Voxel Cone Tracing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.singleton.io/posts/2022-01-02-raytracing-with-rust/"},"The joy of building a ray tracer, for fun, in Rust. (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29791142"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/claforte/RayTracingWeekend.jl"},"Ray Tracing in a week-end, implemented in Julia")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/quartiq/rayopt"},"RayOpt")," - Optics design (lenses, cavities, gaussian optics, lasers). Geometric, paraxial, and gaussian ray tracing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Limeth/euclider"},"euclider")," - Higher dimensional raytracing prototype with non-euclidean-like features."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mustafaquraish/rt"},"RT")," - Ray tracing engine, from scratch, in C++."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.alexisbreust.fr/2022-ray-tracing-in-10ms-ambient-occlusion.html"},"Ambient occlusion for real-time ray-tracing (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/GraphicsProgramming/comments/skjfxd/ambient_occlusion_for_realtime_raytracing/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sergeyreznik/etx-tracer"},"etx-tracer")," - Physically-based CPU and GPU ray-tracer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ajeetdsouza.github.io/blog/posts/type-safe-raytracing-in-modern-cpp/"},"Type-Safe Raytracing in Modern C++ (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mkeeter/rayray"},"Tiny GPU raytracer, using Zig and WebGPU")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=rY413t5fArw"},"Raytracing on a Graphing Calculator (again) (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://sergeyreznik.github.io/rtcode/index.html"},"How much boilerplate code you need to write a ray-tracer?")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30378900"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://sergeyreznik.github.io/metal-ray-tracer/index.html"},"Writing ray-tracer using Metal Performance Shaders")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/k0nserv/rusttracer"},"Rusttracer")," - Ray tracer written in Rust for fun and learning."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/micahcantor/haskell-raytracer"},"Haskell Ray Tracer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.zyanidelab.com/how-to-add-thousands-of-lights-to-your-renderer/"},"How to add thousands of lights to your renderer and not die in the process (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30795858"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pablode/gatling"},"gatling")," - Hydra-enabled GPU path tracer that supports MaterialX."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/but0n/Ashes"},"Ashes")," - WebGL2.0 3D Engine - RayTracing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://interplayoflight.wordpress.com/2022/04/09/raytracing-a-4-year-retrospective/"},"Ray tracing, a 4 year retrospective (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/PearCoding/Ignis"},"Ignis")," - Experimental ray tracer for the RENEGADE project implemented with the AnyDSL compiler framework for CPU and GPU. (",(0,n.kt)("a",{parentName:"li",href:"https://pearcoding.github.io/Ignis/"},"Docs"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cseweb.ucsd.edu/~viscomp/classes/cse274/wi18/readings/course29sig01.pdf"},"State of the Art in Monte Carlo Ray Tracing for Realistic Image Synthesis (2001)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ricktu288.github.io/ray-optics/"},"Ray Optics Simulation")," - Open-source web app to simulate the reflection and refraction of light. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ricktu288/ray-optics"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/EnixCoda/3"},"Ray tracing in WebGL"))))}u.isMDXComponent=!0}}]);