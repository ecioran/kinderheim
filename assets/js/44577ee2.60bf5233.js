"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[6051],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function h(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,p=h(e,["components","mdxType","originalType","parentName"]),u=s(a),d=i,c=u["".concat(l,".").concat(d)]||u[d]||m[d]||n;return a?r.createElement(c,o(o({ref:t},p),{},{components:a})):r.createElement(c,o({ref:t},p))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=u;var h={};for(var l in t)hasOwnProperty.call(t,l)&&(h[l]=t[l]);h.originalType=e,h.mdxType="string"==typeof e?e:i,o[1]=h;for(var s=2;s<n;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1356:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return h},metadata:function(){return s},toc:function(){return m}});var r=a(7462),i=a(3366),n=(a(7294),a(3905)),o=["components"],h={title:"Shaders"},l="[Shaders](https://en.wikipedia.org/wiki/Shader)",s={unversionedId:"computer-graphics/shaders",id:"computer-graphics/shaders",title:"Shaders",description:"Links",source:"@site/docs/computer-graphics/shaders.md",sourceDirName:"computer-graphics",slug:"/computer-graphics/shaders",permalink:"/kinderheim/computer-graphics/shaders",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/computer-graphics/shaders.md",tags:[],version:"current",frontMatter:{title:"Shaders"},sidebar:"tutorialSidebar",previous:{title:"Rendering",permalink:"/kinderheim/computer-graphics/rendering"},next:{title:"SVG",permalink:"/kinderheim/computer-graphics/svg"}},p={},m=[{value:"Links",id:"links",level:2}],u={toc:m};function d(e){var t=e.components,a=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"shaders"},(0,n.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Shader"},"Shaders")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.shadertoy.com/"},"Shader Toy")," - Build and Share your best shaders with the world and get inspired."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zesterer/euc"},"Euc")," - Software rendering crate that lets you write shaders with Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://thebookofshaders.com/"},"The Book of Shaders")," - Gentle step-by-step guide through the abstract and complex universe of Fragment Shaders. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23497924"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://shaderland.com/"},"ShaderLand")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/lettier/3d-game-shaders-for-beginners"},"3D Game Shaders For Beginners")," - Step-by-step guide on how to implement SSAO, depth of field, lighting, normal mapping, and more for your 3D game."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bou.ke/blog/shaders/"},"Playing around with shaders (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/imageworks/OpenShadingLanguage"},"Open Shading Language")," - Advanced shading language for production GI renderers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dfranx/SHADERed"},"SHADERed")," - Lightweight, cross-platform & full-featured desktop tool for creating and testing HLSL and GLSL shaders."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jvns.ca/blog/2020/03/15/writing-shaders-with-signed-distance-functions/"},"Getting started with shaders: signed distance functions (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gfx-rs/naga"},"Naga")," - Experimental shader translation library for the needs of gfx-rs project and WebGPU."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zauonlok/renderer"},"Software Renderer")," - Shader-based software renderer written from scratch in C89."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nidorx/matcaps"},"MatCaps")," - Huge library of MatCap textures in PNG and ZMT."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/halvves/shader-doodle"},"Shader Doodle")," - Friendly web-component for writing and rendering shaders."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kbinani/colormap-shaders"},"Collection of shaders to draw color maps")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/ShaderConductor"},"ShaderConductor")," - Tool designed for cross-compiling HLSL to other shading languages."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.willusher.io/graphics/2019/11/20/the-sbt-three-ways"},"The RTX Shader Binding Table Three Ways (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Xibanya/ShaderTutorials"},"ShaderTutorials")," - Shaders For People Who Don't Know How To Shader, a tutorial series for beginners."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://maikklein.github.io/rlsl-update3/"},"The future of RLSL (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.peterstefek.me/shader-branch.html"},"A Note on Branching Within a Shader (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/JiayinCao/Tiny-Shading-Language"},"Tiny Shading Language")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/shader-slang/slang"},"Slang")," - Shading language that extends HLSL with new capabilities for building modular, extensible, and high-performance real-time shading systems."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/cdglabs/Shadershop"},"Shadershop")," - Interface for programming GPU shaders in the mode of a direct manipulation image editor like Photoshop."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/seanbaxter/shaders"},"Circle C++ shaders")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rabbid76/graphics-snippets"},"Shading techniques and GLSL snippets")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/leops/rasen"},"Rasen")," - Generate SPIR-V bytecode from an operation graph."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/aras-p/smol-compute"},"smol-compute")," - Tiny library for launching compute shaders on D3D11 and Metal."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mkeeter/futureproof"},"Futureproof")," - Live editor for GPU shaders, built on Zig, Neovim, and WebGPU. (",(0,n.kt)("a",{parentName:"li",href:"https://www.mattkeeter.com/projects/futureproof/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cineshader.com/"},"CineShader")," - Real-time 3D shader visualizer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/polymonster/pmfx-shader"},"pmfx-shader")," - Cross platform shader system for HLSL, GLSL, Metal and SPIR-V."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/evanw/glslx"},"GLSLX")," - GLSL type checker, code formatter, and minifier for WebGL. (",(0,n.kt)("a",{parentName:"li",href:"http://evanw.github.io/glslx/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/karimnaaji/live-glsl"},"live-glsl")," - Lightweight GLSL live-coding tool for macOS. (",(0,n.kt)("a",{parentName:"li",href:"http://karim.naaji.fr/projects/liveglsl"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jshrake/grimoire"},"grimoire")," - Cross-platform live-coding tool for creative coding with GLSL shaders."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://interplayoflight.wordpress.com/2021/04/18/how-to-read-shader-assembly/"},"How to read shader assembly (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/patriciogonzalezvivo/lygia"},"Lygia")," - Granular and multi-language shader library designed for performance and flexibility."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://raphlinus.github.io/gpu/2021/04/28/slow-shader.html"},"The case of the curiously slow shader (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/stackgl/shader-school"},"Shader School")," - Introduction to GLSL shaders and graphics programming that runs in your web browser. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28660024"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/AlanZucconi/status/1392447855659466752"},"Shader Coding")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://charstiles.com/class/"},"Shader Workshop (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=DZRn_jNZjbw"},"Compute Shader 101 (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/googlefonts/compute-shader-101"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27396634"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/CharStiles/shaderplace"},"Shader Place")," - Real-time collaborative GLSL livecode editor."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLImQaTpSAdsCnJon-Eir92SZMl7tPBS4Z"},"Shaders For Game Devs - YouTube")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://rosenzweig.io/blog/monotone-portraits-with-glsl.html"},"Monochromatic Portraits with GLSL (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kajott/GIPS"},"GIPS")," - GLSL Image Processing System. Applies filters written in the OpenGL Shading Language (GLSL)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gltf.pmnd.rs/"},"GLTF -> React Three Fiber")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/pmndrs/gltfjsx"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pudnax/pilka"},"Pilka")," - Live-coding tool for creating shader demos, Vulkan powered."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/slerpyyy/sh4der-jockey"},"Sh4derJockey")," - Tool for shader coding and live performances."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hsimpson/vscode-glsllint"},"GLSL Linting for VS Code")," - Supports linting of GLS (OpenGL Shading Language)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tonarino/shadergarden"},"Shadergarden")," - Create evolving artistic images with hot-code-reloaded Lisp and GLSL. (",(0,n.kt)("a",{parentName:"li",href:"https://blog.tonari.no/shadergarden"},"Article"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.pushing-pixels.org/2021/09/22/skia-shaders-in-compose-desktop.html"},"Skia shaders in Compose Desktop (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28636087"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Gui-Yom/nuance"},"Nuance")," - Tool to run your shaders on the gpu. Also a good demo application for wgpu-rs."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2109.14682"},"Unified Shader Programming in C++ (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28738750"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/gtibo/Shader-playground"},"Shader playground")," - Uses VisualShader of Godot."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://raphlinus.github.io/gpu/2021/11/17/prefix-sum-portable.html"},"Prefix sum on portable compute shaders (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29254668"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hugopeters.me/posts/5/"},"The fun of playing with shaders")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/patriciogonzalezvivo/glslViewer"},"glslViewer")," - Flexible console-base OpenGL Sandbox to display 2D/3D GLSL shaders without the need of an UI."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/patriciogonzalezvivo/glslCanvas"},"GlslCanvas")," - Simple tool to load GLSL shaders on HTML Canvas using WebGL."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://acko.net/blog/frickin-shaders-with-frickin-laser-beams/"},"Frickin' Shaders With Frickin' Laser Beams (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29532110"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/knightcrawler25/GLSL-PathTracer"},"GLSL-PathTracer")," - Physically based path tracer that runs in a GLSL fragment shader."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/KhronosGroup/GLSL"},"GLSL Shading Language Issue Tracker")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ijdykeman.github.io/graphics/simple_fog_shader"},"A Simple Shader for Point Lights in Fog (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hughsk/matcap"},"matcap"),' - GLSL shaders for calculating/rendering Spherical Environment Maps, or "matcaps".'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/charlieroberts/marching"},"marching.js")," - JavaScript library that compiles GLSL ray marchers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.landontownsend.com/single-post/super-imposter-shader-my-journey-to-make-a-high-quality-imposter-shader"},'"Super Imposter" shader: my journey to make a high quality imposter shader')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://alain.xyz/blog/a-review-of-shader-languages"},"A Review of Shader Languages (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30340625"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/chenglou/pure-css-shaders-art"},"Pure CSS Shaders Art")," - Shaders art made with pure CSS."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://neon-playground.herokuapp.com/"},"Neon Playground")," - Interactive & intuitive way to build shaders without having to write any code. (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/emilwidlund/status/1370858347923185669"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://the-witness.net/news/2022/02/a-shader-trick/"},"A Shader Trick (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30438541"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/t6s14z/a_functional_shading_langauge/"},"Functional shading languages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/shader-park/shader-park-core"},"Shader Park")," - JavaScript framework for creating real-time 2D and 3D shaders. JS -> Shader. (",(0,n.kt)("a",{parentName:"li",href:"https://shaderpark.com/"},"Web"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30655287"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/BrianSharpe/Wombat"},"Wombat")," - Efficient texture-free GLSL procedural noise library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/actnwit/shaderity"},"Shaderity")," - Useful shader toolset."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/m-schuetz/compute_rasterizer"},"Rendering Point Clouds with Compute Shaders")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hturan.com/writing/complex-numbers-glsl"},"Visualizing Complex Numbers Using GLSL (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/unconed/shadergraph"},"ShaderGraph")," - Library for linking together GLSL snippets into stand-alone shaders. It is mainly meant to build complicated shaders 100% programmatically."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yuanming-hu/voxel-art"},"Taichi Voxel Challenge")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://xem.github.io/MiniShadertoy/"},"MiniShadertoy")," - Tiny webGL shader playground. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/xem/MiniShadertoy"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Ryan-Gee/RheaGrass"},"Rhea Grass")," - Geometry-shader based grass for Unity's Universal Render Pipeline."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://editor.thebookofshaders.com/"},"Simple WebGL Fragment Shader Editor")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/patriciogonzalezvivo/glslEditor"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/alaingalvan/CrossShader"},"CrossShader")," - Tool for cross compiling shaders. Convert between GLSL, HLSL, Metal Shader Language, or older versions of GLSL."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/danielscherzer/SHADER"},"Shader examples"))))}d.isMDXComponent=!0}}]);