"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[8785],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=r.createContext({}),m=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),h=m(a),u=i,k=h["".concat(p,".").concat(u)]||h[u]||c[u]||n;return a?r.createElement(k,l(l({ref:t},s),{},{components:a})):r.createElement(k,l({ref:t},s))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,l=new Array(n);l[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var m=2;m<n;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},6199:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return c}});var r=a(7462),i=a(3366),n=(a(7294),a(3905)),l=["components"],o={},p="Compilers",m={unversionedId:"compilers/compilers",id:"compilers/compilers",title:"Compilers",description:"Notes",source:"@site/docs/compilers/compilers.md",sourceDirName:"compilers",slug:"/compilers/",permalink:"/kinderheim/compilers/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/compilers/compilers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Definitions",permalink:"/kinderheim/code/definitions"},next:{title:"Build systems",permalink:"/kinderheim/compilers/build-systems/"}},s={},c=[{value:"Notes",id:"notes",level:2},{value:"Links",id:"links",level:2}],h={toc:c};function u(e){var t=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"compilers"},"Compilers"),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/spakhm/status/1283672210050125824"},"Lessons learned on compiler development: 1. Group functions by AST node, not by pass. 2. Have a formal theory for checking types worked out in advance. 3. Don't dump the metadata for each pass directly into AST nodes.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/typeswitch/status/1530973163517104135"},"When you compile a program into an object binary, it contains references to external symbols. a linker takes all your objects (& any libraries you want to statically link) and creates a combined executable, resolving those references (by rewriting some machine code!) References to dynamic libraries are only resolved when an executable is loaded in memory to be executed, so the operating system's loader also has to modify some machine code."))),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tweag/asterius"},"Haskell to WebAssembly")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/aalhour/awesome-compilers"},"Awesome compilers")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://compileroptimizations.com/"},"Compiler Optimization examples")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://godbolt.org"},"Compiler Explorer")," - Run compilers interactively from your web browser and interact with the assembly. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24066570"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/compiler-explorer/infra"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ShivamSarodia/ShivyC"},"ShivyC")," - C compiler created in Python."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/swc-project/swc"},"swc")," - Super-fast TS / JS compiler written in rust. (",(0,n.kt)("a",{parentName:"li",href:"https://swc.rs/"},"Docs"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/swc-project/website"},"Docs Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://swc-play.vercel.app/"},"swc playground")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/g-plane/swc-playground"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ahoppen/introduction-to-compilers"},"Introduction to Compilers")," - Swift Playground giving an overview over the inner workings of modern compilers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ccache/ccache"},"ccache")," - Fast compiler cache. (",(0,n.kt)("a",{parentName:"li",href:"https://ccache.dev/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/google/starlark-go"},"Starlark in Go")," - The Starlark configuration language, implemented in Go."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pr0g/cmake-examples"},"Modern CMake Examples")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mozilla/sccache"},"sccache")," - Shared Compilation Cache."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.goodreads.com/book/show/703102.Compilers"},"Compilers: Principles, Techniques, and Tools book (1986)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.tufts.edu/~nr/c--/index.html"},'Short overview of "C--"')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.tufts.edu/~nr/c--/extern/man2.pdf"},"The C-- Language Specification")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://forums.swift.org/t/how-to-become-an-expert-in-compilers-the-long-way/22175"},"How to become an expert in compilers the long way? (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://belkadan.com/blog/2016/05/So-You-Want-To-Be-A-Compiler-Wizard/"},"So You Want to Be a (Compiler) Wizard (2016)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22848450"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sweirich/tal"},"tal")," - Implementation of Typed Assembly Language (Morrisett, Walker, Crary, Glew)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hellerve/microml"},"microml")," - Minimal ML, type-inferred, compiled, and/or interpreted in less than 800 lines."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/libffi/libffi"},"libffi")," - Portable foreign-function interface library."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pwaller/go2ll"},"go2ll")," - Toy go compiler to LLVM."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=b3r6GvCBbw4"},"Where does YOUR compiler come from? - Vincent Ambo (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/libfirm/libfirm"},"libFirm")," - Graph based intermediate representation and backend for optimising compilers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/BOLT"},"BOLT")," - Binary Optimization and Layout Tool - A linux command-line utility used for optimizing performance of binaries. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22654229"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/rust/comments/qnacdr/facebooks_bolt_nearing_mainline_llvm_for/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/google/llvm-propeller"},"Propeller")," - Profile Guided Optimizing Large Scale LLVM-based Relinker."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ispc/ispc"},"Intel(r) SPMD Program Compiler")," - Compiler for a variant of the C programming language, with extensions for single program, multiple data programming."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Morgan-Stanley/hobbes"},"hobbes")," - Language and an embedded JIT compiler."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.craftinginterpreters.com/"},"Crafting Interpreters Book")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/munificent/craftinginterpreters"},"Code"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/mariosangiorgio/rulox"},"In Rust"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ludwigpacifici/saumon"},"In OCaml"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tdp2110/crafting-interpreters-rs"},"In Rust"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ccntrq/loxomotive"},"In Haskell"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/franeklubi/luxya"},"In Rust"),") (",(0,n.kt)("a",{parentName:"li",href:"https://craftinginterpreters.com/contents.html"},"Contents"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30332368"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31200391"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://danilafe.com/blog/00_compiler_intro/"},"Compiling a Functional Language Using C++, Part 0 - Intro (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.veitheller.de/Compiling_at_Compile_Time.html"},"Compiling at Compile Time (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=qzljG6DKgic"},"MLIR: Multi-Level Intermediate Representation for Compiler Infrastructure - Tatiana Shpeisman, Chris Lattner (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.lihaoyi.com/post/HowanOptimizingCompilerWorks.html"},"How an Optimizing Compiler Works (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://software-lab.org/publications/csur2019_compiler_testing.pdf"},"A Survey of Compiler Testing (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IntelLabs/flrc"},"Functional Language Research Compiler (FLRC)")," - Designed to be a general compiler framework for functional languages."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://l-lang.org/blog/Compiling-pattern-matching/"},"Compiling pattern matching (2013)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sunjay/dino"},"dino")," - Compiler / PL Experimentation in Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.cornell.edu/courses/cs6120/2019fa/"},"Advanced Compilers course (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/grin-compiler/grin"},"GRIN")," - Compiler back-end for lazy and strict functional languages with whole program optimization support. (",(0,n.kt)("a",{parentName:"li",href:"https://grin-compiler.github.io/"},"Website"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/DoctorWkt/acwj"},"Compiler Writing Journey")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mgaudet/CompilerJobs"},"Listing of compiler, language and runtime teams for people looking for jobs in this area")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/6035/fa19"},"Computer Language Engineering course (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tvm.d2l.ai/"},"Dive into Deep Learning Compiler")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/d2l-ai/d2l-tvm"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://papers.nips.cc/paper/9604-compiler-auto-vectorization-with-imitation-learning.pdf"},"Compiler Auto-Vectorization with Imitation Learning")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21968118"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/aras-p/ClangBuildAnalyzer"},"Clang Build Analyzer")," - Can be useful to figure out what takes time during compilation of one source file."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.cornell.edu/courses/cs6120/2019fa/"},"CS 6120: Advanced Compilers course")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/sampsyo/cs6120"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/1801.04405"},"A Survey on Compiler Autotuning using Machine Learning (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://compilersforhumans.com/"},"Compilers for humans")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www-cs-students.stanford.edu/~blynn/compiler/"},"Compiler notes")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crypto.stanford.edu/~blynn/compiler/"},"Adventures of a Haskell compiler")," - Main goal is to continually level-up a self-hosting Haskell compiler. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/blynn/compiler"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.cmu.edu/~fp/courses/15411-f14/"},"Compiler Design course by Frank Pfenning (2014)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.cmu.edu/~crary/hotc-f15/"},"HOT Compilation course (2015)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://courses.ccs.neu.edu/cs4410/"},"Compiler Design course (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.umd.edu/class/fall2017/cmsc430/"},"CMSC430: Introduction to Compilers (2017)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/IUCompilerCourse/Essentials-of-Compilation"},"Essentials of Compilation: Book about compiling Racket to x86-64 assembly")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.swarthmore.edu/~jpolitz/cs75/s16/"},"Principles of Compiler Design")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLGNbPb3dQJ_4WT_m3aI3T2LRf2R_FKM2k"},"Essentials of Interpretation (2019)")," - Course on implementing an interpreter for a programming language similar to Python or JavaScript, from scratch."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/falgon/htcc"},"htcc")," - Tiny C language compiler (x86-64)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hanwen/termite"},"Termite")," - Generic distributed compilation system."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://paperhub.s3.amazonaws.com/24842c95fb1bc5d7c5da2ec735e106f0.pdf"},"A Simple Graph-Based Intermediate Representation (1995)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22223820"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www-inst.eecs.berkeley.edu/~cs164/sp19/"},"CS164: Introduction to the design of programming languages course (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://compilers.iecc.com/crenshaw/"},"Let's Build a Compiler, by Jack Crenshaw")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22346532"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jubitaneja/codegen"},"Automatic peephole optimizer for Cranelift JIT compiler")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rspivak/lsbasi"},"Let's Build A Simple Interpreter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mitpress.mit.edu/books/introduction-static-analysis"},"Introduction to Static Analysis - An Abstract Interpretation Perspective (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html"},"Zig cc: A drop-in replacement for GCC/Clang (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22679138"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/dw9qyv/zig_cc_powerful_drop_replacement_for_gcc"},"Lobsters"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27872596"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://hjemmesider.diku.dk/~torbenm/Basics/"},"Basics of Compiler Design (2000)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21778546"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"http://hjemmesider.diku.dk/~torbenm/Basics/basics_lulu2.pdf"},"PDF"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.princeton.edu/~appel/modern/ml/"},"Modern Compiler Implementation in ML book (1998)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/antoyo/tiger-rs"},"In Rust"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tdp2110/HaskellTiger"},"In Haskell"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hal.inria.fr/hal-02177326v2"},"Efficient Deconstruction with Typed Pointer Reversal (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/theopolis/build-anywhere"},"Scripts for building compilers that run anywhere, which build things that run anywhere")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ftilde/ugdb"},"ugdb")," - Alternative TUI for gdb."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://thume.ca/2019/04/18/writing-a-compiler-in-rust/"},"Writing a Compiler in Rust (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dtolnay/trybuild"},"Trybuild")," - Test harness for ui tests of compiler diagnostics."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/c87ad8b4e32f3cf2d5ff7f4890ff620f560ab84b.pdf"},"Secure Delivery of Program Properties through Optimizing Compilation (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://homes.cs.washington.edu/~adriana/website/CarpentryCompiler.pdf"},"Carpentry Compiler")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/icecc/icecream"},"Icecream")," - Distributed compiler with a central scheduler to share build load."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/vnmakarov/mir"},"MIR Project")," - Light-weight JIT compiler based on MIR (Medium Internal Representation)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pikelet-lang/pikelet/issues/103"},"Incremental/query driven compiler architectures")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ollef.github.io/blog/posts/speeding-up-sixty.html"},"Speeding up the Sixty compiler (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://deepsource.io/blog/introduction-static-code-analysis/"},"A hands-on introduction to static code analysis (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23071134"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://danghica.blogspot.com/2020/04/teaching-compilers.html"},"Teaching Compilers (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://linki.tools/2020/02/creduce-it-s-a-kind-of-magic.html"},"CReduce - it\u2019s a kind of magic! (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://def.lakaban.net/posts/2020-05-02-compact-lexer-table-representation/"},"Compact lexer table representation (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.win.tue.nl/~aeb/linux/hh/thompson/trust.html"},"Reflections on Trusting Trust by Ken Thompson"),' - Creating a version of C compiler that, when presented with the source code for the "login" program, would automatically compile in a backdoor to allow him entry to the system.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.utexas.edu/~isil/jitsynth.pdf"},"Synthesizing JIT Compilers for In-Kernel DSLs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://johnwickerson.wordpress.com/2020/05/21/diagrams-for-composing-compilers/"},"Diagrams for Composing Compilers (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://keleshev.com/one-pass-compiler-primer"},"One-pass Compiler Primer (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23270269"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/SPARTA"},"SPARTA")," - Library of software components specially designed for building high-performance static analyzers based on the theory of Abstract Interpretation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tamuhey/hack-assembler-rust"},"Nand2Tetris Hack assembler implemented in Rust")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23412434"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://web.eecs.utk.edu/~azh/blog/teenytinycompiler1.html"},"Let's make a Teeny Tiny compiler (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23441767"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/windelbouwman/ppci"},"PPCI")," - Compiler for ARM, X86, MSP430, xtensa and more implemented in pure Python."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/wdv4758h/awesome-jit"},"Awesome JIT")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/shinh/elvm"},"ELVM")," - Similar to LLVM but dedicated to Esoteric Languages."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nicoleorchard.com/blog/compilers"},"An Intro to Compilers (2017)")," - How to Speak to Computers. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23582280"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ollef.github.io/blog/posts/query-based-compilers.html"},"Query-based compiler architectures (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23644391"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=3D-ngGIP4fQ"},"Video"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://dl.acm.org/doi/abs/10.1145/3392717.3392754"},"What every scientific programmer should know about compiler optimizations (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23678765"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/circt/circt"},"Circuit IR Compilers and Tools")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/"},"A crash course in just-in-time (JIT) compilers (2017)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://carolchen.me/blog/jits-intro/"},"A Deep Introduction to JIT Compilers: JITs are not very Just-in-time (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23740655"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://carolchen.me/blog/jits-impls/"},"How JIT Compilers are Implemented and Fast: Julia, Pypy, LuaJIT, Graal and More (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yoshuawuyts/notes/blob/master/compilers/resources.md"},"Compilers Resources by Yosh")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jamiebuilds/the-super-tiny-compiler"},"The Super Tiny Compiler")," - Ultra-simplified example of all the major pieces of a modern compiler written in easy to read JavaScript. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/h-a-n-a/the-super-tiny-rusty-compiler"},"In Rust"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zwang4/awesome-machine-learning-in-compilers"},"Awesome machine learning for compilers and program optimisation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=5TX5R_aX3ec"},"Compiler Fuzzing: How Much Does It Matter? (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://soil-initiative.org/"},"SOIL: Single Open Intermediate Language")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/2kdxph/soil_single_open_intermediate_language"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hassamuddin.com/blog/reg-alloc/"},"A Quick Introduction to Register Allocation (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/3wfzfq/quick_introduction_register_allocation"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=tu4p1ftTBVw"},"Effective Function Merging in the SSA Form (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/cbarrett/status/1288615955870949383"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://people.inf.ethz.ch/wirth/CompilerConstruction/index.html"},"Compiler Construction - Niklaus Wirth")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pldi20.sigplan.org/details/SOAP-2020-papers/5/Keynote-Beyond-Code-New-Signals-for-Static-Analysis-"},"Beyond Code: New Signals for Static Analysis (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://publish.illinois.edu/hpvm-project/"},"HPVM - Heterogeneous Parallel Virtual Machine")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/oracle/graal"},"GraalVM")," - Run Programs Faster Anywhere. (",(0,n.kt)("a",{parentName:"li",href:"https://www.graalvm.org/"},"Web"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24103233"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://justinmeiners.github.io/lc3-vm/"},"Write your Own Virtual Machine")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/justinmeiners/lc3-vm"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://era.ed.ac.uk/handle/1842/36866"},"Deep learning for compilers (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mlir.llvm.org/docs/Tutorials/Toy/Ch-1/"},"MLIR Tutorial")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://fiigii.com/2020/02/16/Does-register-selection-matter-to-performance-on-x86-CPUs/"},"Does register selection matter to performance on x86 CPUs? (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/Compilers/comments/ipsdj0/self_hosting_compiler/"},"Self hosting compiler (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bootstrapping.miraheze.org/wiki/Main_Page"},"Bootstrapping compilers")," - Building up compilers and interpreters and tools from nothing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://vinayak.io/2020/09/28/day-34-linkers-go-brrrrr/"},"Linkers go brrrrr (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.hex-rays.com/"},"Hex Rays")," - State-of-the-art binary code analysis solutions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RolfRolles/HexRaysDeob"},"HexRaysDeob")," - Hex-Rays microcode API plugin for breaking an obfuscating compiler."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crypto.stanford.edu/~blynn/compiler/"},"Compiler notes (focusing on Haskell)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://christine.website/blog/minicompiler-lexing-2020-10-29"},"Minicompiler: Lexing (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ksluckow/awesome-symbolic-execution"},"Awesome Symbolic Execution")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=wv6ftJNq92Q"},"Grammar-Based Testing for Little Languages: An Experience Report with Student Compilers (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tratt.net/laurie/blog/entries/automatic_syntax_error_recovery.html"},"Automatic Syntax Error Recovery (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/true-grue/Compiler-Development"},"What to read to learn compilers (RU)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25275675"},"HN: Best Resources for Compiler Construction (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.cornell.edu/courses/cs6120/2020fa/self-guided/"},"Advanced Compilers: The Self-Guided Online Course (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25386756"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://www.cs.cornell.edu/courses/cs6120/2020fa/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/Compilers/comments/kcpy3b/favorite_textbooks_for_students_taking_their/gfsk6kz/"},"Advice on how to best approach learning compilers (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.purdue.edu/homes/rompf/pmca/vol1/index.html"},"Post-Modern Compiler Design (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bernsteinbear.com/blog/inline-caching/"},"Inline caching (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://capra.cs.cornell.edu/bril/"},"Bril: A Compiler Intermediate Representation for Learning")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/sampsyo/bril"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.shipreq.com/post/compilers_are_hard"},"Compilers are hard")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25831911"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bisqwit/compiler_series"},"Compiler Video Series")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/eurecom-s3/symqemu"},"SymQEMU")," - Compilation-based symbolic execution for binaries. (",(0,n.kt)("a",{parentName:"li",href:"http://www.s3.eurecom.fr/tools/symbolic_execution/symqemu.html"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://norswap.com/compilers/"},"Compiler Class (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26075930"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.toolchains.net/"},"Toolchains.net")," - Collection of toolchain resources."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pure.itu.dk/portal/files/85295380/bahr20jfp_paper.pdf"},"Calculating Correct Compilers II: Return of the Register Machines")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/pa-ba/reg-machine"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.sigplan.org/2021/02/23/teaching-compilers-backward/"},"Teaching Compilers Backward (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26237368"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hisham.hm/2021/02/25/compiler-versus-transpiler-what-is-a-compiler-anyway/"},"Compiler versus Transpiler: what is a compiler, anyway?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://wolchok.org/posts/inlining-and-compiler-optimizations/"},"Inlining and Compiler Optimizations (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/spencertipping/jit-tutorial"},"How to write a JIT compiler")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29566249"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/weliveindetail/JitFromScratch"},"JitFromScratch")," - Example project from my talks in the LLVM Social Berlin and C++ User Group."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nickdesaulniers.github.io/blog/2015/05/25/interpreter-compiler-jit/"},"Interpreter, Compiler, JIT (2015)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jserv/jit-construct"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://comby.dev/blog/2021/03/26/comby-reducer"},"A simple program reducer for any language (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://c9x.me/compile/"},"QBE - Compiler Backend")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://c9x.me/compile/bib/"},"Resources for Amateur Compiler Writers")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=4HgShra-KnY"},"The Golden Age of Compiler Design in an Era of HW/SW Co-Design \u2013 Chris Lattner (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26886427"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://docs.google.com/presentation/d/1ZMtzT6nmfvNOlIaHRzdaXpFeaAklcT7DvfGjhgpzcxk/edit#slide=id.p"},"Slides"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2103.15103"},"Phism: Polyhedral High-Level Synthesis in MLIR (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/iu-parfunc/gibbon"},"Gibbon")," - Compiler for functional programs on serialized data. (",(0,n.kt)("a",{parentName:"li",href:"http://iu-parfunc.github.io/gibbon/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/davidgiven/ack"},"Amsterdam Compiler Kit")," (",(0,n.kt)("a",{parentName:"li",href:"http://tack.sourceforge.net/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nforest/awesome-decompilation"},"Awesome Decompilation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zakirullin/tiny-compiler"},"Tiny compiler for a simple synthetic language featuring LL(2) grammar, written in pure C")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.royalsloth.eu/posts/the-compiler-will-optimize-that-away/"},"The compiler will optimize that away (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27010965"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www2.eecs.berkeley.edu/Pubs/TechRpts/2021/EECS-2021-2.html"},"Machine Learning in Compiler Optimization (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=7PU-6cWQQkE"},"Noise-Aware Dynamical System Compilation for Analog Devices with Legno (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sheredom/yair"},"yair")," - High-level compiler IR entirely written in Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Tiramisu-Compiler/tiramisu"},"Tiramisu")," - Compiler for expressing fast and portable data parallel computations. (",(0,n.kt)("a",{parentName:"li",href:"http://tiramisu-compiler.org/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://eecs.ucf.edu/~dcm/Teaching/COT4810-Spring2011/Literature/JustInTimeCompilation.pdf"},"A Brief History of Just-in-Time (2003)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jeapostrophe.github.io/courses/2018/spring/406/notes/book.pdf"},"Essentials of Compilation: An Incremental Approach (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://carolchen.me/blog/technical/jits-impls/"},"How JIT Compilers are Implemented and Fast: Pypy, LuaJIT, Graal and More (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.92.177&rep=rep1&type=pdf"},"Software and Hardware Techniques for Efficient Polymorphic Calls (1999)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/cs/0703084.pdf"},"The Octagon Abstract Domain (2007)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ferrous-systems.com/blog/compilers-as-teachers/"},"Compilers as Teachers (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://static.barik.net/barik/publications/icse2017/PID4655707.pdf"},"Do Developers Read Compiler Error Messages? (2017)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28007593"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://briancallahan.net/blog/20210814.html"},"Let's write a compiler, part 1: Introduction, selecting a language, and doing some planning (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ibara/pl0c"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://briancallahan.net/blog/20210829.html"},"Let's get hands-on with QBE (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.sunfishcode.online/canonicalization/"},"Canonicalization (2018)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/paritytech/cachepot"},"cachepot")," - Shared Compilation Cache. ",(0,n.kt)("inlineCode",{parentName:"li"},"sccache")," with extra sec, which in turn is ",(0,n.kt)("inlineCode",{parentName:"li"},"ccache")," with cloud storage."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://huyenchip.com/2021/09/07/a-friendly-introduction-to-machine-learning-compilers-and-optimizers.html"},"A friendly introduction to machine learning compilers and optimizers (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/eurecom-s3/symcc"},"SymCC")," - Efficient compiler-based symbolic execution. (",(0,n.kt)("a",{parentName:"li",href:"http://www.s3.eurecom.fr/tools/symbolic_execution/symcc.html"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/onnx/onnx-mlir"},"ONNX MLIR")," - Open-source project for compiling ONNX models into native code on x86, P and Z machines (and more). (",(0,n.kt)("a",{parentName:"li",href:"http://onnx.ai/onnx-mlir/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kendryte/nncase"},"nncase")," - Neural network compiler for AI accelerators."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/katef/kgt"},"KGT: Kate's Grammar Tool")," - BNF wrangling and railroad diagrams."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/knossos-ksc"},"Knossos-KSC")," - Compile a lisp-like IR with automatic differentiation and user-defined rewrites."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/spcl/pymlir"},"pyMLIR")," - Python Interface for the Multi-Level Intermediate Representation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf"},"An Incremental Approach to Compiler Construction (2006)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29123715"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2108.07639"},"Learning C to x86 Translation: An Experiment in Neural Compilation (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jordiae/neural-compilers"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://iucompilercourse.github.io/IU-P423-P523-E313-E513-Fall-2020/"},"Essentials of Compilation [book and video lectures] (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29295880"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/IUCompilerCourse/public-student-support-code"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.purdue.edu/homes/rompf/papers/wei-oopsla19.pdf"},"Staged Abstract Interpreters (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bytecodealliance/target-lexicon"},"target-lexicon")," - Library for managing targets for compilers and related tools."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ethanhs/cce"},"cce")," - Compiler Explorer from CLI."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://people.csail.mit.edu/cpitcla/thesis/relational-compilation.html"},"On relational compilation")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/dj04ud/on_relational_compilation"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://janmidtgaard.dk/papers/Midtgaard-al%3aICFP17-full.pdf"},"Effect-Driven QuickChecking of Compilers")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jmid/efftester"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/siliconcompiler/siliconcompiler"},"SiliconCompiler")," - Open source compiler framework that automates translation from source code to silicon."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pspdfkit.com/blog/2021/understanding-fast-math/"},"Understanding Fast-Math (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29482350"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=K3qf8gRFESU"},"Talking with a legend \u2013 interview with Anders Hejlsberg (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mcyoung.xyz/2021/06/01/linker-script/"},"Everything You Never Wanted To Know About Linker Script (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/femtomc/abstraps"},"abstraps")," - Extensible compiler middle layer with abstract interpreters."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/BNFC/bnfc"},"BNF Converter")," - Compiler construction tool generating a compiler front-end from a Labelled BNF grammar."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://robert.ocallahan.org/2021/12/do-we-really-need-link-step.html"},"Do We Need A Link Step? (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/Compilers/comments/rjln3u/do_we_really_need_a_link_step/"},"Reddit"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29754918"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kaist-cp/cs420"},"KAIST CS420: Compiler Design (2022 Spring)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/vtil-project/VTIL-Core"},"VTIL")," - Virtual-machine Translation Intermediate Language."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.reverberate.org/2012/12/hello-jit-world-joy-of-simple-jits.html"},"Hello, JIT World: The Joy of Simple JITs (2012)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/llsoftsec/llsoftsecbook"},"Low-Level Software Security for Compiler Developers")," (",(0,n.kt)("a",{parentName:"li",href:"https://llsoftsec.github.io/llsoftsecbook/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Snektron/pareas"},"Pareas")," - GPU-accelerated compiler for a simple programming language, which outputs RISC-V machine code."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sisshiki1969/monoasm"},"monoasm")," - In-memory x86-64 assembler for JIT compiler."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.diegofreijo.com/blog/rlox-vm-a-lox-interpreter-in-rust-part-1/"},"Crafting A Lox Interpreter In Rust (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sol-prog/x86-64-minimal-JIT-compiler-Cpp"},"Writing a minimal x86-64 JIT compiler in C++")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/VLSIDA/OpenRAM"},"OpenRAM")," - Open-source static random access memory (SRAM) compiler. (",(0,n.kt)("a",{parentName:"li",href:"https://openram.soe.ucsc.edu/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mborgerson/mdec"},"mdec")," - Decompilation as a Service. Explore multiple decompilers and compare their output with minimal effort. Upload binary, get decompilation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/prg-titech/baccaml"},"BacCaml")," - Meta-hybrid JIT compiler mixing trace- and method-based compilation strategies."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://c9x.me/compile/"},"QBE")," - Compiler Backend. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/8l/qbe"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://briancallahan.net/blog/20220406.html"},"Hand-optimizing the TCC code generator (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://chelseatroy.com/2022/03/11/why-compilers-dont-autocorrect-obvious-parse-errors/"},"Why Compilers Don\u2019t Autocorrect \u201cObvious\u201d Parse Errors (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30965572"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/HPCguy/Squint"},"Squint")," - Peephole optimizer for stack VM compilers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/true-grue/raddsl"},"raddsl")," - Tools for rapid prototyping of DSL compilers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/@predrag.gruevski/compiler-adventures-part-1-no-op-instructions-c084358c7864"},"Compiler Adventures, part 1: No-op Instructions (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/PredragGruevski/status/1489282449498640388"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://typesanitizer.com/blog/a-compilers-users-p1.html"},"A compiler's users (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jameysharp/optir"},"optir")," - Compiler optimizer for arbitrary control flow based on equality saturation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/apt1002/mijit"},"Mijit")," - Experimental JIT compiler generator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www3.nd.edu/~dthain/compilerbook/"},"Introduction to Compilers and Language Design")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/uptguy/introduction_to_compilers_and_language_design/"},"Reddit"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31388741"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31389024"},"Ask HN: Recommendation for general purpose JIT compiler (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.nott.ac.uk/~pszgmh/ccc3.pdf"},"Monadic Compiler Calculation (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://changelog.com/gotime/227"},"Podcast: PhD research on meta programming and static analyzers (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/Compilers/comments/uxvf73/is_there_any_research_or_articles_on_different/"},"Research or articles on different, more efficient compiler designs (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/fkie-cad/dewolf"},"dewolf")," - Research decompiler implemented as a Binary Ninja plugin and uses the MedimumLevel IL as a starting point."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.purdue.edu/homes/rompf/papers/tahboub-sigmod18.pdf"},"How to Architect a Query Compiler, Revisited")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/robertmuth/Cwerg"},"Cwerg")," - Lightweight compiler backend aimed at new programming language implementations that want to avoid heavy dependencies like LLVM."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kipp.ly/blog/jits-impls/"},"Deep Dive into JIT Compiler Optimizations (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cfallin.org/blog/2022/06/09/cranelift-regalloc2/"},"Cranelift, Part 4: A New Register Allocator (2022)"))))}u.isMDXComponent=!0}}]);