"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[38296],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var m=a.createContext({}),s=function(e){var r=a.useContext(m),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=s(e.components);return a.createElement(m.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),f=n,h=u["".concat(m,".").concat(f)]||u[f]||p[f]||i;return t?a.createElement(h,o(o({ref:r},c),{},{components:t})):a.createElement(h,o({ref:r},c))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var m in r)hasOwnProperty.call(r,m)&&(l[m]=r[m]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},23770:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var a=t(87462),n=t(63366),i=(t(67294),t(3905)),o=["components"],l={},m="Firmware",s={unversionedId:"hardware/firmware",id:"hardware/firmware",title:"Firmware",description:"Links",source:"@site/docs/hardware/firmware.md",sourceDirName:"hardware",slug:"/hardware/firmware",permalink:"/kinderheim/hardware/firmware",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/hardware/firmware.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Displays",permalink:"/kinderheim/hardware/displays"},next:{title:"Field-programmable gate array",permalink:"/kinderheim/hardware/fpga"}},c={},p=[{value:"Links",id:"links",level:2}],u={toc:p};function f(e){var r=e.components,t=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"firmware"},"Firmware"),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/intel/ModernFW"},"ModernFW")," - Experimental approach to building a minimum viable platform firmware for machines such as cloud server platforms."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/flashrom/flashrom"},"flashrom")," - Utility for detecting, reading, writing, verifying and erasing\nflash chips."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LongSoft/UEFITool"},"UEFITool")," - Cross-platform C++/Qt program for parsing, extracting and modifying UEFI firmware images."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://queue.acm.org/detail.cfm?id=3349301"},"Open-source Firmware (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ARM-software/arm-trusted-firmware"},"Trusted Firmware-A")," - Reference implementation of secure world software for Arm A-Profile architectures."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ReFirmLabs/binwalk"},"Binwalk")," - Fast, easy to use tool for analyzing, reverse engineering, and extracting firmware images."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://interrupt.memfault.com/blog/code-size-deltas"},"Tracking Firmware Code Size (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Ralim/ts100"},"TS100 & TS80 Firmware")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/quarkslab/binbloom"},"binbloom")," - Raw binary firmware analysis software."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/fkie-cad/FACT_core"},"Firmware Analysis and Comparison Tool (FACT)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/arendst/tasmota/"},"Tasmota")," - Cloud-free open source smart home firmware for ESP8266 devices. (",(0,i.kt)("a",{parentName:"li",href:"https://tasmota.github.io/docs/About/"},"Docs"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24785175"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cybergibbons.com/hardware-hacking/recovering-firmware-through-u-boot/"},"Recovering Firmware Through U-boot (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://marlinfw.org/"},"Marlin Firmware")," - Fused Deposition Engine. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/MarlinFirmware/Configurations"},"Configurations for Marlin Firmware"),")")))}f.isMDXComponent=!0}}]);