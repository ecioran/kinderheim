"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[55461],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var i=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},s=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),h=p(a),u=r,k=h["".concat(l,".").concat(u)]||h[u]||c[u]||o;return a?i.createElement(k,n(n({ref:t},s),{},{components:a})):i.createElement(k,n({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,n=new Array(o);n[0]=h;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m.mdxType="string"==typeof e?e:r,n[1]=m;for(var p=2;p<o;p++)n[p]=a[p];return i.createElement.apply(null,n)}return i.createElement.apply(null,a)}h.displayName="MDXCreateElement"},66987:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return c}});var i=a(87462),r=a(63366),o=(a(67294),a(3905)),n=["components"],m={},l="Common Lisp",p={unversionedId:"programming-languages/lisp/common-lisp",id:"programming-languages/lisp/common-lisp",title:"Common Lisp",description:"Links",source:"@site/docs/programming-languages/lisp/common-lisp.md",sourceDirName:"programming-languages/lisp",slug:"/programming-languages/lisp/common-lisp",permalink:"/kinderheim/programming-languages/lisp/common-lisp",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/lisp/common-lisp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lisp",permalink:"/kinderheim/programming-languages/lisp/"},next:{title:"Janet",permalink:"/kinderheim/programming-languages/lisp/janet"}},s={},c=[{value:"Links",id:"links",level:2}],h={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,n);return(0,o.kt)("wrapper",(0,i.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"common-lisp"},"Common Lisp"),(0,o.kt)("h2",{id:"links"},"Links"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stevelosh.com/blog/2018/08/a-road-to-common-lisp/"},"A Road to Common Lisp (2018)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=mbdXeRBbgDM"},"C. Schafmeister \u201cLessons Learned Implementing Common Lisp with LLVM\u201d (2018)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/robert-strandh/SICL"},"SICL")," - Fresh implementation of Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/lisp-tips/lisp-tips"},"Common Lisp tips")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/eratosthenesia/lispc"},"LISP/c (Lispy)")," - Lisp(ish) to C Converter (designed for CLISP)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://funcall.blogspot.com/2020/01/cons-cells-vs-linked-lists.html"},"Cons cells vs. Linked Lists (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.paulgraham.com/acl.html?viewfullsite=1"},"ANSI Common Lisp")," - Combines an introduction to Lisp programming, and a convenient, up-to-date reference manual for ANSI Common Lisp (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22083507"},"HN"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://ambrevar.xyz/modern-common-lisp/"},"Modern, functional Common Lisp: Myths and tips (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22412148"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://sulami.github.io/posts/common-lisp-restarts/"},"Restarts in Common Lisp (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22747932"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cxxxr/valtan"},"Valtan")," - Common Lisp to JavaScript compiler. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22769346"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://leanpub.com/lovinglisp"},"Loving Common Lisp, or the Savvy Programmer's Secret Weapon")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mark-watson/loving-common-lisp"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/rongarret/ergolib"},"ergolib")," - Library designed to make programming in Common Lisp easier."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.flownet.com/ron/packages.pdf"},"Complete Idiot\u2019s Guide to Common Lisp Packages (2003)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/TomLisankie/Learning-Lisp"},"Learn Common Lisp in one month intervals")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://common-lisp.net/project/parenscript/"},"Parenscript")," - Translator from an extended subset of Common Lisp to JavaScript."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/slime/slime"},"Slime")," - Superior Lisp Interaction Mode for Emacs."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marcoheisig/Petalisp"},"Petalisp")," - Elegant High Performance Computing."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://google.github.io/styleguide/lispguide.xml"},"Google Common Lisp Style Guide")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23761346"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/komi1230/kai"},"Kai")," - High-level plotter library for Common Lisp. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23757545"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lispcookbook.github.io/cl-cookbook/gui.html"},"Common Lisp GUI Toolkits")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.cs.cmu.edu/~dst/LispBook/book.pdf"},"Common Lisp: A Gentle Introduction to Symbolic Computation")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.apress.com/us/book/9781484261330"},"The Common Lisp Condition System Book (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23843525"},"HN"),") (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24867548"},"HN 2"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://cs.gmu.edu/~sean/lisp/LispTutorial.html"},"Lisp Quickstart")," (",(0,o.kt)("a",{parentName:"li",href:"https://lobste.rs/s/gb566t/lisp_quickstart"},"Lobsters"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Wa81OJnlsoI"},"Creating a Common Lisp implementation (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24276881"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/clasp-developers/clasp"},"Clasp")," - Common Lisp implementation that seamlessly interoperates with C++ libraries and programs using LLVM for compilation to native code. (",(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=8X69_42Mj-g"},"Clasp: Common Lisp using LLVM and C++ for Molecular Metaprogramming (2015)"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/takagi/cl-cuda"},"Cl-Cuda")," - Library to use NVIDIA CUDA in Common Lisp programs."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://common-lisp.net/project/iterate/"},"iterate")," - Extensible iteration construct for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.hexstreamsoft.com/"},"HexstreamSoft")," - Public Domain Common Lisp R&D."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://gist.github.com/digikar99/a1925ad3249a431c9eecf09af2fdef8a"},"Opinionated Common Lisp Resources 2020")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/CodyReichert/awesome-cl"},"Awesome Common Lisp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nyxt.atlas.engineer/article/continuous-testing-and-packaging.org"},"Modern CI testing and packaging for Common Lisp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/jrm-code-project/LISP-Machine"},"Archive of Lisp Machine")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25147970"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/littledivy/lisp-ast"},"Common LISP Parser & AST Viewer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://tailrecursion.com/~alan/Lisp/CommonLispIteration.html"},"Common Lisp Iteration (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/joaotavora/sly"},"SLY")," - Sylvester the Cat's Common Lisp IDE."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ashok-khanna/common-lisp-by-example/blob/main/Common%20Lisp%20by%20Example.pdf"},"Common Lisp by Example")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/susam/emacs4cl"},"Emacs For Common Lisp")," - Tiny ~/.emacs for Common Lisp programming explained line-by-line."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://portacle.github.io/"},"Portacle")," - Portable Common Lisp Development Environment."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/makuto/cakelisp"},"Cakelisp")," - Performance-oriented Lisp-like language where I can have my cake, and eat it too. The goal is a metaprogrammable, hot-reloadable, non-garbage-collected language ideal for high performance, iteratively-developed programs (especially games)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/guicho271828/trivia"},"Trivia")," - Pattern Matcher Compatible with Optima."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/damelang/nile"},"Nile")," - Programming Language for Declarative Stream Processing in Media Applications."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/brown/protobuf"},"Common Lisp implementation of Google's protocol buffers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://malisper.me/category/debugging-common-lisp/"},"Debugging Lisp (2015)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25661701"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/fiddlerwoaroof/data-lens"},"data-lens")," - Functional utilities for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/fukamachi/docker-cl-example/"},"docker-cl-example")," - Example projects to run/develop Common Lisp web application on Docker container."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/rabbibotton/clog"},"CLOG")," - Common Lisp Omnificent GUI."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://lisper.ru/"},"Lisper.ru")," - Russian Common Lisp Community. (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/archimag/rulisp"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lisp-journey.gitlab.io/blog/state-of-the-common-lisp-ecosystem-2020/"},"State of the Common Lisp ecosystem, 2020")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26065511"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stylewarning/coalton"},"Coalton")," - Dialect of ML embedded in Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stevelosh.com/blog/2021/03/small-common-lisp-cli-programs/"},"Writing Small CLI Programs in Common Lisp (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26493588"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/slyrus/opticl"},"opticl")," - Image processing library for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://random-state.net/features-of-common-lisp.html"},"Features of Common Lisp (2008)")," (",(0,o.kt)("a",{parentName:"li",href:"https://lobste.rs/s/qqelbo/features_common_lisp_2008"},"Lobsters"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lisp-journey.gitlab.io/pythonvslisp/"},"Python vs Common Lisp, workflow and ecosystem (2019)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27011942"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koji-kojiro/cl-repl"},"CL-REPL")," - Full-featured REPL implementation designed to work with Roswell."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://sabracrolleton.github.io/testing-framework"},"Comparison of Common Lisp Testing Frameworks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/jscl-project/jscl"},"JSCL")," - Common Lisp to JavaScript compiler."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/borodust/cl-bodge"},"cl-bodge")," - Feature-rich game framework for Common Lisp. (",(0,o.kt)("a",{parentName:"li",href:"https://borodust.org/projects/cl-bodge/"},"Web"),") (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27621014"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/sjl/temperance"},"Temperance")," - Logic programming library for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://notes.eatonphil.com/practical-common-lisp-on-the-jvm.html"},"Practical? Common Lisp on the JVM: A quick intro to ABCL for modern web apps (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://weitz.de/cl-recipes/"},"Common Lisp Recipes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.apress.com/gp/book/9781484261330"},"The Common Lisp Condition System - Beyond Exception Handling with Control Flow Mechanisms (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coalton-lang/coalton"},"Coalton")," - Efficient, statically typed functional programming language that supercharges Common Lisp. (",(0,o.kt)("a",{parentName:"li",href:"https://coalton-lang.github.io/20211010-introducing-coalton/"},"Article"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://susam.in/maze/building-common-lisp-executables.html"},"Building Common Lisp Executables (2018)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://renato.athaydes.com/posts/revenge_of_lisp.html"},"Learning Common Lisp to beat Java and Rust on a phone encoding problem")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28721403"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Shirakumo/radiance"},"Radiance")," - Common Lisp web application environment. (",(0,o.kt)("a",{parentName:"li",href:"https://shirakumo.github.io/radiance/"},"Web"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://renato.athaydes.com/posts/revenge_of_lisp-part-2.html"},"Optimising Common Lisp to try and beat Java and Rust on phone encoding 2/2 (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28825307"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/edicl/drakma"},"DRAKMA")," - HTTP client written in Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lisp-journey.gitlab.io/blog/lisp-interview-kina/"},"Kina Knowledge, using Common Lisp extensively in their document processing stack (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28961987"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/roswell/roswell"},"Roswell")," - Common Lisp environment setup Utility."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://write.as/loke/common-lisp-code-optimisation"},"Common Lisp code optimisation (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29140521"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/fukamachi/dexador"},"Dexador")," - Fast HTTP client for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://blog.matthewdmiller.net/learn-common-lisp-by-example-gtk-gui-with-sbcl"},"Learn Common Lisp by Example: GTK GUI with SBCL (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/vydd/sketch"},"Sketch")," - Common Lisp environment for the creation of electronic art, visual design."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://cdagostino.io/posts/2018-03-28-one-year-common-lisp-developer-part-1-the-good.html"},"Lessons learned after working one year as a Common Lisp Developer (2018)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29494255"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://coalton-lang.github.io/20211212-typeclasses/"},"One Reason Typeclasses Are Useful (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29532917"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cbaggers/cepl"},"CEPL")," - Lispy and REPL-friendly Common Lisp library for working with OpenGL. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29535450"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/orthecreedence/wookie"},"Wookie")," - Asynchronous HTTP server written in common lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://blog.matthewdmiller.net/learn-common-lisp-by-example-qt-gui-with-eql5"},"Learn Common Lisp by Example: Qt GUI with EQL5 (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marcoheisig/cl4py"},"cl4py")," - Common Lisp for Python."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marcoheisig/fast-generic-functions"},"Fast Generic Functions")," - Seal your generic functions for an extra boost in performance."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marcoheisig/sb-simd"},"sb-simd")," - Convenient SIMD interface for SBCL."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marcoheisig/cl-mpi"},"cl-mpi")," - MPI bindings for Common Lisp with many useful extras."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://blog.veitheller.de/Building_Setf.html"},"Building Setf (2022)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.grammarly.com/blog/engineering/running-lisp-in-production/"},"Running Lisp in Production (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30172641"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/s-expressionists/Cleavir"},"Cleavir")," - Implementation-independent framework for creating Common Lisp compilers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cffi/cffi"},"CFFI")," - Common Foreign Function Interface, purports to be a portable FFI for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/s-expressionists/Eclector"},"Eclector")," - Portable and extensible Common Lisp Reader."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ruricolist/cloture"},"Cloture")," - Clojure in Common Lisp. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31655574"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cl21/cl21"},"CL21")," - Common Lisp in the 21st Century."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Harleqin/arrows"},"Arrows")," - Implements threading macros, inspired by Clojure."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mdbergmann/cl-gserver"},"cl-gserver")," - Actor framework featuring actors and agents for easy access to state and asynchronous operations."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/pkhuong/Xecto"},"Xecto")," - Regular array parallelism in CL."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://sabracrolleton.github.io/logging-comparison.html"},"Comparison of Common Lisp Logging Libraries")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ashok-khanna/lisp-notes"},"Common Lisp Cheat Sheet")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/akapav/js"},"CL-JavaScript")," - JavaScript compiler for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Shirakumo/alloy"},"Alloy")," - User interface toolkit."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://mstmetent.blogspot.com/2022/04/using-lisp-libraries-from-other.html"},"Using SBCL Common Lisp as a Dynamic Library (2022)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31054796"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=XFc513MJjos"},"How to create a new Common Lisp project (with project generator) (2022)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lisp-journey.gitlab.io/resources/"},"Common Lisp Resources (2022)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31120359"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/rabbibotton/clog/blob/main/LEARN.md"},"Tutorial Series to learn Common Lisp quickly")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31178737"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Shirakumo/trial"},"Trial")," - Game engine written in Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/justinmeiners/srcweave"},"srcweave")," - Literate programming system for any language."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/lem-project/lem"},"Lem")," - Common Lisp editor/IDE with high expansibility."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nptcl/npt"},"Npt")," - ANSI Common Lisp Programming Language."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/lisp/comments/uqgeit/common_lisp_intermediate_book_recommendation/"},"Common Lisp intermediate book recommendation (2022)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/sjl/cl-losh"},"cl-losh")," - Common Lisp utilities I use a lot."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ruricolist/serapeum"},"Serapeum")," - Conservative library of Common Lisp utilities."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://alexandria.common-lisp.dev/"},"Alexandria")," - Reduce duplication of effort and improve portability of Common Lisp code."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ruricolist/overlord"},"Overlord")," - Build system in Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/orthecreedence/cl-async"},"cl-async")," - Asynchronous IO library for Common Lisp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/fukamachi/woo"},"Woo")," - Fast non-blocking HTTP server on top of libev. Written in Common Lisp.")))}u.isMDXComponent=!0}}]);