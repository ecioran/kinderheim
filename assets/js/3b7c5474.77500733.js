"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[2784],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),s=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),h=i,f=u["".concat(l,".").concat(h)]||u[h]||m[h]||n;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var s=2;s<n;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},74164:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return m}});var a=r(87462),i=r(63366),n=(r(67294),r(3905)),o=["components"],p={title:"Remote Procedure Calls"},l="[Remote Procedure Calls](https://en.wikipedia.org/wiki/Remote_procedure_call)",s={unversionedId:"distributed-systems/rpcs/rpcs",id:"distributed-systems/rpcs/rpcs",title:"Remote Procedure Calls",description:"Links",source:"@site/docs/distributed-systems/rpcs/rpcs.md",sourceDirName:"distributed-systems/rpcs",slug:"/distributed-systems/rpcs/",permalink:"/kinderheim/distributed-systems/rpcs/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/distributed-systems/rpcs/rpcs.md",tags:[],version:"current",frontMatter:{title:"Remote Procedure Calls"},sidebar:"tutorialSidebar",previous:{title:"ZeroMQ",permalink:"/kinderheim/distributed-systems/message-queue/zeromq"},next:{title:"gRPC",permalink:"/kinderheim/distributed-systems/rpcs/grpc"}},c={},m=[{value:"Links",id:"links",level:2}],u={toc:m};function h(e){var t=e.components,r=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"remote-procedure-calls"},(0,n.kt)("a",{parentName:"h1",href:"https://en.wikipedia.org/wiki/Remote_procedure_call"},"Remote Procedure Calls")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/twitchtv/twirp"},"Twirp")," - Simple RPC framework with protobuf service definitions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.acolyer.org/2019/05/20/rpcvalet/"},"RPCValet: NI-driven tail-aware balancing of \xb5s-scale RPCs (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/google/tarpc"},"tarpc")," - RPC framework for Rust with a focus on ease of use."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ankur-anand/simple-go-rpc"},"Simple GoRpc")," - RPC explained by writing simple RPC framework in 300 lines of pure Golang."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/facebook/fbthrift"},"Facebook Thrift")," - Serialization and RPC framework for service communication. (",(0,n.kt)("a",{parentName:"li",href:"https://thrift.apache.org/static/files/thrift-20070401.pdf"},"Paper"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://diwakergupta.github.io/thrift-missing-guide/"},"Thrift: The Missing Guide")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/hsthrift"},"Haskell Thrift Compiler")," - Implementation of the Thrift spec that generates code in Haskell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nanomsg/nng"},"NNG: Lightweight Messaging Library")," - Lightweight, broker-less library, offering a simple API to solve common recurring messaging problems, such as publish/subscribe, RPC-style request/reply, or service discovery."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://funcall.blogspot.com/2020/01/remotely-like-procedure-call.html"},"Remotely like a procedure call (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/relab/gorums"},"gorums")," - Framework for simplifying the design and implementation of fault-tolerant quorum-based protocols."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hashicorp/go-plugin"},"Go Plugin System over RPC")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/discord/loqui"},"Loqui")," - Transport that implements a very simple framing protocol over a raw socket."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/google/go-replayers"},"Go Tools for Recording and Replaying RPCs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/apex/rpc"},"RPC")," - Simple RPC style APIs with generated clients & servers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/twitter/rpc-perf"},"rpc-perf")," - Tool for benchmarking RPC services."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.cloudflare.com/announcing-grpc/"},"Cloudflare support for gRPC (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/manifold/qtalk"},"qtalk")," - Minimal set of packages for several languages that achieve an opinionated but expressive way for programmers to get their programs to interact."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/aldebaran/libqi"},"libqi")," - NAOqi core framework. Middle-ware framework that provides RPC, type-erasure, cross-language interoperability, OS abstractions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/smfrpc/smf"},"smf")," - RPC system and code generation like gRPC, Cap n Proto, Apache Thrift, etc, but designed for microsecond tail latency."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://capnproto.org/"},"Cap'n Proto")," - Insanely fast data interchange format and capability-based RPC system. Think JSON, except binary. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/capnproto/capnproto"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/deeprjs/deepr"},"Deepr")," - Specification for invoking remote methods, deeply."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/cockroachdb/rpc-bench"},"rpc-bench")," - Benchmarking various RPC implementations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://alexanderell.is/posts/rpc-from-scratch/"},"Writing an RPC From Scratch (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/yarpc/yarpc-go"},"yarpc")," - Message passing platform for Go."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/webrpc/webrpc"},"webrpc")," - Schema-driven approach to writing backend services for modern Web apps and networks."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/apache/dubbo"},"Apache Dubbo")," - High-performance, Java-based open-source RPC framework."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://open-rpc.org/"},"OpenRPC")," - Standard, programming language-agnostic interface description for JSON-RPC 2.0 APIs. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/open-rpc"},"GitHub"),") (",(0,n.kt)("a",{parentName:"li",href:"https://spec.open-rpc.org/"},"Spec"),") (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/open-rpc/spec"},"Spec Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tchannel.readthedocs.io/en/latest/"},"TChannel")," - Network multiplexing and framing protocol for RPC. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/uber/tchannel"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/uber/tchannel-go"},"TChannel Go")," - Go implementation of a multiplexing and framing protocol for RPC calls."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tomusdrw/jsonrpc-proxy"},"jsonrpc-proxy")," - Generic and extensible JSON-RPC proxy, supporting cache and load-balancing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/deno-libs/rpc"},"rpc")," - JSONRPC server implementation with native WebSocket, based on jsonrpc."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.yale.edu/homes/soule/pubs/hotnets2021.pdf"},"Don\u2019t Let RPCs Constrain Your API (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/danielbittman/status/1447997859215945729"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ronaksoft/rony"},"Rony")," - Fast and Scalable RPC Framework. In Go."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zeroc-ice/ice"},"Ice")," - Comprehensive RPC framework with support for C++, C#, Java, JavaScript, Python and more."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/open-rpc/generator"},"OpenRPC Generator")," - Multi-Component & Multi-Language Generators for OpenRPC."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mirage/capnp-rpc"},"OCaml Cap'n Proto RPC library")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/open-rpc/typings"},"OpenRPC Typings")," - Tool to produce language-specific typings given an OpenRPC document."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/harmony-development/hrpc"},"hRPC")," - Simple RPC system using protocol buffers over HTTP and WebSockets."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/harmony-development/hrpc-rs"},"hrpc-rs")," - Implementation of hRPC in Rust."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Just4Ease/axonrpc"},"Axon RPC")," - RPC over event streams. Can execute RPC calls like gRPC but this time, over event streams."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/znx3p0/srpc"},"SRPC")," - Simple RPC system based on top of Canary."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.carlosgaldino.com/a-critique-of-the-remote-procedure-call-paradigm-30-years-later.html"},"A Critique of the Remote Procedure Call Paradigm - 30 years later")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sachinraja/trpc-playground"},"tRPC Playground")," - Playground for running tRPC queries in the browser."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cs.vu.nl/~ast/Publications/Papers/euteco-1988.pdf"},"A Critique of the Remote Procedure Call Paradigm (1988)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30976140"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/henrylee2cn/erpc"},"eRPC")," - Efficient, extensible and easy-to-use RPC framework. Suitable for RPC, Microservice, Peer-to-Peer, IM, Game and other fields."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/digital-loukoum/gravity"},"Gravity")," - Full-stack RPC framework that provides end-to-end typesafe API with an enjoyable developer experience."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/trevyn/turbocharger"},"Turbocharger")," - Autogenerated async RPC bindings that instantly connect a JS frontend to a Rust backend service via WebSockets and WASM."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/karimra/gnmic"},"gnmic")," - gNMI CLI client that provides full support for Capabilities, Get, Set and Subscribe RPCs with collector capabilities."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/paralin/starpc"},"starpc")," - Streaming Protobuf RPC services over any two-way message channel."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tatethurston/TwirpScript"},"TwirpScript")," - Protobuf RPC framework for JavaScript and TypeScript.")))}h.isMDXComponent=!0}}]);