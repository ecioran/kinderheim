"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[3028],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return u}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var m=n.createContext({}),p=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},s=function(t){var e=p(t.components);return n.createElement(m.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},h=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,m=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),h=p(a),u=r,g=h["".concat(m,".").concat(u)]||h[u]||c[u]||i;return a?n.createElement(g,o(o({ref:e},s),{},{components:a})):n.createElement(g,o({ref:e},s))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=t,l.mdxType="string"==typeof t?t:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},18660:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),o=["components"],l={},m="Functional programming",p={unversionedId:"programming/functional-programming/functional-programming",id:"programming/functional-programming/functional-programming",title:"Functional programming",description:"Effekt seems like a neat language. The Dao of Functional Programming is a nice read.",source:"@site/docs/programming/functional-programming/functional-programming.md",sourceDirName:"programming/functional-programming",slug:"/programming/functional-programming/",permalink:"/kinderheim/programming/functional-programming/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming/functional-programming/functional-programming.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Encoding",permalink:"/kinderheim/programming/encoding"},next:{title:"Algebraic effects",permalink:"/kinderheim/programming/functional-programming/algebraic-effects"}},s={},c=[{value:"Links",id:"links",level:2},{value:"Images",id:"images",level:2}],h={toc:c};function u(t){var e=t.components,a=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"functional-programming"},"Functional programming"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/effekt-lang/effekt"},"Effekt")," seems like a neat language. ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/BartoszMilewski/Publications/blob/master/TheDaoOfFP/DaoFP.pdf"},"The Dao of Functional Programming")," is a nice read."),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://themattchan.com/blog/fp-resources.html"},"List of FP Resources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://serokell.io/blog/introduction-to-functional-programming"},"Introduction to Functional Programming (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://jozefg.bitbucket.io/posts/2013-09-08-teens-and-fp.html"},"Teens and Functional Programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://byorgey.wordpress.com/2018/05/06/conversations-with-a-six-year-old-on-functional-programming/"},"Conversations with a six-year-old on functional programming")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22943749"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/allenleein/brains/projects/9?fullscreen=true"},"FP Resources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://speakerdeck.com/staltz/oop-is-dead-only-if-fp-is-dead?slide=1"},"OOS is dead only if FP is dead")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mietek/total-functional-programming"},"Total functional programming (ESFP) literature")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=GhERMBT7u4w"},"Having an Effect by Oleg Kiselyov")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://blog.reverberate.org/2015/08/monads-demystified.html"},"Monads Demystified (2015)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://conal.net/blog/posts/can-functional-programming-be-liberated-from-the-von-neumann-paradigm"},"Can functional programming be liberated from the von Neumann paradigm?")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=18692470"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://dlicata.web.wesleyan.edu/teaching/fp-s19/"},"COMP 212: Functional Programming Course (2019)")," - Purpose of this course is to introduce the theory and practice of functional programming (FP)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://wiki.haskell.org/Research_papers/Functional_pearls"},"Research papers / Functional pearls")," - Functional pearls are elegant, instructive examples of functional programming."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/yallop/effects-bibliography"},"Effects bibliography")," - Collaborative bibliography of work related to the theory and practice of computational effects."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jeppes/flerps-functional"},"Flerp\u2019s Guide to Functional Programming")," - Collection of the resources I've found most useful when exploring the world of functional programming."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=JZPXzJ5tp9w"},"George Wilson - The Extended Functor Family (2016)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=DdR9q69se-I"},"Functional Programming for the Long Haul by Michael Snoyman (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.staff.ncl.ac.uk/andrey.mokhov/selective-functors.pdf"},"Selective Applicative Functors")," - Declare Your Effects Statically, Select Which to Execute Dynamically."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.kubukoz.com/what-makes-a-function-pure"},"What makes a function pure? (2018)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/julien-truffaut/fp-foundation"},"Foundation of Functional Programming Course (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lispcast.com/theory-functional-programming-0003/"},"Theory of functional programming with Eric Normand (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/qfpl/applied-fp-course"},"Applied Functional Programming Course")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stepchowfun/effects"},"Effects")," - Brief exploration of the various approaches to modeling side effects in a purely functional programming language."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/graninas/Functional-Design-and-Architecture"},'Code and materials for book "Functional Design and Architecture" (2019)')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.gasi.ch/blog/practical-functional-programming"},"Practical Functional Programming: Prelude (2018)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/robrix/Postmodern-Programming/blob/master/Postmodern%20Programming.md"},"Postmodern Programming")," - Talk about declarative programming in and around imperative code: what, why, and how."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/winitzki/sofp/blob/master/sofp-src/sofp.pdf"},"The Science of Functional Programming book")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21093129"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/fp-tower/foundation"},"Foundation of functional programming course")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://cs.wheaton.edu/~tvandrun/dmfp/"},"Discrete Mathematics and Functional Programming book (2012)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/williamdemeo/TypeFunc"},"TypeFunc")," - Resources for type theory, functional programming, etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tonymorris/fp-course"},"Functional Programming Course")," - Structured according to a linear progression and uses the Haskell programming language to learn programming concepts pertaining to functional programming."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/isovector/structure-and-decomposition-of-computer-programs"},"Structure and Decomposition of Computer Programs book (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://confengine.com/functional-conf-2019/speaker/interview/edward-kmett"},"Speaker Interview with Edward Kmett (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=QyJZzq0v7Z4"},"Why Isn't Functional Programming the Norm? \u2013 Richard Feldman (2019)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21280429"},"HN"),") (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/dbsvr5/why_isn_t_functional_programming_norm"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cs.cmu.edu/~rwh/theses/okasaki.pdf"},"Purely Functional Data Structures by Chris Okasaki (1996)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/tianyicui/pfds-ocaml"},"OCaml Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://atypeofprogramming.com/"},"A Type of Programming by Renzo Carbonara")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lispcast.com/3-examples-of-algebraic-thinking/"},"3 examples of algebraic thinking (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.manning.com/books/functional-design-and-architecture"},"Functional Design and Architecture book (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/haskell/comments/illft7/the_book_functional_design_and_architecture_is/"},"Reddit"),") (",(0,i.kt)("a",{parentName:"li",href:"https://graninas.com/functional-design-and-architecture-book/"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=sFzuu676pFs"},"Sara Fransson: Functional lenses through a practical lens (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://jrsinclair.com/articles/2019/algebraic-structures-what-i-wish-someone-had-explained-about-functional-programming/"},"Algebraic structures: things i wish someone had explained about functional programming (2019)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21440932"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/melsman/mlkit"},"MLKit")," - Standard ML Compiler and Toolkit."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/llelf/icfp2019-papers"},"ICFP 2019 preprints/papers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hemanth/functional-programming-jargon"},"Functional Programming Jargon")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://degoes.net/articles/fp-glossary"},"A Glossary of Functional Programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=E8I19uA-wGY"},"Functional programming design patterns by Scott Wlaschin (2014)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cambridge.org/core/services/aop-cambridge-core/content/view/F66CECFC31BDB7D2790F39DE25426EEA/S0956796819000200a.pdf/phd_abstracts.pdf"},"PhD Abstracts for functional programming (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=DJyhWAwmGqE"},"Luka Jacobowitz\u2014Monoids, Monoids, Monoids (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/1910.11717"},"Selective Lambda Lifting (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/sellout/recursion-scheme-talk"},"Recursion Scheme Talks")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Up7LcbGZFuo"},"Domain Modeling Made Functional - Scott Wlaschin (2017)")," (",(0,i.kt)("a",{parentName:"li",href:"https://pragprog.com/titles/swdddf/domain-modeling-made-functional/"},"Book"),") (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/chiroptical/domain-modeling-made-functional"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/research/uploads/prod/1987/01/slpj-book-1987-r90.pdf"},"The Implementation of Functional Programming Languages book (1987)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mmenestret/fp-resources"},"Functional programming great resources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://oxij.org/thesis/PhD/"},"On the Expressive Power of Indexed Applicative and Monadic Structures (2018)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.cs.ox.ac.uk/jeremy.gibbons/publications/fp4dsls.pdf"},"Functional Programming for Domain-Specific Languages")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf"},"Monads for functional programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://homepages.inf.ed.ac.uk/slindley/papers/ehgc.pdf"},"Effect Handlers via Generalised Continuations (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://np.reddit.com/r/scala/comments/en89or/when_should_i_use_cats_scalaz_instead_of_standard/fdxer1k/"},"The general value of typed functional programming lies in leaving no edge cases")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22403625"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.mgechev.com/2017/08/05/typed-lambda-calculus-create-type-checker-transpiler-compiler-javascript/"},"Developing Statically Typed Programming Language (2017)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21738891"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://math.andrej.com/2019/10/28/runners-in-action/"},"Runners in action (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cl.cam.ac.uk/~nk480/seminaive-datafun.pdf"},"Seminai\u0308ve Evaluation for a Higher-Order Functional Language")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1908.05647.pdf"},"Counting Immutable Beans (2020)")," - Reference Counting Optimized for Purely Functional Programming."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/hf3y19/what_s_best_functional_language_learn"},"What's the best functional language to learn over the next 30 days? (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jdegoes/functional-design"},"Exercises for the course 'Functional Design by John A. De Goes'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.christianfscott.com/wtf-is-a-monad/"},'Breaking down "A monad is just a monoid in the category of endofunctors"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://chalmersfp.org/"},"Chalmers Online Functional Programming Seminar Series")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23078173"},"Ask HN: How to be fluent in functional language speak? (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=ZuNMo136QqI"},"A Quick Look at Impredicativity (Simon Peyton Jones) (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://doisinkidney.com/pdfs/purely-functional-data-structures-slides.pdf"},"Purely Functional Data Structures and Monoids (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://functional.blog/2020/05/25/designing-a-functional-programming-language-yatta/"},"Designing a functional programming language: Yatta (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23307699"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stedolan/malfunction"},"Malfunction")," - High-performance, low-level untyped program representation, designed as a target for compilers of functional programming languages."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/putting.pdf"},"Practical type inference for arbitrary-rank types (2007)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.randomhacks.net/2007/03/12/monads-in-15-minutes/"},"Monads in 15 minutes: Backtracking and Maybe (2007)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://michaelfeathers.silvrback.com/functional-code-is-honest-code"},"Functional Code is Honest Code (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/lwopua/functional_code_is_honest_code"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/conal/talk-2014-lambdajam-denotational-design"},"Talk: Denotational Design: from meanings to programs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.infoq.com/presentations/functional-programming-parallelism/"},"Functional Programming for Array-Based Parallelism (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23536190"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.cs.nott.ac.uk/~pszgmh/bib.html"},"Graham Hutton: Publications")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://qfpl.io/"},"Queensland Functional Programming Lab")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/qfpl"},"GitHub"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/dewey92/typed-fp-good-reads"},"List of useful resources to learn typed FP")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://twitchard.github.io/posts/2020-07-26-monads.html"},"Monads and Mom (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/hkz1kh/monads_mom"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://pitayan.com/posts/redux-fp-design/"},"Learn Functional Programming Design from Redux (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24046631"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/research/wp-content/uploads/1993/01/imperative.pdf"},"Imperative functional programming (1992)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://ris.utwente.nl/ws/portalfiles/portal/6142049/meijer91functional.pdf"},"Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire (1991)")," (",(0,i.kt)("a",{parentName:"li",href:"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.125"},"Web"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.boringcactus.com/2020/07/18/monads-without-the-bullshit.html"},"Monads, Explained Without Bullshit (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/haskell/comments/ik9yqi/is_haskell_good_for_learning_functional/"},"Is Haskell good for learning functional programming? (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://manzanit0.github.io/functional%20programming/2019/08/23/functional-lessons.html"},"Functional lessons learnt (2019)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://algebradriven.design/"},"Algebra-Driven Design book")," - Elegant Software from Simple Building Blocks. (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/xs8vlo/algebra_driven_design"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Pauan/programming-notes/blob/master/Signals.rst"},"What is functional reactive programming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Pauan/programming-notes/blob/master/Boxes.rst"},"Implement Box functional data structure")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bobatkey/CS316-2020"},"CS316 \u201cFunctional Programming\u201d course (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://garlandus.co/OfGroupsAndMonads.html"},"Of Groups and Monads")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/zzcjr9/groups_monads"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.compositional.fm/"},"Compositional Podcast")," - All about functional programming in practice."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://discourse.elm-lang.org/t/understanding-combinators/6425"},"Understanding Combinators using Elm")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://journal.infinitenegativeutility.com/objects-in-functional-languages"},"Objects in Functional Languages")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/wa5vbs/objects_functional_languages"},"Lobsters"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25258354"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://functional.christmas/"},"Functional Christmas")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/thma/LtuPatternFactory"},"Lambda the Ultimate Pattern Factory")," - FP, Haskell, Typeclassopedia vs Software Design Patterns."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://thma.github.io/posts/2020-12-20-reconciling-fp-and-oop-concepts.html"},"Reconciling concepts from FP and OOP (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://leanpub.com/book-of-monads/"},"Book of Monads")," - Provides a journey from the very first concepts, to the myriad of monads available to programmers, down to the categorical foundations. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/JonathanLorimer/book-of-monads"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.cs.nott.ac.uk/~pszgmh/123.pdf"},"Functional Pearl: It\u2019s Easy As 1,2,3 (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dl.acm.org/doi/10.1145/2887747.2804310"},"Functional pearl: getting a quick fix on comonads (2015)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kwf/GQFC"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kongware/scriptum"},"Fool's scriptum on functional programming")," - Course about purely functional programming in JavaScript based on the scriptum library."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/thalerjonathan/phd"},"PhD research notes on using pure functional programming for implementing Agent-Based Simulations (ABS)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://david-peter.de/cube-composer/"},"Cube Composer")," - Learn Functional Programming Visually. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/sharkdp/cube-composer"},"Code"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26131075"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/silky/myth"},"Myth")," - Type-and-example-driven program synthesis for functional programming languages."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://mpickering.github.io/papers/profunctor-options.pdf"},"Profunctor Optics: Modular Data Accessors (2017)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=9qqyd7nQqnE"},"OCaml, Erlang, and Functional Programming with Leandro Ostera (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fpchat-invite.herokuapp.com/"},"Functional Programming Slack")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://funcall.blogspot.com/2021/04/can-continuation-passing-style-code.html"},"Can continuation passing style code perform well? (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26800745"},"HN"),") (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/ossum2/can_continuation_passing_style_code"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/macrocephalopod/status/1366715423807397889"},"Algebraic Types' Series Expansions (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/research/wp-content/uploads/1992/01/student.pdf"},"Implementing Functional Languages: Tutorial by Simon Peyton Jones and David Lester (2000)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/themattchan/core"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=9QlhkQl0DSw"},"Domain Modeling Made Functional with Scott Wlaschin (2020)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27408440"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.jerf.org/iri/post/2958"},"Functors and Monads for People Who Have Read Too Many \u201cTutorials\u201d (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27637779"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://mvanier.livejournal.com/2897.html"},"The Y Combinator (Slight Return)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27673177"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bharathi.xyz/pl/the-mysterious-y-combinator.html"},"The mysterious Y combinator (2020)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://icfp21.sigplan.org/track/icfp-2021-papers"},"ICFP 2021 - Research Papers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2107.07301"},"A Functional Programming Language with Versions (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cscalfani.medium.com/why-is-learning-functional-programming-so-damned-hard-bfd00202a7d1"},"Why is learning functional programming so damned hard? (2019)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28188822"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cuddly-octo-palm-tree.com/posts/2021-03-07-review-whyfp/"},"Review: Why FP Matters (Hughes) (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cuddly-octo-palm-tree.com/tags/monad-tutorial/"},"Monad Tutorial")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://sambernheim.com/#/blog/monads-are-monoids-in-the-category-of-endofunctors"},"Monads are monoids in the category of endofunctors")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28466676"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://probablydance.com/2016/02/27/functional-programming-is-not-popular-because-it-is-weird/"},"Functional programming is not popular because it is weird (2016)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28513703"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://sigkill.dk/writings/par/lhomo.html"},"List Homomorphisms and Parallelism")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28520476"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://systemfw.org/posts/programs-as-values-I.html"},"Programs as Values, Part I : Intro & Compositionality")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://apfelmus.nfshost.com/articles/random-permutations.html"},"Random Permutations and Sorting")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.brunogavranovic.com/posts/2021-10-13-meta-learning-and-monads.html"},"Meta-learning and Monads (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/bgavran3/status/1448426672622129154"},"Tweet"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://functional-algorithms-verified.org/"},"Functional Algorithms, Verified (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28884229"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://sdowney.org/index.php/2021/10/03/stdexecution-sender-receiver-and-the-continuation-monad/"},"Std: Execution, Sender/Receiver, and the Continuation Monad (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28894851"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jozefg/pcf"},"PCF")," - Tiny typed, higher-order functional language. Compiled to C."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html"},"Functors, Applicatives, and Monads in Pictures (2013)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28916247"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blogs.ncl.ac.uk/andreymokhov/united-monoids/"},"United Monoids (2018)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/snowleopard/united"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/"},"Seemingly impossible functional programs (2007)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29033003"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dl.acm.org/doi/10.1145/1244381.1244391"},"Distillation: extracting the essence of programs (2007)")," - Transformation algorithm called distillation which can automatically transform higher-order functional programs into equivalent tail-recursive programs. (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/poitin/Distiller"},"Code"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cambridge.org/core/journals/journal-of-functional-programming/article/on-the-correctness-of-monadic-backward-induction/0F71FFE6AE1222E77F52341C695E366A"},"On the correctness of monadic backward induction (2021)")," (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/CUP_JFP/status/1457060107087450115"},"Tweet"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/scala/comments/qs52h2/what_exactly_is_functional_programming_and_its/"},"What exactly is functional programming (and it's benefits)? (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cambridge.org/core/journals/journal-of-functional-programming"},"Journal of Functional Programming")," (",(0,i.kt)("a",{parentName:"li",href:"https://www.cambridge.org/core/blog/2021/11/11/journal-of-functional-programming-moving-to-open-access/"},"Goes Open Access"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29218202"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=UqwLn2OyQ_E"},"Algebraic Data Types in 10 Minutes \u2013 Daniel Rogozin (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.oxij.org/2012/01/16/the-decent-way-to-learn-functional-programming/"},"The Decent Way to Learn Functional Programming (2012)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.cl.cam.ac.uk/~jdy22/papers/lightweight-higher-kinded-polymorphism.pdf"},"Lightweight higher-kinded polymorphism")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://thma.github.io/posts/2021-12-27-Implementing-a-functional-language-with-Graph-Reduction.html"},"Implementing a Functional Language with Graph Reduction (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://thma.github.io/posts/2021-01-17-Whats-awesome-about-functional-programming.html"},"What's awesome about functional programming (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/rsce6j/why_are_imperative_programs_considered_faster/"},"Why are imperative programs considered faster than their functional counterparts? (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.sigplan.org/2022/01/13/provably-space-efficient-parallel-functional-programming/"},"Provably space-efficient parallel functional programming (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29925513"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikiversity.org/wiki/Foundations_of_Functional_Programming/The_%CE%BB-cube"},"Foundations of Functional Programming/The \u03bb-cube")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29948843"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/i-am-tom/papers"},"Functional Programming Papers Notes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Kindelia/HVM"},"High-order Virtual Machine (HVM)")," - Pure functional compile target that is lazy, non-garbage-collected and massively parallel. (",(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/haskell/comments/shewq7/hvm_a_nextgen_massively_parallel_betaoptimal/"},"Reddit"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30152714"},"HN"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30219452"},"HN"),") (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/zw8pgr/kindelia_hvm_massively_parallel_optimal"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://freecontent.manning.com/eric-normand-grokking-simplicity/"},"Eric Normand - Grokking Simplicity")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://patrickthebold.github.io/posts/what-color-is-your-monad/"},"What Color Is Your Monad (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30330909"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/haskell/comments/t3wumj/asyncawait_is_really_just_a_subset_of_monads_and/"},"Async/Await is really just a subset of monads and do-notation for imperative languages")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://elbear.com/how-to-use-monads-without-understanding-them.html"},"How to Use Monads without Understanding Them (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/haskell/comments/t8pksp/how_to_use_monads_without_understanding_them/"},"Reddit"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://user.it.uu.se/~pergu/papers/bitstreams.pdf"},"Functional Manipulation of Bit Streams")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/ProgrammingLanguages/comments/teskx2/does_rust_prevent_more_logic_bugs_than/"},"Does Rust prevent more logic bugs than statically-typed pure FP languages? (2022)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://engineering.dollarshaveclub.com/the-reader-monad-example-motivation-542c54ccfaa8"},"The Reader Monad \u2014 Example & Motivation (2018)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://chadnauseam.com/coding/random/how-side-effects-work-in-fp/"},"How side effects work in FP")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30762281"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.ploeh.dk/2022/03/28/monads/"},"Monads (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://lobste.rs/s/bip7oc/monads"},"Lobsters"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://matthewbutterick.com/chron/two-vexing-problems-in-functional-progamming.html"},"Two Vexing Problems in Functional Programming (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30878534"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/danieljharvey/functional-programming-is-boring"},"Functional Programming Is Boring")," - Short course on Functional Programming in Typescript."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/siraben/fp-notes"},"Notes on Functional Programming and related topics")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bgavran/Lens_Resources"},"Theory and Applications of Lenses and Optics")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tjammer/schmu"},"schmu")," - Small, mostly functional programming language which compiles to native code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=6qzWm_eoUXM"},"A Taste of Roc \u2014 Richard Feldman (2021)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/zilch-lang/zilch"},"Zilch")," - Statically-typed, low-level, functional programming language with some focus on runtime performance."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.ploeh.dk/2022/05/02/at-the-boundaries-applications-arent-functional/"},"At the boundaries, applications aren't functional (2022)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mbg/hindley-milner"},"Template for Hindley-Milner based languages")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/snowleopard/selective"},"Selective applicative functors")," - Abstraction between applicative functors and monads."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://uu-afp.github.io/"},"Utrecht Advanced Functional Programming Summer School")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/fpinbo"},"Functional Programming in Bologna")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/BartoszMilewski/Publications/blob/master/TheDaoOfFP/DaoFP.pdf"},"The Dao of Functional Programming (2022)")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/BartoszMilewski/DaoFP"},"Code"),") (",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=31466441"},"HN"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/teikalang/teika"},"Teika")," - Functional programming language."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/gren-lang/compiler"},"Gren")," - Functional programming language with carefully managed side-effects and a strong static type system. (",(0,i.kt)("a",{parentName:"li",href:"https://gren-lang.org/"},"Web"),") (",(0,i.kt)("a",{parentName:"li",href:"https://twitter.com/gren_lang"},"Twitter"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/fizruk/simple-grin"},"Grin")," - Simple functional language."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/lac-dcc/wyvern"},"Purely functional data structures in HVM"))),(0,i.kt)("h2",{id:"images"},"Images"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/nSrcdxd.png",alt:null})))}u.isMDXComponent=!0}}]);