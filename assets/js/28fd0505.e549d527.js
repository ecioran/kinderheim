"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[14396],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return f}});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function h(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=a.createContext({}),m=function(t){var e=a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},p=function(t){var e=m(t.components);return a.createElement(l.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,l=t.parentName,p=h(t,["components","mdxType","originalType","parentName"]),c=m(r),f=n,u=c["".concat(l,".").concat(f)]||c[f]||s[f]||o;return r?a.createElement(u,i(i({ref:e},p),{},{components:r})):a.createElement(u,i({ref:e},p))}));function f(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,i=new Array(o);i[0]=c;var h={};for(var l in e)hasOwnProperty.call(e,l)&&(h[l]=e[l]);h.originalType=t,h.mdxType="string"==typeof t?t:n,i[1]=h;for(var m=2;m<o;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},58853:function(t,e,r){r.r(e),r.d(e,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return h},metadata:function(){return m},toc:function(){return s}});var a=r(87462),n=r(63366),o=(r(67294),r(3905)),i=["components"],h={},l="Forth",m={unversionedId:"programming-languages/forth",id:"programming-languages/forth",title:"Forth",description:"Links",source:"@site/docs/programming-languages/forth.md",sourceDirName:"programming-languages",slug:"/programming-languages/forth",permalink:"/kinderheim/programming-languages/forth",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/forth.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Factor",permalink:"/kinderheim/programming-languages/factor"},next:{title:"Fortran",permalink:"/kinderheim/programming-languages/fortran"}},p={},s=[{value:"Links",id:"links",level:2}],c={toc:s};function f(t){var e=t.components,r=(0,n.Z)(t,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"forth"},"Forth"),(0,o.kt)("h2",{id:"links"},"Links"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.ultratechnology.com/forththoughts.htm"},"Introduction to Thoughtful Programming and the Forth Philosophy (2002)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.cpushack.com/2013/02/21/charles-moore-forth-stack-processors/"},"Charles Moore: From Forth to Stack Processors and Beyond (2013)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22865360"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://collapseos.org/forth.html"},"Collapse OS \u2014 Why Forth? (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://lobste.rs/s/t26h1l/collapse_os_why_forth"},"Lobsters"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Ashymad/fortraith"},"fortraith")," - Forth implemented in Rust trait system. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23501474"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.sandelman.ca/People/Michael_Richardson/network-forth.html"},"Network forth")," (",(0,o.kt)("a",{parentName:"li",href:"https://lobste.rs/s/nemayk/network_forth"},"Lobsters"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cbiffle/cfm"},"CFM")," - Forth-inspired processor targeting the Lattice ICE40 FPGA series, primarily targeting the Icoboard."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kragen/stoneknifeforth"},"StoneKnifeForth")," - Tiny self-hosted Forth implementation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://yosefk.com/blog/my-history-with-forth-stack-machines.html"},"My history with Forth & stack machines (2010)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.excamera.com/sphinx/fpga-j1.html"},"J1 Forth CPU")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25759576"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/zevv/zForth"},"zForth")," - Tiny, embeddable, flexible, compact Forth scripting language for embedded systems. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25772483"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/jkotlinski/durexforth"},"Modern C64 Forth")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://skilldrick.github.io/easyforth/"},"Easy Forth")," - Learn forth with REPL in the browser. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26164275"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.murphywong.net/hello/simple.htm"},"Simple Forth")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/howerj/subleq"},"16-bit SUBLEQ eForth")," - Contains a working Forth interpreter that runs on top of a SUBLEQ 16-bit machine."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/howerj/forth-cpu"},"Forth SoC Written in VHDL")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26182925"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://internet-janitor.itch.io/squad"},"Squad: Forth on Chip-8")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/davidjade/MiniForth"},"MiniForth")," - Minimal Forth Interpreter."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.forth.com/starting-forth/"},"Starting Forth")," - Introduction to the Forth Programming Language. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26677630"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/schani/forthlisp"},"Lisp in Forth")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26882117"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.forth.com/resources/forth-programming-language/"},"The Evolution of Forth")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26924304"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/snej/tails"},"Tails")," - Fast C++ Forth Core."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://niedzejkob.p4.team/bootstrap/miniforth/"},"Fitting a Forth in 512 Bytes (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27477599"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://niedzejkob.p4.team/bootstrap/branches/"},"No branches? No problem \u2014 a Forth assembler (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.thanassis.space/miniforth.html"},"Building a tiny FORTH for an Arduino UNO in one week (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ttsiodras/MiniForth"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://side-effects.neocities.org/technology/memory-model.html"},"Forth memory model")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/remko/waforth"},"WAForth")," - Forth Interpreter+Compiler for WebAssembly."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://niedzejkob.p4.team/bootstrap/exception-context/"},"Contextful exceptions with Forth metaprogramming (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://niedzejkob.p4.team/bootstrap/throw-catch/"},"How Forth implements exceptions (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tsoding/porth"},"Porth")," - Like Forth but in Python."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/uclnlp/d4"},"Differentiable Forth Interpreter")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://glitchbra.in/post/write-a-forth-in-haskell-intro/"},"Write a Forth in Haskell (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nimblemachines/muforth"},"muforth")," - Small, simple, fast, indirect-threaded code (ITC) Forth intended for use as a cross-compiler for microcontrollers and other embedded devices."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://web.archive.org/web/19990125085748/http://forth.gsfc.nasa.gov/"},"Space Related Applications of Forth (1998)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/skx/foth"},"foth")," - Tutorial-style FORTH implementation written in Go."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cesarblum/sectorforth"},"SectorForth")," - 16-bit x86 Forth that fits in a 512-byte boot sector."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://wiki.c2.com/?ForthVsLisp"},"Forth vs Lisp")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29243476"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nineties/planckforth"},"PlanckForth: Bootstrapping an Interpreter from Handwritten 1KB Binary")," (",(0,o.kt)("a",{parentName:"li",href:"https://lobste.rs/s/ti8tq3/bootstrapping_forth_interpreter_from"},"Lobsters"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Reschivon/movForth"},"MovForth")," - Compiler for the Forth language using LLVM."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/larsbrinkhoff/lbForth"},"lbForth")," - Self-hosting metacompiled Forth, bootstrapping from a few lines of C."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/microCore-VHDL/microCore"},"microCore")," - Hardware/software co-design environment based on Forth and VHDL."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mikewarot/stoical"},"STOICAL")," - Forth like language, but better."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tabemann/zeptoforth"},"zeptoforth")," - Cortex-M Forth, currently targeted at the Raspberry Pi Pico."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/chmykh/apl-life"},"Conway's Game of Life in APL in Forth"))))}f.isMDXComponent=!0}}]);