"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[97777],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=r.createContext({}),s=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=s(a),u=i,k=h["".concat(m,".").concat(u)]||h[u]||c[u]||n;return a?r.createElement(k,o(o({ref:t},p),{},{components:a})):r.createElement(k,o({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=h;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<n;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},16607:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=a(87462),i=a(63366),n=(a(67294),a(3905)),o=["components"],l={},m="CPU",s={unversionedId:"hardware/cpu/cpu",id:"hardware/cpu/cpu",title:"CPU",description:"Links",source:"@site/docs/hardware/cpu/cpu.md",sourceDirName:"hardware/cpu",slug:"/hardware/cpu/",permalink:"/kinderheim/hardware/cpu/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/hardware/cpu/cpu.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Circuit design",permalink:"/kinderheim/hardware/circuit-design"},next:{title:"AMD",permalink:"/kinderheim/hardware/cpu/amd"}},p={},c=[{value:"Links",id:"links",level:2}],h={toc:c};function u(e){var t=e.components,a=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"cpu"},"CPU"),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://riscv.org/"},"RISC-V")," - Free and Open RISC Instruction Set Architecture."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.jessfraz.com/post/digging-into-risc-v-and-how-i-learn-new-things/"},"Digging into RISC-V and how I learn new things (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://shakti.org.in/"},"SHAKTI")," - Open-source Processor Development Ecosystem."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://djhworld.github.io/post/2019/05/21/i-dont-know-how-cpus-work-so-i-simulated-one-in-code/"},"I don't know how CPUs work so I simulated one in code (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/djhworld/simple-computer"},"Simple Computer")," - Whilst reading But How Do It Know? by J. Clark Scott I felt compelled to write something to simulate the computer the book describes."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/larsbrinkhoff/awesome-cpus"},"Awesome CPU and MCU documentation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=yl8vPW5hydQ"},"How do CPUs read machine code? (2019)")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/programming/comments/rp3xtz/this_video_really_explains_well_how_the_cpu_reads/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/platomav/CPUMicrocodes"},"CPU Microcodes")," - Intel, AMD, VIA & Freescale CPU Microcode Repositories."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/b0rk/status/1215753312324157441"},"CPU Scheduling")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/travisdowns/uarch-bench"},"uarch-bench")," - Benchmark for low-level CPU micro-architectural features."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Ho3bCIJcMcc"},"Performance Analysis & Tuning on Modern CPU - Denis Bakhvalov (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.felixcloutier.com/x86/"},"x86 and amd64 instruction reference")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/wbenny/ia32-doc"},"IA32-doc")," - Project which aims to put as many definitions from the Intel Manual into machine-processable format as possible."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kaushikghose.wordpress.com/2020/01/30/cpu-caches-and-data-locality-a-small-demonstration/"},"CPU caches and data locality: a small demonstration (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/4m2s8f/cpu_caches_data_locality_small"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=xBjQVxVxOxc"},"What is a stack and how does it work? (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array"},"Branch prediction explained")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/zwegner/x86-info-term"},"x86-info-term")," - Terminal viewer for x86 instruction/intrinsic information using Python 3 + curses."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/clbx/Cosmic"},"Cosmic")," - Stellar simulated 8-bit computer architecture."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ARM-software/optimized-routines"},"Optimized implementations of various library functions for ARM architecture processors")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://queue.acm.org/detail.cfm?id=3388515"},"Chipping away at Moore's law. Modern CPUs are just chiplets connected together (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://opensourceweekly.org/issues/7/"},"SIMD instructions")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22833299"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.righto.com/2014/05/reverse-engineering-tl431-most-common.html"},"Reverse-engineering the TL431: the most common chip you've never heard of (2014)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=22885819"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kframework/X86-64-semantics"},"X86-64 Semantics")," - Complete and thoroughly tested formal semantics of x86-64 to date."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/google/highway"},"Efficient and performance-portable SIMD wrapper")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/sylefeb/status/1258808333265514497"},"The DooM-chip: no CPU, no opcodes, no instruction counter (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23123782"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.unicorn-engine.org/"},"Unicorn Engine")," - Lightweight multi-platform, multi-architecture CPU emulator framework. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/unicorn-engine/unicorn"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Battelle/afl-unicorn"},"afl-unicorn")," - Lets you fuzz any piece of binary that can be emulated by Unicorn Engine."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/archspec/archspec"},"Archspec")," - Library for detecting, labeling, and reasoning about microarchitectures."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://danluu.com/branch-prediction/"},"Branch prediction in CPUs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.nickwilcox.com/blog/arm_vs_x86_memory_model/"},"Examining ARM vs X86 Memory Models with Rust (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23659037"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/animetosho/jit_smc_test"},"Single-use JIT Performance on x86 Processors")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23711449"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/evilpenguin/ARMRef"},"ARMRef")," - iOS, iPadOS, and macOS application reference manual for ARM assembly instructions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://fossi-foundation.org/2020/06/30/skywater-pdk"},"Produce your own physical chips. For free. In the Open. (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23755693"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://stackoverflow.blog/2020/07/08/improving-performance-with-simd-intrinsics-in-three-use-cases/"},"Improving performance with SIMD intrinsics in three use cases (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23772302"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.righto.com/2020/07/inside-8086-processor-tiny-charge-pumps.html"},"Inside the 8086 processor, tiny charge pumps create a negative voltage (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://eli.thegreenplace.net/2020/an-intel-8080-assembler-and-online-simulator/"},"An Intel 8080 assembler and online simulator (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/eembc/coremark"},"CoreMark")," - Industry-standard benchmark that measures the performance of central processing units (CPU) and embedded microcrontrollers (MCU)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=z6c3vzIGo9o"},"How Extreme Ultraviolet Lithography works (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/simd-everywhere/simde"},"SIMDe")," - Implementations of SIMD instruction sets for systems which don't natively support them. (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24048562"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cs.binghamton.edu/~dima/cs522_05/itanium.pdf"},"Itanium Processor Microarchitecture (2000)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/intel/haxm"},"Intel Hardware Accelerated Execution Manager (HAXM)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/DLTcollab/sse2neon"},"sse2neon")," - C/C++ header file that converts Intel SSE intrinsics to Arm/Aarch64 NEON intrinsics."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.imec-int.com/en/articles/view-logic-technology-roadmap"},"Toward the 1nm Technology Generation: Imec Roadmap for Logic Technology (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gperftools.github.io/gperftools/cpuprofile.html"},"Gperftools CPU Profiler")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/vscode-js-profile-visualizer"},"VSCode JS Profile Visualizer")," - Custom editor for viewing .cpuprofile files in VS Code. Pairs well with new JavaScript debugger."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://keleshev.com/ldm-my-favorite-arm-instruction/"},"LDM: My Favorite ARM Instruction (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=24785357"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.moritz.systems/blog/how-debuggers-work-getting-and-setting-x86-registers-part-1/"},"How Debuggers Work: Getting and Setting x86 Registers (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.taiwansemi.com/"},"Taiwan Semiconductor")," - Taiwanese multinational semiconductor contract manufacturing and design company."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jlgreathouse/AMD_IBS_Toolkit"},"AMD Research Instruction Based Sampling Toolkit")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/MerryMage/dynarmic"},"Dynarmic")," - Dynamic recompiler for ARM."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.righto.com/2020/11/reverse-engineering-carry-lookahead.html"},"Reverse-engineering the carry-lookahead circuit in the Intel 8008 processor (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25029484"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://community.arm.com/developer/ip-products/processors/b/processors-ip-blog/posts/memory-model-tool-morello-and-some-memory-tagging"},"ARM Memory Model Tool: Morello (and Some Memory Tagging) (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/opencog/atomspace/blob/master/opencog/sheaf/docs/ram-cpu.pdf"},"Graphs, Metagraphs, RAM, CPU: HyperGraphs are more memory efficient than graphs (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jamesallworth.medium.com/intels-disruption-is-now-complete-d4fa771f0f2c"},"Intel's disruption is now complete (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25092721"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/kenshirriff/status/1327021630636212224"},"ARM processor history (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bitdefender/bddisasm"},"Bitdefender disassembler")," - Lightweight, x86/x64 only instruction decoder."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://book.easyperf.net/perf_book"},"Performance Analysis and Tuning on Modern CPUs book")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/dendibakh/perf-book"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=4oFOpDflJMA"},"Under the hood of a CPU: Reverse Engineering the P6 microcode | Peter Bosch (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=R2SdSLCMKEA"},"2020 Wheeler Lecture: The Future of Microprocessors")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/glouw/c8c"},"c8c")," - Aims to be a small typeless programming language for the CHIP-8 virtual machine."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/visrealm/vrcpu"},"vrCPU")," - Code, documentation, schematics, notes for my Ben Eater inspired breadboard computer and emulator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://randomascii.wordpress.com/2020/11/29/arm-and-lock-free-programming/"},"ARM and Lock-Free Programming (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://debugger.medium.com/why-is-apples-m1-chip-so-fast-3262b158cba2"},"Why Is Apple\u2019s M1 Chip So Fast? (2020)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25328292"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rgujju/STM32-projects"},"Collection of information about ARM cortex-M")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25381537"},"Ask HN: How did Apple manage to create such a better chip than Intel? (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://sandsoftwaresound.net/arm-cortex-a72-fetch-and-branch-processing/"},"ARM Cortex-A72 fetch and branch processing (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.wired.com/story/secret-history-of-the-first-microprocessor-f-14/"},"The Secret History of the First Microprocessor, the F-14, and Me (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/xoreaxeaxeax/sandsifter"},"sandsifter")," - x86 processor fuzzer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gist.github.com/dougallj/7a75a3be1ec69ca550e7c36dc75e0d6f"},"Undocumented arm64 ISA extension present on the Apple M1")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/programming/comments/km76pz/undocumented_arm64_isa_extension_present_on_the/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/skyzh/mips-simulator"},"MIPS-Simulator")," - Functional MIPS CPU simulator implemented in Haskell."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2012.11473"},"From microops to abstract resources: constructing simpler CPU performance models (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tiarkrompf.github.io/notes/?/lets-build-a-microprocessor/"},"Let's Build a Microprocessor!")," - From NAND to RISC, using JavaScript as a HDL."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/thenifty/neon-guide"},"ARM NEON intrinsics guide")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ARM-software/asl-interpreter"},"ASL Interpreter")," - Example implementation of Arm's Architecture Specification Language (ASL). (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/alastairreid/asl-interpreter"},"Fork"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://corellium.com/"},"Corellium")," - ARM Device Virtualization. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/corellium"},"GitHub"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://siliconpr0n.org/map/"},"Siliconpr0n: High Resolution Chip Maps")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=25964865"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.flickr.com/photos/130561288@N04/albums"},"Fritzchens Fritz's Albums")," - Gorgeous high resolution die shots of (mostly) modern chips."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/79plp4/how_much_are_non_x86_arm_platforms_used"},"Lobsters: How much are non x86/arm platforms used? (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/0n1shi/mipsemu"},"MIPS Emulator written in Go")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cpushack.com/"},"The CPU Shack")," - History of Microprocessors & CPU Techo."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.cpushack.com/2021/02/21/the-486-cpu-era-the-birth-of-overclocking-part-1/"},"The 486 CPU Era \u2013 The Birth of Overclocking (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.techspot.com/article/1821-how-cpus-are-designed-and-built/"},"How CPUs are Designed and Built (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.anandtech.com/show/16584/arm-announces-armv9-architecture"},"Arm Announces Armv9 Architecture: SVE2, Security, and the Next Decade (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=26638091"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pspdfkit.com/blog/2021/our-journey-to-arm/"},"Our Journey to ARM | PSPDFKit (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/halvarflake/status/1381567750733238272"},"Understanding modern state-of-the-art branch predictor (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ARM-software/abi-aa"},"Application Binary Interface for the Arm Architecture")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=jRZDnetjGuo"},"A CPU With Just One Instruction (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/copy/v86/"},"v86")," - Emulates an x86-compatible CPU and hardware."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cs.stanford.edu/people/eroberts/courses/soco/projects/risc/risccisc/"},"RISC vs. CISC")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://eli.thegreenplace.net/2011/02/04/where-the-top-of-the-stack-is-on-x86/"},"Where the top of the stack is on x86 (2011)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27077173"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=vgPFzblBh7w&list=PL8t1FdN2Tj3ZVAzTY-FvsS0qy-mEfRdoj"},"Architecture All Access: Modern CPU Architecture (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://eclecticlight.co/2021/05/17/how-m1-macs-feel-faster-than-intel-models-its-about-qos/"},"How M1 Macs feel faster than Intel models: it\u2019s about QoS (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27182244"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/chip-red-pill/uCodeDisasm"},"UCodeDisasm: Intel Atom Disassembler")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cpufun.substack.com/p/atomics-in-aarch64"},"Atomics in AArch64 (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cpufun.substack.com/"},"CPU Fun Blog")," - Intended to cover various subjects related to the low-level interactions of software and hardware."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.px.dev/cpu-profiling/"},"Building an Always-On CPU Profiler (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://incoherency.co.uk/blog/stories/scamp-lives.html"},"Scamp \u2013 a homebrew 16-bit CPU (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27339088"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/oldnewthing/20210629-00/?p=105378"},"What should the CPU usage be of a fully-loaded CPU that has been throttled? (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27725286"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://travisdowns.github.io/blog/2021/06/17/rip-zero-opt.html"},"Your CPU May Have Slowed Down on Wednesday (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27588258"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.netmeister.org/blog/cpu-pinning-and-sets.html"},"CPU Pinning and CPU Sets (2020)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.nature.com/articles/s41586-021-03625-w"},"A natively flexible 32-bit Arm microprocessor (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27910621"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.anandtech.com/show/16837/plasticarm-get-your-next-cpu-without-silicon"},"PlasticArm: Get Your Next CPU, Made Without Silicon (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/ljgsb5/plasticarm_get_your_next_cpu_made_without"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mazzo.li/posts/value-speculation.html"},"Beating the L1 cache with value speculation (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=27929600"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/trascendentale/status/1418505269924016128"},"Tweet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.cri.epita.fr/post/2021-07-29-hunting-a-bug-in-the-i40e-intel-driver/"},"Hunting a bug in the i40e Intel driver (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://semianalysis.com/tesla-dojo-ai-super-computer-unique-packaging-and-chip-design-allow-an-order-magnitude-advantage-over-competing-ai-hardware/"},"An inside look at the custom CPUs in Tesla's Dojo Supercomputer (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28251396"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/TrungTPhan/status/1429464889307762688"},"ASML business breakdown (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://spectrum.ieee.org/next-gen-chips-will-be-powered-from-below"},"Next-gen chips will be powered from below (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28337836"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=IS5ycm7VfXg"},"Upgraded Homemade Silicon Chips (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://store.steampowered.com/app/1444480/Turing_Complete/"},"Turing Complete Game")," - Game where you build a CPU and assembly language from circuits."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/stong/how-to-exploit-a-double-free"},"A bug that doesn\u2019t exist on x86: Exploiting an ARM-only race condition")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=28996500"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.cpushack.com/2021/11/04/the-soviet-1801vm2-lsi-11-processor/"},"The Soviet 1801VM2 LSI-11 Processor (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29114087"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ceramichacker.com/blog/1-1x-hardcaml-mips-intro-what-and-why"},"Designing a MIPS CPU in Hardcaml")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29105348"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.regehr.org/archives/2173"},"A Close Look at a Spinlock (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.robertelder.org/how-to-make-a-cpu/"},"How to Make a CPU \u2013 A Simple Picture Based Explanation (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29175402"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://abhaynayar.com/blog/chip8-in-jack.html"},"Implementing CHIP-8 in Jack (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/abhaynayar/n2t-wasm"},"n2t-wasm")," - Emulator for the nand2tetris computer (Hack CPU)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hlandau/memu"},"memu")," - ARMv8-M/Cortex-M emulator/simulator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jes/scamp-cpu"},"SCAMP CPU")," - Homebrew 16-bit CPU with a homebrew Unix-like-ish operating system. (",(0,n.kt)("a",{parentName:"li",href:"https://incoherency.co.uk/scamp/"},"Web"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ncatelli/mainspring"},"mainspring")," - CPU and device simulation framework focused on extensibility and flexibility of hardware layouts."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://semiengineering.com/why-its-so-difficult-and-costly-to-secure-chips/"},"Why It\u2019s So Difficult \u2013 and Costly \u2013 To Secure Chips (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29417927"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://muratbuffalo.blogspot.com/2021/12/graviton2-and-graviton3.html"},"Graviton2 and Graviton3 (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29444746"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=espRmO41Bg4"},"Reverse Engineering the M1 (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://alastairreid.github.io/uses-for-isa-specs/"},"What can you do with an ISA specification? (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jdah/jdh-8"},"JDH-8")," - Fully custom 8-bit minicomputer with a unique architecture."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/dendibakh/perf-ninja"},"Performance Ninja Class")," - Online course where you can learn to find and fix low-level performance issues, for example CPU cache misses and branch mispredictions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29605828"},"Ask HN: Are we entering an ARM era? (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://netflixtechblog.com/predictive-cpu-isolation-of-containers-at-netflix-91f014d856c7"},"Predictive CPU isolation of containers at Netflix (2019)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/katef/eurorack-cpu"},"CPU implemented in an analog modular synthesizer")," (",(0,n.kt)("a",{parentName:"li",href:"https://twitter.com/thingskatedid/status/1476679065411022849"},"Tweet"),") (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29743704"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pkolaczk.github.io/server-slower-than-a-laptop/"},"A single line of code made a 24-core server slower than a laptop (2021)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29747921"},"HN"),") (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/programming/comments/rszk63/how_a_single_line_of_code_made_a_24core_server/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://eclecticlight.co/2022/01/03/power-frequency-management-how-m1-e-cores-win/"},"Power, frequency, management: how M1 E cores win (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29778990"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/X0rg/CPU-X"},"CPU-X")," - Free software that gathers information on CPU, motherboard and more."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Pa_l3aHCoGc"},"Alex Blewitt - Understanding CPU microarchitecture (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ccs.neu.edu/home/ntuck/courses/2021/01/cs3650/asm/x86-64-sysv-abi.pdf"},"System V Application Binary Interface (2020")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30380168"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://lwn.net/SubscriberLink/884876/ba79f0b75e086321/"},"Thoughts on Intel software-defined silicon (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30394918"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://grsecurity.net/amd_branch_mispredictor_just_set_it_and_forget_it"},"The AMD Branch (Mis)predictor: Just Set it and Forget it (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cs.stanford.edu/people/shadjis/blas.html"},"BLAS-level CPU Performance in 100 Lines of C")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30509893"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/howardlau1999/yatcpu"},"Simple three-stage pipeline RISC-V implementation written in Chisel 3 HDL with support for AXI4-Lite")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pico-8.fandom.com/wiki/CPU"},"Pico-8: CPU")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tlkh.dev/benchmarking-the-apple-m1-max"},"Benchmarking the Apple M1 Max (2021)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.apple.com/newsroom/2022/03/apple-unveils-m1-ultra-the-worlds-most-powerful-chip-for-a-personal-computer/"},"Apple M1 Ultra (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30604470"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AsahiLinux/docs/wiki/Introduction-to-Apple-Silicon"},"Introduction to Apple Silicon")," (",(0,n.kt)("a",{parentName:"li",href:"https://lobste.rs/s/gy2tsn/introduction_apple_silicon"},"Lobsters"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RRZE-HPC/pycachesim"},"pycachesim")," - Python Cache Hierarchy Simulator. Accurately simulate the caching (allocation/hit/miss/replace/evict) behavior of all cache levels found in modern processors."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.highcaffeinecontent.com/blog/20220325-Intel-Virtualization-and-Apple-Silicon"},"Intel Virtualization and Apple Silicon (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30812855"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://spectrum.ieee.org/single-chip-processors-have-reached-their-limits"},"Single-Chip Processors Have Reached Their Limits (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30908908"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Granulate/gprofiler"},"gProfiler")," - System-wide profiler, combining multiple sampling profilers to produce unified visualization of what your CPU is spending time on."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mikeroyal/Apple-Silicon-Guide"},"Apple Silicon Guide")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redpanda.com/blog/aws-graviton-2-arm-vs-x86-comparison/"},"Evaluating Graviton 2 for data-intensive applications: Arm vs. Intel comparison (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=30923153"},"HN"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://johnysswlab.com/crash-course-introduction-to-parallelism-multithreading/"},"Crash course introduction to parallelism: Multithreading (2022)")," (",(0,n.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/cpp/comments/u0nwnl/for_beginners_a_crash_course_introduction_to/"},"Reddit"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/u-root/cpu"},"cpu")," - CPU command in Go, inspired by the Plan 9 CPU command."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://www.righto.com/2022/04/inside-apple-1s-shift-register-memory.html"},"Inside the Apple-1's shift-register memory (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://grsecurity.net/amd_branch_mispredictor.pdf"},"The AMD Branch (Mis)predictor: New Types and Methods of Straight-Line Speculation (SLS) Vulnerabilities (2022)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/exuanbo/assembler-simulator"},"Assembler Simulator"),' - Simulator of 8-bit CPU using the "Samphire" Microprocessor Simulator instruction set.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://y86.js.org/"},"Y86 Emulator")," - Y86 pipeline CPU simulator in JavaScript. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/shuding/y86"},"Code"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pythonspeed.com/articles/cpu-limits-to-speed/"},"CPUs, cloud VMs, and noisy neighbors: the limits of parallelism (2022)"))))}u.isMDXComponent=!0}}]);