"use strict";(self.webpackChunkkinderheim=self.webpackChunkkinderheim||[]).push([[48013],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return u}});var r=a(67294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function n(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,i=function(t,e){if(null==t)return{};var a,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var m=r.createContext({}),p=function(t){var e=r.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):n(n({},e),t)),a},s=function(t){var e=p(t.components);return r.createElement(m.Provider,{value:e},t.children)},h={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var a=t.components,i=t.mdxType,o=t.originalType,m=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),c=p(a),u=i,f=c["".concat(m,".").concat(u)]||c[u]||h[u]||o;return a?r.createElement(f,n(n({ref:e},s),{},{components:a})):r.createElement(f,n({ref:e},s))}));function u(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=a.length,n=new Array(o);n[0]=c;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=t,l.mdxType="string"==typeof t?t:i,n[1]=l;for(var p=2;p<o;p++)n[p]=a[p];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4492:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return h}});var r=a(87462),i=a(63366),o=(a(67294),a(3905)),n=["components"],l={title:"Coq"},m="[Coq](https://coq.inria.fr/)",p={unversionedId:"programming-languages/coq/coq",id:"programming-languages/coq/coq",title:"Coq",description:"Links",source:"@site/docs/programming-languages/coq/coq.md",sourceDirName:"programming-languages/coq",slug:"/programming-languages/coq/",permalink:"/kinderheim/programming-languages/coq/",draft:!1,editUrl:"https://github.com/ecioran/kinderheim/docs/programming-languages/coq/coq.md",tags:[],version:"current",frontMatter:{title:"Coq"},sidebar:"tutorialSidebar",previous:{title:"ClojureScript",permalink:"/kinderheim/programming-languages/clojure/clojurescript"},next:{title:"C++",permalink:"/kinderheim/programming-languages/cpp/"}},s={},h=[{value:"Links",id:"links",level:2}],c={toc:h};function u(t){var e=t.components,a=(0,i.Z)(t,n);return(0,o.kt)("wrapper",(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"coq"},(0,o.kt)("a",{parentName:"h1",href:"https://coq.inria.fr/"},"Coq")),(0,o.kt)("h2",{id:"links"},"Links"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://coq.inria.fr/distrib/current/refman/index.html"},"Coq Docs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/UniMath/UniMath"},"UniMath")," - Coq library aims to formalize a substantial body of mathematics using the univalent point of view."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://math-comp.github.io/"},"Mathematical Components")," - Libraries of formalized mathematics developed using the Coq proof assistant. (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp"},"GitHub"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://math-comp.github.io/mcb/"},"Mathematical Components book")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/mcb"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/analysis"},"Mathematical Components compliant Analysis Library")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/QuickChick/QuickChick"},"QuickChick")," - Randomized Property-Based Testing Plugin for Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/lukaszcz/coqhammer"},"CoqHammer")," - Automated Reasoning Hammer Tool for Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-ext-lib/coq-ext-lib"},"coq-ext-lib")," - Library of Coq definitions, theorems, and tactics."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tchajed/coq-tricks"},"Tricks in Coq")," - Some tips, tricks, and features in Coq that are hard to discover."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/MetaCoq/metacoq"},"MetaCoq")," - Metaprogramming in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/antalsz/hs-to-coq"},"Convert Haskell source code to Coq source code")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-plv/fiat"},"Fiat")," - Deductive Synthesis of Abstract Data Types in a Proof Assistant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Lysxia/advent-of-coq-2018"},"Advent of Code 2018 in Coq")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=19194497"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mattam82/Coq-Equations"},"Equations")," - Function definition package for Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/stepchowfun/proofs"},"Proofs")," - Selection of formal developments in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.stephanboyer.com/post/134/my-hobby-proof-engineering"},"My hobby: proof engineering (2017)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ilyasergey/pnp"},"Programs and Proofs")," - Lecture notes for a short course on proving/programming in Coq via SSReflect."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/princeton-vl/CoqGym"},"CoqGym")," - Learning Environment for Theorem Proving with the Coq proof assistant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/sifive/Kami"},"Kami")," - DSL for designing Hardware in Coq, and the associated semantics and theorems for proving its correctness."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Ptival/PeaCoq"},"PeaCoq")," - Web-based front-end to the Coq proof assistant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-plv/kami"},"Kami")," - Platform for High-Level Parametric Hardware Specification and its Modular Verification."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://artagnon.com/articles/leancoq#main"},"Lean versus Coq: The cultural chasm")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/uhub/awesome-coq"},"Awesome Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/awesome-coq"},"Awesome Coq 2")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/clarus/coq-of-ocaml"},"coq-of-ocaml")," - Import OCaml programs to Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://poleiro.info/"},"Poleiro")," - Blog about Coq. (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/arthuraa/poleiro"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/coq-art"},"Coq'Art")," - Coq code and exercises from the Coq'Art book."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://poisson.chat/popl20/itrees.pdf"},"Interaction Trees - Representing Recursive and Impure Programs in Coq (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/achlipala/frap"},"Formal Reasoning About Programs")," - In-progress, open-source book by Adam Chlipala simultaneously introducing the Coq proof assistant and techniques for proving correctness of programs. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=21921795"},"HN"),") (",(0,o.kt)("a",{parentName:"li",href:"http://adam.chlipala.net/frap/"},"Web"),") (",(0,o.kt)("a",{parentName:"li",href:"https://frap.csail.mit.edu/main"},"MIT course"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/GeoCoq/GeoCoq"},"GeoCoq")," - Formalization of geometry in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2006.03525"},"Formalizing text editors in Coq (2020)")," (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=23454629"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/affeldt-aist/monae"},"Monadic equational reasoning in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq/ceps"},"Coq Enhancement Proposals")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://soap.coffee/~lthms/posts/ClightIntroduction.html"},"A Study of Clight and its Semantics")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://soap.coffee/~lthms/posts/MiniHTTPServer.html"},"Implementing and Certifying a Web Server in Coq (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://soap.coffee/~lthms/posts/RewritingInCoq.html"},"Rewriting in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ANSSI-FR/FreeSpec"},"FreeSpec")," - Framework for implementing, certifying, and executing impure computations in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://c9x.me/articles/trust/"},"How hard can you believe in your logic? (2020)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/thery/coqprime"},"CoqPrime")," - Prime numbers for Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/coqffi"},"coqffi")," - Automatically generates Coq FFI bindings to OCaml libraries."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/coqtail-math"},"Coqtail")," - Library of mathematical theorems and tools proved inside the Coq proof assistant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/DeepSpec/InteractionTrees"},"Interaction Trees")," - Library for Representing Recursive and Impure Programs in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/strub/elliptic-curves-ssr"},"Coq/SSReflect Library for Elliptic Curves")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cpitclaudel/alectryon"},"Alectryon")," - Library to process Coq snippets embedded in documents, showing goals and messages for each Coq sentence."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/logsem/cerise"},"Cerise")," - Formalisation of a capability machine and principles for reasoning about security properties."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Armael/coq-procrastination"},"coq-procrastination")," - Small Coq library for collecting side conditions and deferring their proof."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/finmap"},"Finite maps")," - Finite sets, finite maps, multisets and generic sets."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cpitclaudel/alectryon"},"Alectryon")," - Collection of tools for writing technical documents that mix Coq code and prose."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/dboulytchev/miniKanren-coq"},"Certified semantics for relational programming workout")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://madiot.fr/coq100/"},"100 famous theorems proved using Coq")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/coq100"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/akr/codegen"},"codegen plugin for Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tchajed/coq-record-update"},"Coq record update library")," - Automatically provides a generic way to update record fields."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/vzaliva/helix"},"HELIX")," - Formally verified operator language and rewriting engine for high-performance computing."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/bits"},"Bits")," - Formalization of bitset operations in Coq with a corresponding axiomatization and extraction to OCaml native integers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/affeldt-aist/infotheo"},"Coq formalization of information theory and linear error correcting codes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://jscoq.github.io/"},"jsCoq")," - Use Coq in Your Browser. (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/jscoq/jscoq"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.philipzucker.com/translating-z3-to-coq/"},"Translating My Z3 Tutorial to Coq (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Qj8dGo010zI"},"CoqPL: Verifying a compiler through equational means (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-contribs/coq-in-coq"},"Formalization of the Calculus of Constructions in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/uds-psl/coq-library-undecidability"},"Coq Library of Undecidability Proofs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-pdos/perennial"},"Perennial")," - Verifying concurrent crash-safe systems."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq/platform"},"Coq Platform")," - Multi platform setup for Coq, Coq libraries and tools."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.principiarewrite.com/"},"Whitehead and Russell\u2019s Principia rewritten in Coq")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/LogicalAtomist/principia"},"Code"),") (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29455527"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/algebra-tactics"},"Algebra Tactics")," - Experimental reflexive tactics for ring and field expressions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/choukh/Set-Theory"},"Coq encoding of ZFC and formalization of the textbook Elements of Set Theory")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/logsem/free-theorems-sl"},"Free Theorems from Separation Logic Specifications")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ejgallego/coq-plugin-template"},"Example of Coq Plugin using Dune")," - Contains a template for writing a Coq plugin using the Dune build system."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/arthuraa/extructures"},"Extensional Structures")," - Finite sets and maps for Coq with extensional equality."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/SSProve/ssprove"},"SSProve")," - Foundational framework for modular cryptographic proofs in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/TheoWinterhalter/ett-to-wtt"},"Eliminating Reflection from Type Theory")," - Coq formalisation of a translation from (an) extensional type theory to (a) weak type theory."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/xavierleroy/cdf-mech-sem"},"Mechanized semantics: the Coq development")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ejgallego/pycoq"},"PyCoq")," - Access Coq from Python."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/aslanix/SmallStepNI"},"Mechanization of a noninterference proof via a type system for a simple imperative language with a small-step semantics in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/TheoWinterhalter/formal-type-theory"},"Coq library formalizes dependent type theory in the style of Per Martin-L\xf6f")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/thery/hanoi"},"Hanoi tower in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/rafaelcgs10/W-in-Coq"},"W-in-Coq")," - Coq formalization of Damas-Milner type system and its algorithm W."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/foobar-land/coq-bonsai"},"coq-bonsai")," - Generate a fresh bonsai in your terminal. Written in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/Coq-Combi"},"Coq-Combi")," - Algebraic Combinatorics in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/codyroux/hoare-toy"},"Toy Hoare Logic Formalization for IMP")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2103.07543"},"Reasoning about the garden of forking paths (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/lastland/ClairvoyanceMonad"},"Coq Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Yosuke-Ito-345/Actuary"},"Formalization of the basic actuarial mathematics using Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/smtcoq/sniper"},"Sniper")," - Coq plugin that provides a new Coq tactic, snipe, that provides general proof automation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/smtcoq/smtcoq"},"SMTCoq")," - Communication between Coq and SAT/SMT solvers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/charguer/tlc"},"TLC")," - Library for Classical Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ivashkev/math-formalizations"},"Formalization of some elementary mathematical theories in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/pi8027/stablesort"},"Stable sort algorithms in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/CertiCoq/certicoq"},"CertiCoq")," - Compiler for Gallina, the specification language of the Coq proof assistant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/dunnl/tealeaves"},"Tealeaves")," - Coq library for proving theorems about syntax abstractly."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/julesjacobs/cgraphs"},"Connectivity Graphs Coq Development")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-plv/hemiola"},"Hemiola")," - Coq framework to support structural design and proof of hardware cache-coherence protocols."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/mczify"},"Mczify")," - Micromega tactics for Mathematical Components."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/hierarchy-builder"},"Hierarchy Builder")," - High level commands to declare a hierarchy based on packed classes."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://coq.inria.fr/opam/www/"},"Coq Package Index")," - Archive for all Coq related OPAM packages organized in various repositories. (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq/opam-coq-archive"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://danilafe.com/blog/coq_dawn/"},"Formalizing Dawn in Coq (2021)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/semantics"},"Semantics")," - Survey of semantics styles in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/appliedfm/vstyle"},"vstyle")," - Style guide for Coq. (",(0,o.kt)("a",{parentName:"li",href:"https://vstyle.readthedocs.io/en/latest/"},"Docs"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/aac-tactics"},"AAC Tactics")," - Coq plugin providing tactics for rewriting universally quantified equations, modulo associative (and possibly commutative) operators."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/slasser/vermillion"},"Vermillion")," - LL(1) parser generator verified in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/jonsterling/coq-domains"},"Coq Domains")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/goedel"},"Proof in Coq of the G\xf6del-Rosser 1st incompleteness theorem")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/LPCIC/coq-elpi"},"Coq-Elpi")," - Coq plugin embedding Elpi."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://yazko.github.io/Coq_Cheat_Sheet/Coq_notes.html"},"Cheat Sheet for Coq")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/YaZko/Coq_Cheat_Sheet"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/apery"},"Apery")," - Formal proof of the irrationality of zeta(3), the Ap\xe9ry constant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/minkiminki/Ordinal"},"Ordinal Numbers in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/snu-sf/promising-coq"},"Coq development of A Promising Semantics for Relaxed-Memory Concurrency")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Zdancewic/linearity"},"Coq Developments for Linear Types")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Zdancewic/coq-ext-lib"},"coq-ext-lib")," - Collection of theories and plugins that may be useful in other Coq developments."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/math-classes"},"Math Classes")," - Library of abstract interfaces for mathematical structures in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/corn"},"C-CoRN")," - Coq Repository at Nijmegen."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/robbertkrebbers/ch2o"},"ch2o")," - Aims at formalizing novel features of the ISO C11 standard of the C programming language."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/atbr"},"ATBR")," - Coq library and tactic for deciding Kleene algebras."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/multinomials"},"Multinomials")," - Multivariate polynomial Library for the Mathematical Components Library."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hal.inria.fr/hal-03372247"},"Efficient Extensional Binary Tries (2021)")," (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/xavierleroy/canonical-binary-tries"},"Code"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/unicoq/unicoq"},"UniCoq")," - Enhanced unification algorithm for Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ppedrot/ll-coq"},"Phase Semantics")," - Some Coq formalizations of Linear Logic."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/CertiGraph/CertiGraph"},"CertiGraph")," - Library for verifying graph-manipulating programs. Powered by Coq and VST. Compatible with CompCert."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/damien-pous/coinduction"},"Coinduction")," - Library for doing proofs by (enhanced) coinduction."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tchajed/coq-tactical"},"Tactical")," - Library of Coq proof automation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/huffman"},"Huffman")," - Correctness proof of the Huffman coding algorithm in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/vrahli/NuprlInCoq"},"Nuprl's type theory in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ecranceMERCE/trakt"},"Trakt")," - Generic goal preprocessing tool for proof automation tactics in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/plclub/metalib"},"metalib")," - Penn Locally Nameless Metatheory Library."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/tutorial_material"},"Scripts associated to tutorials for mathcomp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/accordproject/ergo"},"Ergo")," - Language for Smart Legal Contracts. (",(0,o.kt)("a",{parentName:"li",href:"https://accordproject.org/projects/ergo/"},"Web"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/artagnon/bonak"},"Bonak")," - Research project that formalizes semi-cubical types in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://softwarefoundations.cis.upenn.edu/lf-current/Imp.html"},"Imp: Simple Imperative Programs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-pdos/mcqc"},"Monadic Coq Compiler")," - Alternative Coq compiler, by extraction to C++17. Written in Haskell."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tsoding/Noq"},"Noq")," - Simple expression transformer that is not Coq. (",(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=LjI8-JyR864"},"Dev Stream"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/clarus/falso"},"Falso")," - Proof of false in Coq. (",(0,o.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=9259790"},"HN"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/clarus/coq-chick-blog"},"ChickBlog")," - Blog engine written and proven in Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://prg.is.titech.ac.jp/wp-content/uploads/2022/03/saito2022ppl.pdf"},"Practical Aspects of Monadic Equational Reasoning in Coq (2022)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/weakmemory/fairness"},"Making Weak Memory Models Fair using Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/damien-pous/relation-algebra"},"Relation Algebra for Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/affeldt-aist/coq-robot"},"Mathematics of Rigid Body Transformationss using Coq and MathComp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://sigtbd.csail.mit.edu/pubs/2022/sigtbd22-paper7.pdf"},"Country-Fried Coq: Overly- Formalized Nonstandard Arithmetic (2022)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/hydra-battles"},"Hydras & Co")," - Variations on Kirby & Paris' hydra battles and other entertaining math in Coq (collaborative, documented, includes exercises)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Event-Structures/event-struct"},"Mechanized Theory of Event Structures")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tchajed/coq-classes"},"Few Coq typeclasses")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Mtac2/Mtac2"},"Mtac2")," - Typed tactic language for Coq. (",(0,o.kt)("a",{parentName:"li",href:"https://plv.mpi-sws.org/mtac/"},"Paper"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/autosubst"},"Autosubst")," - Library for the Coq proof assistant which provides automation for formalizing syntactic theories with variable binders."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-pdos/argosy"},"Argosy")," - Verifying layered storage systems with recovery refinement."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/coq-performance-tests"},"Coq Performance Tests")," - Library of Coq source files testing for performance regressions on Coq."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/wouter-swierstra/xmonad"},"xmonad in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/EngineeringSoftware/mcoq"},"mCoq")," - Mutation analysis tool for Coq verification projects."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mit-plv/bedrock2"},"bedrock2")," - Work-in-progress language and compiler for verified low-level programming."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/JasonGross/coq-scripts"},"Useful scripts for dealing with Coq files")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ejgallego/coq-universe"},"Coq Universe")," - Aim to provide a composed build of all active Coq developments in existence."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/math-comp/odd-order"},"Formal proof of the Odd Order Theorem in Coq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/paramcoq"},"Paramcoq")," - Coq plugin providing commands for generating parametricity statements."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/coq-community/gaia"},"Gaia")," - Implementation of books from Bourbaki's Elements of Mathematics in Coq.")))}u.isMDXComponent=!0}}]);